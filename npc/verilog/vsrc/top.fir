;buildInfoPackage: chisel3, version: 3.2.8, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit top : 
  module BEQ : 
    input clock : Clock
    input reset : Reset
    output io : {flip inst_i : UInt<32>, flip inst_valid_i : UInt<1>, flip pc_i : UInt<32>, prdt_taken_o : UInt<1>, prdt_addr_o : UInt<32>}
    
    wire opcode : UInt<7> @[BEQ.scala 18:20]
    node _T = bits(io.inst_i, 6, 0) @[BEQ.scala 19:22]
    opcode <= _T @[BEQ.scala 19:10]
    node inst_type_branch = eq(opcode, UInt<7>("h063")) @[BEQ.scala 21:32]
    node inst_jal = eq(opcode, UInt<7>("h06f")) @[BEQ.scala 22:32]
    node _T_1 = bits(io.inst_i, 31, 31) @[BEQ.scala 27:47]
    node _T_2 = bits(_T_1, 0, 0) @[Bitwise.scala 72:15]
    node _T_3 = mux(_T_2, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
    node _T_4 = bits(io.inst_i, 7, 7) @[BEQ.scala 27:63]
    node _T_5 = bits(io.inst_i, 30, 25) @[BEQ.scala 27:77]
    node _T_6 = bits(io.inst_i, 11, 8) @[BEQ.scala 27:96]
    node _T_7 = cat(_T_6, UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_8 = cat(_T_3, _T_4) @[Cat.scala 30:58]
    node _T_9 = cat(_T_8, _T_5) @[Cat.scala 30:58]
    node inst_b_type_imm = cat(_T_9, _T_7) @[Cat.scala 30:58]
    node _T_10 = bits(io.inst_i, 31, 31) @[BEQ.scala 28:47]
    node _T_11 = bits(_T_10, 0, 0) @[Bitwise.scala 72:15]
    node _T_12 = mux(_T_11, UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
    node _T_13 = bits(io.inst_i, 19, 12) @[BEQ.scala 28:63]
    node _T_14 = bits(io.inst_i, 20, 20) @[BEQ.scala 28:82]
    node _T_15 = bits(io.inst_i, 30, 21) @[BEQ.scala 28:97]
    node _T_16 = cat(_T_15, UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_17 = cat(_T_12, _T_13) @[Cat.scala 30:58]
    node _T_18 = cat(_T_17, _T_14) @[Cat.scala 30:58]
    node inst_j_type_imm = cat(_T_18, _T_16) @[Cat.scala 30:58]
    node _T_19 = bits(inst_b_type_imm, 31, 31) @[BEQ.scala 30:56]
    node _T_20 = and(inst_type_branch, _T_19) @[BEQ.scala 30:38]
    node prdt_taken = or(_T_20, inst_jal) @[BEQ.scala 30:62]
    wire prdt_imm : UInt
    prdt_imm <= inst_b_type_imm
    when inst_type_branch : @[BEQ.scala 33:26]
      prdt_imm <= inst_b_type_imm @[BEQ.scala 34:14]
      skip @[BEQ.scala 33:26]
    else : @[BEQ.scala 35:24]
      when inst_jal : @[BEQ.scala 35:24]
        prdt_imm <= inst_j_type_imm @[BEQ.scala 36:14]
        skip @[BEQ.scala 35:24]
    node _T_21 = mux(io.inst_valid_i, prdt_taken, UInt<1>("h00")) @[BEQ.scala 39:25]
    io.prdt_taken_o <= _T_21 @[BEQ.scala 39:19]
    node _T_22 = add(io.pc_i, prdt_imm) @[BEQ.scala 40:29]
    node _T_23 = tail(_T_22, 1) @[BEQ.scala 40:29]
    io.prdt_addr_o <= _T_23 @[BEQ.scala 40:18]
    
  module IFU : 
    input clock : Clock
    input reset : Reset
    output io : {flip flush_i : UInt<1>, flip flush_addr_i : UInt<32>, flip stall_i : UInt<5>, stallReq : UInt<1>, ifu : {pc : UInt<32>, inst_valid : UInt<1>, inst : UInt<32>}, en : UInt<1>, flip valid : UInt<1>, flip fault : UInt<1>, wen : UInt<4>, addr : UInt<32>, flip rdata : UInt<32>, wdata : UInt<32>}
    
    inst bpu of BEQ @[IF.scala 33:21]
    bpu.clock <= clock
    bpu.reset <= reset
    bpu.io.inst_i <= io.ifu.inst @[IF.scala 34:19]
    bpu.io.inst_valid_i <= io.ifu.inst_valid @[IF.scala 35:25]
    bpu.io.pc_i <= io.ifu.pc @[IF.scala 36:17]
    reg pc : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[IF.scala 38:21]
    node _T = bits(io.stall_i, 0, 0) @[IF.scala 41:32]
    node _T_1 = add(pc, UInt<3>("h04")) @[IF.scala 43:25]
    node _T_2 = tail(_T_1, 1) @[IF.scala 43:25]
    node _T_3 = mux(bpu.io.prdt_taken_o, bpu.io.prdt_addr_o, _T_2) @[IF.scala 42:21]
    node _T_4 = mux(_T, pc, _T_3) @[IF.scala 41:21]
    node nextPc = mux(io.flush_i, io.flush_addr_i, _T_4) @[IF.scala 40:21]
    pc <= nextPc @[IF.scala 44:8]
    node _T_5 = eq(io.valid, UInt<1>("h00")) @[IF.scala 47:20]
    io.stallReq <= _T_5 @[IF.scala 47:17]
    io.en <= UInt<1>("h01") @[IF.scala 50:15]
    io.wen <= UInt<1>("h00") @[IF.scala 51:15]
    io.addr <= pc @[IF.scala 52:15]
    io.wdata <= UInt<1>("h00") @[IF.scala 53:15]
    io.ifu.inst_valid <= io.valid @[IF.scala 56:25]
    io.ifu.pc <= pc @[IF.scala 57:25]
    node _T_6 = mux(io.valid, io.rdata, UInt<32>("h013")) @[IF.scala 58:21]
    io.ifu.inst <= _T_6 @[IF.scala 58:16]
    
  module IF_ID : 
    input clock : Clock
    input reset : Reset
    output io : {flip stall_i : UInt<4>, flip flush_i : UInt<1>, flip if_i : {pc : UInt<32>, inst_valid : UInt<1>, inst : UInt<32>}, id_o : {pc : UInt<32>, inst_valid : UInt<1>, inst : UInt<32>}}
    
    node _T = bits(io.stall_i, 0, 0) @[IF_ID.scala 20:24]
    node _T_1 = not(_T) @[IF_ID.scala 20:13]
    node _T_2 = bits(_T_1, 0, 0) @[IF_ID.scala 20:29]
    node en = or(_T_2, io.flush_i) @[IF_ID.scala 20:35]
    wire i_inst_addr : UInt<32> @[IF_ID.scala 22:25]
    node _T_3 = mux(io.flush_i, UInt<32>("h00"), io.if_i.pc) @[IF_ID.scala 23:21]
    i_inst_addr <= _T_3 @[IF_ID.scala 23:16]
    reg _T_4 : UInt, clock with : (reset => (reset, en)) @[IF_ID.scala 24:24]
    _T_4 <= i_inst_addr @[IF_ID.scala 24:24]
    io.id_o.pc <= _T_4 @[IF_ID.scala 24:15]
    wire inst : UInt<32> @[IF_ID.scala 26:18]
    node _T_5 = mux(io.flush_i, UInt<32>("h00"), io.if_i.inst) @[IF_ID.scala 27:14]
    inst <= _T_5 @[IF_ID.scala 27:9]
    reg _T_6 : UInt, clock with : (reset => (reset, en)) @[IF_ID.scala 28:26]
    _T_6 <= inst @[IF_ID.scala 28:26]
    io.id_o.inst <= _T_6 @[IF_ID.scala 28:17]
    node _T_7 = not(io.if_i.inst_valid) @[IF_ID.scala 30:40]
    node _T_8 = or(io.flush_i, _T_7) @[IF_ID.scala 30:37]
    node i_inst_valid = mux(_T_8, UInt<1>("h00"), io.id_o.inst_valid) @[IF_ID.scala 30:25]
    reg _T_9 : UInt<1>, clock with : (reset => (reset, en)) @[IF_ID.scala 31:32]
    _T_9 <= i_inst_valid @[IF_ID.scala 31:32]
    io.id_o.inst_valid <= _T_9 @[IF_ID.scala 31:23]
    
  module ID : 
    input clock : Clock
    input reset : Reset
    output io : {flip if_i : {pc : UInt<32>, inst_valid : UInt<1>, inst : UInt<32>}, stall_o : UInt<1>, illegal_inst_o : UInt<1>, flip inst_ex : UInt<32>, flip rd_ex : UInt<5>, flip access_rd_ex : UInt<1>, flip inst_mem : UInt<32>, flip rd_mem : UInt<5>, flip access_rd_mem : UInt<1>, last_rs1_rd : UInt<1>, last_rs2_rd : UInt<1>, last_two_rs1_rd : UInt<1>, last_two_rs2_rd : UInt<1>, load1 : UInt<1>, load2 : UInt<1>, rs1_raddr : UInt<5>, rs2_raddr : UInt<5>, flip reg1_rdata_i : UInt<32>, flip reg2_rdata_i : UInt<32>, idu_o : {inst_valid : UInt<1>, inst : UInt<32>, pc : UInt<32>, rd_waddr : UInt<5>, rd_we : UInt<1>, rs1_rdata : UInt<32>, rs2_rdata : UInt<32>, dec_imm : UInt<32>, dec_info_bus : UInt<19>}}
    
    node inst = mux(io.if_i.inst_valid, io.if_i.inst, UInt<32>("h01")) @[ID.scala 38:15]
    io.idu_o.inst <= inst @[ID.scala 39:16]
    io.idu_o.inst_valid <= io.if_i.inst_valid @[ID.scala 40:22]
    io.idu_o.pc <= io.if_i.pc @[ID.scala 41:14]
    io.idu_o.rs1_rdata <= io.reg1_rdata_i @[ID.scala 42:21]
    io.idu_o.rs2_rdata <= io.reg2_rdata_i @[ID.scala 43:21]
    node opcode = bits(inst, 6, 0) @[ID.scala 45:20]
    node rd = bits(inst, 11, 7) @[ID.scala 46:16]
    node rs1 = bits(inst, 19, 15) @[ID.scala 47:17]
    node rs2 = bits(inst, 24, 20) @[ID.scala 48:17]
    node funct7 = bits(inst, 31, 25) @[ID.scala 49:20]
    node funct3 = bits(inst, 14, 12) @[ID.scala 50:20]
    node inst_lui = eq(opcode, UInt<6>("h037")) @[ID.scala 53:35]
    node inst_auipc = eq(opcode, UInt<5>("h017")) @[ID.scala 53:35]
    node inst_jal = eq(opcode, UInt<7>("h06f")) @[ID.scala 53:35]
    node _T = eq(opcode, UInt<7>("h067")) @[ID.scala 53:35]
    node _T_1 = eq(funct3, UInt<1>("h00")) @[ID.scala 56:35]
    node inst_jalr = and(_T, _T_1) @[ID.scala 65:42]
    node _T_2 = eq(opcode, UInt<7>("h063")) @[ID.scala 53:35]
    node _T_3 = eq(funct3, UInt<1>("h00")) @[ID.scala 56:35]
    node inst_beq = and(_T_2, _T_3) @[ID.scala 66:41]
    node _T_4 = eq(opcode, UInt<7>("h063")) @[ID.scala 53:35]
    node _T_5 = eq(funct3, UInt<1>("h01")) @[ID.scala 56:35]
    node inst_bne = and(_T_4, _T_5) @[ID.scala 67:41]
    node _T_6 = eq(opcode, UInt<7>("h063")) @[ID.scala 53:35]
    node _T_7 = eq(funct3, UInt<3>("h04")) @[ID.scala 56:35]
    node inst_blt = and(_T_6, _T_7) @[ID.scala 68:41]
    node _T_8 = eq(opcode, UInt<7>("h063")) @[ID.scala 53:35]
    node _T_9 = eq(funct3, UInt<3>("h05")) @[ID.scala 56:35]
    node inst_bge = and(_T_8, _T_9) @[ID.scala 69:41]
    node _T_10 = eq(opcode, UInt<7>("h063")) @[ID.scala 53:35]
    node _T_11 = eq(funct3, UInt<3>("h06")) @[ID.scala 56:35]
    node inst_bltu = and(_T_10, _T_11) @[ID.scala 70:42]
    node _T_12 = eq(opcode, UInt<7>("h063")) @[ID.scala 53:35]
    node _T_13 = eq(funct3, UInt<3>("h07")) @[ID.scala 56:35]
    node inst_bgeu = and(_T_12, _T_13) @[ID.scala 71:42]
    node _T_14 = eq(opcode, UInt<2>("h03")) @[ID.scala 53:35]
    node _T_15 = eq(funct3, UInt<1>("h00")) @[ID.scala 56:35]
    node inst_lb = and(_T_14, _T_15) @[ID.scala 72:40]
    node _T_16 = eq(opcode, UInt<2>("h03")) @[ID.scala 53:35]
    node _T_17 = eq(funct3, UInt<1>("h01")) @[ID.scala 56:35]
    node inst_lh = and(_T_16, _T_17) @[ID.scala 73:40]
    node _T_18 = eq(opcode, UInt<2>("h03")) @[ID.scala 53:35]
    node _T_19 = eq(funct3, UInt<2>("h02")) @[ID.scala 56:35]
    node inst_lw = and(_T_18, _T_19) @[ID.scala 74:40]
    node _T_20 = eq(opcode, UInt<2>("h03")) @[ID.scala 53:35]
    node _T_21 = eq(funct3, UInt<3>("h04")) @[ID.scala 56:35]
    node inst_lbu = and(_T_20, _T_21) @[ID.scala 75:41]
    node _T_22 = eq(opcode, UInt<2>("h03")) @[ID.scala 53:35]
    node _T_23 = eq(funct3, UInt<3>("h05")) @[ID.scala 56:35]
    node inst_lhu = and(_T_22, _T_23) @[ID.scala 76:41]
    node _T_24 = eq(opcode, UInt<6>("h023")) @[ID.scala 53:35]
    node _T_25 = eq(funct3, UInt<1>("h00")) @[ID.scala 56:35]
    node inst_sb = and(_T_24, _T_25) @[ID.scala 77:40]
    node _T_26 = eq(opcode, UInt<6>("h023")) @[ID.scala 53:35]
    node _T_27 = eq(funct3, UInt<1>("h01")) @[ID.scala 56:35]
    node inst_sh = and(_T_26, _T_27) @[ID.scala 78:40]
    node _T_28 = eq(opcode, UInt<6>("h023")) @[ID.scala 53:35]
    node _T_29 = eq(funct3, UInt<2>("h02")) @[ID.scala 56:35]
    node inst_sw = and(_T_28, _T_29) @[ID.scala 79:40]
    node _T_30 = eq(opcode, UInt<5>("h013")) @[ID.scala 53:35]
    node _T_31 = eq(funct3, UInt<1>("h00")) @[ID.scala 56:35]
    node inst_addi = and(_T_30, _T_31) @[ID.scala 80:42]
    node _T_32 = eq(opcode, UInt<5>("h013")) @[ID.scala 53:35]
    node _T_33 = eq(funct3, UInt<2>("h02")) @[ID.scala 56:35]
    node inst_slti = and(_T_32, _T_33) @[ID.scala 81:42]
    node _T_34 = eq(opcode, UInt<5>("h013")) @[ID.scala 53:35]
    node _T_35 = eq(funct3, UInt<2>("h03")) @[ID.scala 56:35]
    node inst_sltiu = and(_T_34, _T_35) @[ID.scala 82:43]
    node _T_36 = eq(opcode, UInt<5>("h013")) @[ID.scala 53:35]
    node _T_37 = eq(funct3, UInt<3>("h04")) @[ID.scala 56:35]
    node inst_xori = and(_T_36, _T_37) @[ID.scala 83:42]
    node _T_38 = eq(opcode, UInt<5>("h013")) @[ID.scala 53:35]
    node _T_39 = eq(funct3, UInt<3>("h06")) @[ID.scala 56:35]
    node inst_ori = and(_T_38, _T_39) @[ID.scala 84:41]
    node _T_40 = eq(opcode, UInt<5>("h013")) @[ID.scala 53:35]
    node _T_41 = eq(funct3, UInt<3>("h07")) @[ID.scala 56:35]
    node inst_andi = and(_T_40, _T_41) @[ID.scala 85:42]
    node _T_42 = eq(opcode, UInt<5>("h013")) @[ID.scala 53:35]
    node _T_43 = eq(funct3, UInt<1>("h01")) @[ID.scala 56:35]
    node _T_44 = and(_T_42, _T_43) @[ID.scala 86:42]
    node _T_45 = eq(funct7, UInt<1>("h00")) @[ID.scala 59:35]
    node inst_slli = and(_T_44, _T_45) @[ID.scala 86:64]
    node _T_46 = eq(opcode, UInt<5>("h013")) @[ID.scala 53:35]
    node _T_47 = eq(funct3, UInt<3>("h05")) @[ID.scala 56:35]
    node _T_48 = and(_T_46, _T_47) @[ID.scala 87:42]
    node _T_49 = eq(funct7, UInt<1>("h00")) @[ID.scala 59:35]
    node inst_srli = and(_T_48, _T_49) @[ID.scala 87:64]
    node _T_50 = eq(opcode, UInt<5>("h013")) @[ID.scala 53:35]
    node _T_51 = eq(funct3, UInt<3>("h05")) @[ID.scala 56:35]
    node _T_52 = and(_T_50, _T_51) @[ID.scala 88:42]
    node _T_53 = eq(funct7, UInt<6>("h020")) @[ID.scala 59:35]
    node inst_srai = and(_T_52, _T_53) @[ID.scala 88:64]
    node _T_54 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_55 = eq(funct3, UInt<1>("h00")) @[ID.scala 56:35]
    node _T_56 = and(_T_54, _T_55) @[ID.scala 89:41]
    node _T_57 = eq(funct7, UInt<1>("h00")) @[ID.scala 59:35]
    node inst_add = and(_T_56, _T_57) @[ID.scala 89:63]
    node _T_58 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_59 = eq(funct3, UInt<1>("h00")) @[ID.scala 56:35]
    node _T_60 = and(_T_58, _T_59) @[ID.scala 90:41]
    node _T_61 = eq(funct7, UInt<6>("h020")) @[ID.scala 59:35]
    node inst_sub = and(_T_60, _T_61) @[ID.scala 90:63]
    node _T_62 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_63 = eq(funct3, UInt<1>("h01")) @[ID.scala 56:35]
    node _T_64 = and(_T_62, _T_63) @[ID.scala 91:41]
    node _T_65 = eq(funct7, UInt<1>("h00")) @[ID.scala 59:35]
    node inst_sll = and(_T_64, _T_65) @[ID.scala 91:63]
    node _T_66 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_67 = eq(funct3, UInt<2>("h02")) @[ID.scala 56:35]
    node _T_68 = and(_T_66, _T_67) @[ID.scala 92:41]
    node _T_69 = eq(funct7, UInt<1>("h00")) @[ID.scala 59:35]
    node inst_slt = and(_T_68, _T_69) @[ID.scala 92:63]
    node _T_70 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_71 = eq(funct3, UInt<2>("h03")) @[ID.scala 56:35]
    node _T_72 = and(_T_70, _T_71) @[ID.scala 93:42]
    node _T_73 = eq(funct7, UInt<1>("h00")) @[ID.scala 59:35]
    node inst_sltu = and(_T_72, _T_73) @[ID.scala 93:64]
    node _T_74 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_75 = eq(funct3, UInt<3>("h04")) @[ID.scala 56:35]
    node _T_76 = and(_T_74, _T_75) @[ID.scala 94:41]
    node _T_77 = eq(funct7, UInt<1>("h00")) @[ID.scala 59:35]
    node inst_xor = and(_T_76, _T_77) @[ID.scala 94:63]
    node _T_78 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_79 = eq(funct3, UInt<3>("h05")) @[ID.scala 56:35]
    node _T_80 = and(_T_78, _T_79) @[ID.scala 95:41]
    node _T_81 = eq(funct7, UInt<1>("h00")) @[ID.scala 59:35]
    node inst_srl = and(_T_80, _T_81) @[ID.scala 95:63]
    node _T_82 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_83 = eq(funct3, UInt<3>("h05")) @[ID.scala 56:35]
    node _T_84 = and(_T_82, _T_83) @[ID.scala 96:41]
    node _T_85 = eq(funct7, UInt<6>("h020")) @[ID.scala 59:35]
    node inst_sra = and(_T_84, _T_85) @[ID.scala 96:63]
    node _T_86 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_87 = eq(funct3, UInt<3>("h06")) @[ID.scala 56:35]
    node _T_88 = and(_T_86, _T_87) @[ID.scala 97:40]
    node _T_89 = eq(funct7, UInt<1>("h00")) @[ID.scala 59:35]
    node inst_or = and(_T_88, _T_89) @[ID.scala 97:62]
    node _T_90 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_91 = eq(funct3, UInt<3>("h07")) @[ID.scala 56:35]
    node _T_92 = and(_T_90, _T_91) @[ID.scala 98:41]
    node _T_93 = eq(funct7, UInt<1>("h00")) @[ID.scala 59:35]
    node inst_and = and(_T_92, _T_93) @[ID.scala 98:63]
    node _T_94 = eq(opcode, UInt<4>("h0f")) @[ID.scala 53:35]
    node _T_95 = eq(funct3, UInt<1>("h00")) @[ID.scala 56:35]
    node inst_fence = and(_T_94, _T_95) @[ID.scala 99:43]
    node inst_ecall = eq(inst, UInt<7>("h073")) @[ID.scala 100:25]
    node inst_ebreak = eq(inst, UInt<21>("h0100073")) @[ID.scala 101:26]
    node _T_96 = eq(opcode, UInt<4>("h0f")) @[ID.scala 53:35]
    node _T_97 = eq(funct3, UInt<1>("h01")) @[ID.scala 56:35]
    node inst_fence_i = and(_T_96, _T_97) @[ID.scala 102:45]
    node _T_98 = eq(opcode, UInt<7>("h073")) @[ID.scala 53:35]
    node _T_99 = eq(funct3, UInt<1>("h01")) @[ID.scala 56:35]
    node inst_csrrw = and(_T_98, _T_99) @[ID.scala 103:43]
    node _T_100 = eq(opcode, UInt<7>("h073")) @[ID.scala 53:35]
    node _T_101 = eq(funct3, UInt<2>("h02")) @[ID.scala 56:35]
    node inst_csrrs = and(_T_100, _T_101) @[ID.scala 104:43]
    node _T_102 = eq(opcode, UInt<7>("h073")) @[ID.scala 53:35]
    node _T_103 = eq(funct3, UInt<2>("h03")) @[ID.scala 56:35]
    node inst_csrrc = and(_T_102, _T_103) @[ID.scala 105:43]
    node _T_104 = eq(opcode, UInt<7>("h073")) @[ID.scala 53:35]
    node _T_105 = eq(funct3, UInt<3>("h05")) @[ID.scala 56:35]
    node inst_csrrwi = and(_T_104, _T_105) @[ID.scala 106:44]
    node _T_106 = eq(opcode, UInt<7>("h073")) @[ID.scala 53:35]
    node _T_107 = eq(funct3, UInt<3>("h06")) @[ID.scala 56:35]
    node inst_csrrsi = and(_T_106, _T_107) @[ID.scala 107:44]
    node _T_108 = eq(opcode, UInt<7>("h073")) @[ID.scala 53:35]
    node _T_109 = eq(funct3, UInt<3>("h07")) @[ID.scala 56:35]
    node inst_csrrci = and(_T_108, _T_109) @[ID.scala 108:44]
    node _T_110 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_111 = eq(funct3, UInt<1>("h00")) @[ID.scala 56:35]
    node _T_112 = and(_T_110, _T_111) @[ID.scala 109:41]
    node _T_113 = eq(funct7, UInt<1>("h01")) @[ID.scala 59:35]
    node inst_mul = and(_T_112, _T_113) @[ID.scala 109:63]
    node _T_114 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_115 = eq(funct3, UInt<1>("h01")) @[ID.scala 56:35]
    node _T_116 = and(_T_114, _T_115) @[ID.scala 110:42]
    node _T_117 = eq(funct7, UInt<1>("h01")) @[ID.scala 59:35]
    node inst_mulh = and(_T_116, _T_117) @[ID.scala 110:64]
    node _T_118 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_119 = eq(funct3, UInt<2>("h02")) @[ID.scala 56:35]
    node _T_120 = and(_T_118, _T_119) @[ID.scala 111:44]
    node _T_121 = eq(funct7, UInt<1>("h01")) @[ID.scala 59:35]
    node inst_mulhsu = and(_T_120, _T_121) @[ID.scala 111:66]
    node _T_122 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_123 = eq(funct3, UInt<2>("h03")) @[ID.scala 56:35]
    node _T_124 = and(_T_122, _T_123) @[ID.scala 112:43]
    node _T_125 = eq(funct7, UInt<1>("h01")) @[ID.scala 59:35]
    node inst_mulhu = and(_T_124, _T_125) @[ID.scala 112:65]
    node _T_126 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_127 = eq(funct3, UInt<3>("h04")) @[ID.scala 56:35]
    node _T_128 = and(_T_126, _T_127) @[ID.scala 113:41]
    node _T_129 = eq(funct7, UInt<1>("h01")) @[ID.scala 59:35]
    node inst_div = and(_T_128, _T_129) @[ID.scala 113:63]
    node _T_130 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_131 = eq(funct3, UInt<3>("h05")) @[ID.scala 56:35]
    node _T_132 = and(_T_130, _T_131) @[ID.scala 114:42]
    node _T_133 = eq(funct7, UInt<1>("h01")) @[ID.scala 59:35]
    node inst_divu = and(_T_132, _T_133) @[ID.scala 114:64]
    node _T_134 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_135 = eq(funct3, UInt<3>("h06")) @[ID.scala 56:35]
    node _T_136 = and(_T_134, _T_135) @[ID.scala 115:41]
    node _T_137 = eq(funct7, UInt<1>("h01")) @[ID.scala 59:35]
    node inst_rem = and(_T_136, _T_137) @[ID.scala 115:63]
    node _T_138 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_139 = eq(funct3, UInt<3>("h07")) @[ID.scala 56:35]
    node _T_140 = and(_T_138, _T_139) @[ID.scala 116:42]
    node _T_141 = eq(funct7, UInt<1>("h01")) @[ID.scala 59:35]
    node inst_remu = and(_T_140, _T_141) @[ID.scala 116:64]
    node inst_nop = eq(inst, UInt<5>("h013")) @[ID.scala 117:23]
    node inst_mret = eq(inst, UInt<30>("h030200073")) @[ID.scala 118:24]
    node inst_dret = eq(inst, UInt<31>("h07b200073")) @[ID.scala 119:24]
    node inst_type_load = eq(opcode, UInt<2>("h03")) @[ID.scala 53:35]
    node inst_sel_s_imm = eq(opcode, UInt<6>("h023")) @[ID.scala 53:35]
    node inst_sel_b_imm = eq(opcode, UInt<7>("h063")) @[ID.scala 53:35]
    node _T_142 = or(inst_mul, inst_mulh) @[ID.scala 125:35]
    node _T_143 = or(_T_142, inst_mulhsu) @[ID.scala 125:48]
    node _T_144 = or(_T_143, inst_mulhu) @[ID.scala 125:63]
    node _T_145 = or(_T_144, inst_div) @[ID.scala 125:77]
    node _T_146 = or(_T_145, inst_divu) @[ID.scala 125:89]
    node _T_147 = or(_T_146, inst_rem) @[ID.scala 125:102]
    node inst_type_muldiv = or(_T_147, inst_remu) @[ID.scala 125:114]
    node _T_148 = eq(opcode, UInt<5>("h013")) @[ID.scala 127:26]
    node rs1_imm = mux(_T_148, UInt<1>("h01"), UInt<1>("h00")) @[ID.scala 127:18]
    node _T_149 = or(rs1_imm, inst_lui) @[ID.scala 132:11]
    node _T_150 = or(_T_149, inst_auipc) @[ID.scala 132:23]
    node _T_151 = or(inst_and, inst_andi) @[ID.scala 134:12]
    node _T_152 = or(inst_or, inst_ori) @[ID.scala 135:11]
    node _T_153 = or(inst_sra, inst_srai) @[ID.scala 136:12]
    node _T_154 = or(inst_srl, inst_srli) @[ID.scala 137:12]
    node _T_155 = or(inst_xor, inst_xori) @[ID.scala 138:12]
    node _T_156 = or(inst_sltu, inst_sltiu) @[ID.scala 139:13]
    node _T_157 = or(inst_slt, inst_slti) @[ID.scala 140:12]
    node _T_158 = or(inst_sll, inst_slli) @[ID.scala 141:12]
    node _T_159 = or(inst_add, inst_addi) @[ID.scala 143:12]
    node _T_160 = cat(inst_lui, UInt<3>("h01")) @[Cat.scala 30:58]
    node _T_161 = cat(_T_159, inst_auipc) @[Cat.scala 30:58]
    node _T_162 = cat(_T_161, _T_160) @[Cat.scala 30:58]
    node _T_163 = cat(_T_158, inst_sub) @[Cat.scala 30:58]
    node _T_164 = cat(_T_156, _T_157) @[Cat.scala 30:58]
    node _T_165 = cat(_T_164, _T_163) @[Cat.scala 30:58]
    node _T_166 = cat(_T_165, _T_162) @[Cat.scala 30:58]
    node _T_167 = cat(_T_154, _T_155) @[Cat.scala 30:58]
    node _T_168 = cat(_T_152, _T_153) @[Cat.scala 30:58]
    node _T_169 = cat(_T_168, _T_167) @[Cat.scala 30:58]
    node _T_170 = cat(inst_auipc, _T_151) @[Cat.scala 30:58]
    node _T_171 = cat(UInt<2>("h00"), _T_150) @[Cat.scala 30:58]
    node _T_172 = cat(_T_171, _T_170) @[Cat.scala 30:58]
    node _T_173 = cat(_T_172, _T_169) @[Cat.scala 30:58]
    node dec_alu_info_bus = cat(_T_173, _T_166) @[Cat.scala 30:58]
    node _T_174 = cat(inst_jal, UInt<3>("h02")) @[Cat.scala 30:58]
    node _T_175 = cat(inst_blt, inst_bne) @[Cat.scala 30:58]
    node _T_176 = cat(_T_175, inst_beq) @[Cat.scala 30:58]
    node _T_177 = cat(_T_176, _T_174) @[Cat.scala 30:58]
    node _T_178 = cat(inst_bltu, inst_bge) @[Cat.scala 30:58]
    node _T_179 = cat(UInt<8>("h00"), inst_jalr) @[Cat.scala 30:58]
    node _T_180 = cat(_T_179, inst_bgeu) @[Cat.scala 30:58]
    node _T_181 = cat(_T_180, _T_178) @[Cat.scala 30:58]
    node dec_bjp_info_bus = cat(_T_181, _T_177) @[Cat.scala 30:58]
    node _T_182 = cat(inst_mul, UInt<3>("h03")) @[Cat.scala 30:58]
    node _T_183 = cat(inst_mulhu, inst_mulhsu) @[Cat.scala 30:58]
    node _T_184 = cat(_T_183, inst_mulh) @[Cat.scala 30:58]
    node _T_185 = cat(_T_184, _T_182) @[Cat.scala 30:58]
    node _T_186 = cat(inst_divu, inst_div) @[Cat.scala 30:58]
    node _T_187 = cat(UInt<8>("h00"), inst_remu) @[Cat.scala 30:58]
    node _T_188 = cat(_T_187, inst_rem) @[Cat.scala 30:58]
    node _T_189 = cat(_T_188, _T_186) @[Cat.scala 30:58]
    node dec_muldiv_info_bus = cat(_T_189, _T_185) @[Cat.scala 30:58]
    node _T_190 = bits(inst, 31, 20) @[ID.scala 179:7]
    node _T_191 = cat(inst_csrrw, UInt<3>("h04")) @[Cat.scala 30:58]
    node _T_192 = cat(inst_csrrs, inst_csrrwi) @[Cat.scala 30:58]
    node _T_193 = cat(_T_192, _T_191) @[Cat.scala 30:58]
    node _T_194 = cat(inst_csrrc, inst_csrrsi) @[Cat.scala 30:58]
    node _T_195 = cat(_T_190, inst_csrrci) @[Cat.scala 30:58]
    node _T_196 = cat(_T_195, _T_194) @[Cat.scala 30:58]
    node dec_csr_info_bus = cat(_T_196, _T_193) @[Cat.scala 30:58]
    node _T_197 = cat(inst_lb, UInt<3>("h05")) @[Cat.scala 30:58]
    node _T_198 = cat(inst_lbu, inst_lw) @[Cat.scala 30:58]
    node _T_199 = cat(_T_198, inst_lh) @[Cat.scala 30:58]
    node _T_200 = cat(_T_199, _T_197) @[Cat.scala 30:58]
    node _T_201 = cat(inst_sb, inst_lhu) @[Cat.scala 30:58]
    node _T_202 = cat(UInt<8>("h00"), inst_sw) @[Cat.scala 30:58]
    node _T_203 = cat(_T_202, inst_sh) @[Cat.scala 30:58]
    node _T_204 = cat(_T_203, _T_201) @[Cat.scala 30:58]
    node dec_mem_info_bus = cat(_T_204, _T_200) @[Cat.scala 30:58]
    node _T_205 = or(inst_fence, inst_fence_i) @[ID.scala 206:14]
    node _T_206 = cat(inst_ecall, UInt<3>("h06")) @[Cat.scala 30:58]
    node _T_207 = cat(inst_nop, inst_ebreak) @[Cat.scala 30:58]
    node _T_208 = cat(_T_207, _T_206) @[Cat.scala 30:58]
    node _T_209 = cat(inst_dret, inst_mret) @[Cat.scala 30:58]
    node _T_210 = cat(UInt<10>("h00"), _T_205) @[Cat.scala 30:58]
    node _T_211 = cat(_T_210, _T_209) @[Cat.scala 30:58]
    node dec_sys_info_bus = cat(_T_211, _T_208) @[Cat.scala 30:58]
    node inst_sel_u_imm = or(inst_lui, inst_auipc) @[ID.scala 216:33]
    node _T_212 = or(inst_addi, inst_slti) @[ID.scala 220:34]
    node _T_213 = or(_T_212, inst_sltiu) @[ID.scala 220:46]
    node _T_214 = or(_T_213, inst_xori) @[ID.scala 220:59]
    node _T_215 = or(_T_214, inst_ori) @[ID.scala 220:71]
    node _T_216 = or(_T_215, inst_andi) @[ID.scala 220:82]
    node _T_217 = or(_T_216, inst_type_load) @[ID.scala 220:94]
    node inst_sel_i_imm = or(_T_217, inst_jalr) @[ID.scala 220:111]
    node _T_218 = or(inst_csrrwi, inst_csrrsi) @[ID.scala 221:38]
    node inst_sel_csr_imm = or(_T_218, inst_csrrci) @[ID.scala 221:52]
    node _T_219 = or(inst_slli, inst_srli) @[ID.scala 222:38]
    node inst_sel_shift_imm = or(_T_219, inst_srai) @[ID.scala 222:50]
    node _T_220 = bits(inst, 31, 12) @[ID.scala 224:28]
    node imm_u_type = cat(_T_220, UInt<12>("h00")) @[Cat.scala 30:58]
    node _T_221 = bits(inst, 31, 31) @[ID.scala 225:37]
    node _T_222 = bits(_T_221, 0, 0) @[Bitwise.scala 72:15]
    node _T_223 = mux(_T_222, UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
    node _T_224 = bits(inst, 19, 12) @[ID.scala 225:48]
    node _T_225 = bits(inst, 20, 20) @[ID.scala 225:62]
    node _T_226 = bits(inst, 30, 21) @[ID.scala 225:72]
    node _T_227 = cat(_T_226, UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_228 = cat(_T_223, _T_224) @[Cat.scala 30:58]
    node _T_229 = cat(_T_228, _T_225) @[Cat.scala 30:58]
    node imm_j_type = cat(_T_229, _T_227) @[Cat.scala 30:58]
    node _T_230 = bits(inst, 31, 31) @[ID.scala 226:37]
    node _T_231 = bits(_T_230, 0, 0) @[Bitwise.scala 72:15]
    node _T_232 = mux(_T_231, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
    node _T_233 = bits(inst, 7, 7) @[ID.scala 226:48]
    node _T_234 = bits(inst, 30, 25) @[ID.scala 226:57]
    node _T_235 = bits(inst, 11, 8) @[ID.scala 226:71]
    node _T_236 = cat(_T_235, UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_237 = cat(_T_232, _T_233) @[Cat.scala 30:58]
    node _T_238 = cat(_T_237, _T_234) @[Cat.scala 30:58]
    node imm_b_type = cat(_T_238, _T_236) @[Cat.scala 30:58]
    node _T_239 = bits(inst, 31, 31) @[ID.scala 227:37]
    node _T_240 = bits(_T_239, 0, 0) @[Bitwise.scala 72:15]
    node _T_241 = mux(_T_240, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
    node _T_242 = bits(inst, 31, 25) @[ID.scala 227:48]
    node _T_243 = bits(inst, 11, 7) @[ID.scala 227:62]
    node _T_244 = cat(_T_241, _T_242) @[Cat.scala 30:58]
    node imm_s_type = cat(_T_244, _T_243) @[Cat.scala 30:58]
    node _T_245 = bits(inst, 31, 31) @[ID.scala 228:37]
    node _T_246 = bits(_T_245, 0, 0) @[Bitwise.scala 72:15]
    node _T_247 = mux(_T_246, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
    node _T_248 = bits(inst, 31, 20) @[ID.scala 228:48]
    node imm_i_type = cat(_T_247, _T_248) @[Cat.scala 30:58]
    node _T_249 = bits(inst, 19, 15) @[ID.scala 229:41]
    node imm_csr_type = cat(UInt<27>("h00"), _T_249) @[Cat.scala 30:58]
    node _T_250 = bits(inst, 24, 20) @[ID.scala 230:43]
    node imm_shift_type = cat(UInt<27>("h00"), _T_250) @[Cat.scala 30:58]
    node _T_251 = eq(inst_sel_shift_imm, inst) @[Mux.scala 68:19]
    node _T_252 = mux(_T_251, imm_shift_type, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_253 = eq(inst_sel_csr_imm, inst) @[Mux.scala 68:19]
    node _T_254 = mux(_T_253, imm_csr_type, _T_252) @[Mux.scala 68:16]
    node _T_255 = eq(inst_sel_i_imm, inst) @[Mux.scala 68:19]
    node _T_256 = mux(_T_255, imm_i_type, _T_254) @[Mux.scala 68:16]
    node _T_257 = eq(inst_sel_s_imm, inst) @[Mux.scala 68:19]
    node _T_258 = mux(_T_257, imm_s_type, _T_256) @[Mux.scala 68:16]
    node _T_259 = eq(inst_sel_b_imm, inst) @[Mux.scala 68:19]
    node _T_260 = mux(_T_259, imm_b_type, _T_258) @[Mux.scala 68:16]
    node _T_261 = eq(inst_jal, inst) @[Mux.scala 68:19]
    node _T_262 = mux(_T_261, imm_j_type, _T_260) @[Mux.scala 68:16]
    node _T_263 = eq(inst_sel_u_imm, inst) @[Mux.scala 68:19]
    node _T_264 = mux(_T_263, imm_u_type, _T_262) @[Mux.scala 68:16]
    io.idu_o.dec_imm <= _T_264 @[ID.scala 233:20]
    node _T_265 = or(inst_lui, inst_auipc) @[ID.scala 244:25]
    node _T_266 = eq(opcode, UInt<5>("h013")) @[ID.scala 53:35]
    node _T_267 = or(_T_265, _T_266) @[ID.scala 244:39]
    node _T_268 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_269 = eq(inst_type_muldiv, UInt<1>("h00")) @[ID.scala 244:95]
    node _T_270 = and(_T_268, _T_269) @[ID.scala 244:92]
    node op_alu = or(_T_267, _T_270) @[ID.scala 244:65]
    node _T_271 = or(inst_jal, inst_jalr) @[ID.scala 245:25]
    node op_bjp = or(_T_271, inst_sel_b_imm) @[ID.scala 245:38]
    node _T_272 = or(inst_csrrw, inst_csrrwi) @[ID.scala 247:27]
    node _T_273 = or(_T_272, inst_csrrs) @[ID.scala 247:42]
    node _T_274 = or(_T_273, inst_csrrsi) @[ID.scala 247:56]
    node _T_275 = or(_T_274, inst_csrrc) @[ID.scala 247:71]
    node op_csr = or(_T_275, inst_csrrci) @[ID.scala 247:85]
    node _T_276 = or(inst_ebreak, inst_ecall) @[ID.scala 248:28]
    node _T_277 = or(_T_276, inst_nop) @[ID.scala 248:42]
    node _T_278 = or(_T_277, inst_mret) @[ID.scala 248:54]
    node _T_279 = or(_T_278, inst_fence) @[ID.scala 248:67]
    node _T_280 = or(_T_279, inst_fence_i) @[ID.scala 248:81]
    node op_sys = or(_T_280, inst_dret) @[ID.scala 248:97]
    node op_mem = or(inst_type_load, inst_sel_s_imm) @[ID.scala 249:31]
    node _T_281 = eq(op_sys, inst) @[Mux.scala 68:19]
    node _T_282 = mux(_T_281, dec_sys_info_bus, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_283 = eq(op_mem, inst) @[Mux.scala 68:19]
    node _T_284 = mux(_T_283, dec_mem_info_bus, _T_282) @[Mux.scala 68:16]
    node _T_285 = eq(op_csr, inst) @[Mux.scala 68:19]
    node _T_286 = mux(_T_285, dec_csr_info_bus, _T_284) @[Mux.scala 68:16]
    node _T_287 = eq(inst_type_muldiv, inst) @[Mux.scala 68:19]
    node _T_288 = mux(_T_287, dec_muldiv_info_bus, _T_286) @[Mux.scala 68:16]
    node _T_289 = eq(op_bjp, inst) @[Mux.scala 68:19]
    node _T_290 = mux(_T_289, dec_bjp_info_bus, _T_288) @[Mux.scala 68:16]
    node _T_291 = eq(op_alu, inst) @[Mux.scala 68:19]
    node _T_292 = mux(_T_291, dec_alu_info_bus, _T_290) @[Mux.scala 68:16]
    io.idu_o.dec_info_bus <= _T_292 @[ID.scala 251:25]
    node _T_293 = or(inst_lui, inst_auipc) @[ID.scala 262:31]
    node _T_294 = or(_T_293, inst_jal) @[ID.scala 262:45]
    node _T_295 = or(_T_294, inst_ecall) @[ID.scala 262:57]
    node _T_296 = or(_T_295, inst_ebreak) @[ID.scala 262:71]
    node _T_297 = or(_T_296, inst_csrrwi) @[ID.scala 262:86]
    node _T_298 = or(_T_297, inst_csrrsi) @[ID.scala 263:17]
    node _T_299 = or(_T_298, inst_csrrci) @[ID.scala 263:32]
    node _T_300 = or(_T_299, inst_nop) @[ID.scala 263:47]
    node _T_301 = or(_T_300, inst_fence) @[ID.scala 263:59]
    node _T_302 = or(_T_301, inst_fence_i) @[ID.scala 264:16]
    node _T_303 = or(_T_302, inst_mret) @[ID.scala 264:32]
    node access_rs1 = eq(_T_303, UInt<1>("h00")) @[ID.scala 262:20]
    node _T_304 = mux(access_rs1, rs1, UInt<1>("h00")) @[ID.scala 265:22]
    io.rs1_raddr <= _T_304 @[ID.scala 265:16]
    node _T_305 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_306 = or(_T_305, inst_sel_s_imm) @[ID.scala 267:43]
    node access_rs2 = or(_T_306, inst_sel_b_imm) @[ID.scala 267:62]
    node _T_307 = mux(access_rs2, rs2, UInt<1>("h00")) @[ID.scala 268:22]
    io.rs2_raddr <= _T_307 @[ID.scala 268:16]
    node _T_308 = or(inst_lui, inst_auipc) @[ID.scala 270:28]
    node _T_309 = or(_T_308, inst_jal) @[ID.scala 270:42]
    node _T_310 = or(_T_309, inst_jalr) @[ID.scala 270:54]
    node _T_311 = or(_T_310, inst_type_load) @[ID.scala 270:67]
    node _T_312 = eq(opcode, UInt<5>("h013")) @[ID.scala 53:35]
    node _T_313 = or(_T_311, _T_312) @[ID.scala 270:85]
    node _T_314 = eq(opcode, UInt<6>("h033")) @[ID.scala 53:35]
    node _T_315 = or(_T_313, _T_314) @[ID.scala 270:111]
    node access_rd = or(_T_315, op_csr) @[ID.scala 270:137]
    node _T_316 = mux(access_rd, rd, UInt<1>("h00")) @[ID.scala 271:27]
    io.idu_o.rd_waddr <= _T_316 @[ID.scala 271:21]
    io.idu_o.rd_we <= access_rd @[ID.scala 272:18]
    node _T_317 = bits(io.inst_ex, 6, 0) @[ID.scala 275:50]
    node _T_318 = eq(_T_317, UInt<7>("h03")) @[ID.scala 275:57]
    node load_hazard = and(io.access_rd_ex, _T_318) @[ID.scala 275:37]
    node _T_319 = and(load_hazard, access_rs1) @[ID.scala 277:33]
    node _T_320 = eq(io.rd_ex, rs1) @[ID.scala 277:60]
    node _T_321 = and(_T_319, _T_320) @[ID.scala 277:47]
    io.last_rs1_rd <= _T_321 @[ID.scala 277:18]
    node _T_322 = and(load_hazard, access_rs2) @[ID.scala 278:33]
    node _T_323 = eq(io.rd_ex, rs2) @[ID.scala 278:60]
    node _T_324 = and(_T_322, _T_323) @[ID.scala 278:47]
    io.last_rs2_rd <= _T_324 @[ID.scala 278:18]
    node _T_325 = and(io.access_rd_mem, access_rs1) @[ID.scala 279:42]
    node _T_326 = eq(io.rd_mem, rs1) @[ID.scala 279:70]
    node _T_327 = and(_T_325, _T_326) @[ID.scala 279:56]
    io.last_two_rs1_rd <= _T_327 @[ID.scala 279:22]
    node _T_328 = and(io.access_rd_mem, access_rs2) @[ID.scala 280:42]
    node _T_329 = eq(io.rd_mem, rs2) @[ID.scala 280:70]
    node _T_330 = and(_T_328, _T_329) @[ID.scala 280:56]
    io.last_two_rs2_rd <= _T_330 @[ID.scala 280:22]
    node _T_331 = and(load_hazard, access_rs1) @[ID.scala 282:27]
    node _T_332 = eq(io.rd_ex, rs1) @[ID.scala 282:54]
    node _T_333 = and(_T_331, _T_332) @[ID.scala 282:41]
    io.load1 <= _T_333 @[ID.scala 282:12]
    node _T_334 = and(load_hazard, access_rs2) @[ID.scala 283:27]
    node _T_335 = eq(io.rd_ex, rs2) @[ID.scala 283:54]
    node _T_336 = and(_T_334, _T_335) @[ID.scala 283:41]
    io.load2 <= _T_336 @[ID.scala 283:12]
    node _T_337 = or(io.load1, io.load2) @[ID.scala 285:26]
    io.stall_o <= _T_337 @[ID.scala 285:14]
    io.illegal_inst_o <= UInt<1>("h00") @[ID.scala 286:21]
    
  module ID_EX : 
    input clock : Clock
    input reset : Reset
    output io : {flip stall_i : UInt<4>, flip flush_i : UInt<1>, flip id_i : {inst_valid : UInt<1>, inst : UInt<32>, pc : UInt<32>, rd_waddr : UInt<5>, rd_we : UInt<1>, rs1_rdata : UInt<32>, rs2_rdata : UInt<32>, dec_imm : UInt<32>, dec_info_bus : UInt<19>}, ex_o : {inst_valid : UInt<1>, inst : UInt<32>, pc : UInt<32>, rd_waddr : UInt<5>, rd_we : UInt<1>, rs1_rdata : UInt<32>, rs2_rdata : UInt<32>, dec_imm : UInt<32>, dec_info_bus : UInt<19>}}
    
    node _T = bits(io.stall_i, 1, 1) @[ID_EX.scala 22:24]
    node _T_1 = not(_T) @[ID_EX.scala 22:13]
    node _T_2 = bits(_T_1, 0, 0) @[ID_EX.scala 22:29]
    node en = or(_T_2, io.flush_i) @[ID_EX.scala 22:35]
    wire i_dec_info_bus : UInt<19> @[ID_EX.scala 24:28]
    node _T_3 = mux(io.flush_i, UInt<1>("h00"), io.id_i.dec_info_bus) @[ID_EX.scala 25:24]
    i_dec_info_bus <= _T_3 @[ID_EX.scala 25:19]
    reg _T_4 : UInt, clock with : (reset => (reset, en)) @[ID_EX.scala 26:34]
    _T_4 <= i_dec_info_bus @[ID_EX.scala 26:34]
    io.ex_o.dec_info_bus <= _T_4 @[ID_EX.scala 26:25]
    wire i_dec_imm : UInt<32> @[ID_EX.scala 28:21]
    node _T_5 = mux(io.flush_i, UInt<1>("h00"), io.id_i.dec_imm) @[ID_EX.scala 29:17]
    i_dec_imm <= _T_5 @[ID_EX.scala 29:12]
    reg _T_6 : UInt, clock with : (reset => (reset, en)) @[ID_EX.scala 30:27]
    _T_6 <= i_dec_imm @[ID_EX.scala 30:27]
    io.ex_o.dec_imm <= _T_6 @[ID_EX.scala 30:18]
    wire i_dec_pc : UInt<32> @[ID_EX.scala 32:20]
    node _T_7 = mux(io.flush_i, UInt<1>("h00"), io.id_i.pc) @[ID_EX.scala 33:16]
    i_dec_pc <= _T_7 @[ID_EX.scala 33:11]
    reg _T_8 : UInt, clock with : (reset => (reset, en)) @[ID_EX.scala 34:22]
    _T_8 <= i_dec_pc @[ID_EX.scala 34:22]
    io.ex_o.pc <= _T_8 @[ID_EX.scala 34:13]
    wire i_rs1_rdata : UInt<32> @[ID_EX.scala 36:23]
    node _T_9 = mux(io.flush_i, UInt<1>("h00"), io.id_i.rs1_rdata) @[ID_EX.scala 37:19]
    i_rs1_rdata <= _T_9 @[ID_EX.scala 37:14]
    reg _T_10 : UInt, clock with : (reset => (reset, en)) @[ID_EX.scala 38:29]
    _T_10 <= i_rs1_rdata @[ID_EX.scala 38:29]
    io.ex_o.rs1_rdata <= _T_10 @[ID_EX.scala 38:20]
    wire i_rs2_rdata : UInt<32> @[ID_EX.scala 40:23]
    node _T_11 = mux(io.flush_i, UInt<1>("h00"), io.id_i.rs2_rdata) @[ID_EX.scala 41:19]
    i_rs2_rdata <= _T_11 @[ID_EX.scala 41:14]
    reg _T_12 : UInt, clock with : (reset => (reset, en)) @[ID_EX.scala 42:29]
    _T_12 <= i_rs2_rdata @[ID_EX.scala 42:29]
    io.ex_o.rs2_rdata <= _T_12 @[ID_EX.scala 42:20]
    wire i_rd_waddr : UInt<5> @[ID_EX.scala 44:22]
    node _T_13 = mux(io.flush_i, UInt<1>("h00"), io.id_i.rd_waddr) @[ID_EX.scala 45:18]
    i_rd_waddr <= _T_13 @[ID_EX.scala 45:13]
    reg _T_14 : UInt, clock with : (reset => (reset, en)) @[ID_EX.scala 46:28]
    _T_14 <= i_rd_waddr @[ID_EX.scala 46:28]
    io.ex_o.rd_waddr <= _T_14 @[ID_EX.scala 46:19]
    wire i_rd_we : UInt<1> @[ID_EX.scala 48:19]
    node _T_15 = mux(io.flush_i, UInt<1>("h00"), io.id_i.rd_we) @[ID_EX.scala 49:15]
    i_rd_we <= _T_15 @[ID_EX.scala 49:10]
    reg _T_16 : UInt<1>, clock with : (reset => (reset, en)) @[ID_EX.scala 50:25]
    _T_16 <= i_rd_we @[ID_EX.scala 50:25]
    io.ex_o.rd_we <= _T_16 @[ID_EX.scala 50:16]
    wire i_inst : UInt<32> @[ID_EX.scala 52:18]
    node _T_17 = mux(io.flush_i, UInt<1>("h00"), io.id_i.inst) @[ID_EX.scala 53:14]
    i_inst <= _T_17 @[ID_EX.scala 53:9]
    reg _T_18 : UInt, clock with : (reset => (reset, en)) @[ID_EX.scala 54:24]
    _T_18 <= i_inst @[ID_EX.scala 54:24]
    io.ex_o.inst <= _T_18 @[ID_EX.scala 54:15]
    wire i_inst_valid : UInt<1> @[ID_EX.scala 56:24]
    node _T_19 = mux(io.flush_i, UInt<1>("h00"), io.id_i.inst_valid) @[ID_EX.scala 57:20]
    i_inst_valid <= _T_19 @[ID_EX.scala 57:15]
    reg _T_20 : UInt<1>, clock with : (reset => (reset, en)) @[ID_EX.scala 58:30]
    _T_20 <= i_inst_valid @[ID_EX.scala 58:30]
    io.ex_o.inst_valid <= _T_20 @[ID_EX.scala 58:21]
    
  module EX_ALU : 
    input clock : Clock
    input reset : Reset
    output io : {flip ex_dispatch_ALUIO : {req_alu_o : UInt<1>, alu_op1_o : UInt<32>, alu_op2_o : UInt<32>, alu_op_lui_o : UInt<1>, alu_op_auipc_o : UInt<1>, alu_op_add_o : UInt<1>, alu_op_sub_o : UInt<1>, alu_op_sll_o : UInt<1>, alu_op_slt_o : UInt<1>, alu_op_sltu_o : UInt<1>, alu_op_xor_o : UInt<1>, alu_op_srl_o : UInt<1>, alu_op_sra_o : UInt<1>, alu_op_or_o : UInt<1>, alu_op_and_o : UInt<1>, req_bjp_o : UInt<1>, bjp_op1_o : UInt<32>, bjp_op2_o : UInt<32>, bjp_jump_op1_o : UInt<32>, bjp_jump_op2_o : UInt<32>, bjp_op_jump_o : UInt<1>, bjp_op_beq_o : UInt<1>, bjp_op_bne_o : UInt<1>, bjp_op_blt_o : UInt<1>, bjp_op_bltu_o : UInt<1>, bjp_op_bge_o : UInt<1>, bjp_op_bgeu_o : UInt<1>, bjp_op_jalr_o : UInt<1>, req_muldiv_o : UInt<1>, muldiv_op1_o : UInt<32>, muldiv_op2_o : UInt<32>, muldiv_op_mul_o : UInt<1>, muldiv_op_mulh_o : UInt<1>, muldiv_op_mulhsu_o : UInt<1>, muldiv_op_mulhu_o : UInt<1>, muldiv_op_div_o : UInt<1>, muldiv_op_divu_o : UInt<1>, muldiv_op_rem_o : UInt<1>, muldiv_op_remu_o : UInt<1>, req_csr_o : UInt<1>, csr_op1_o : UInt<32>, csr_csrrw_o : UInt<1>, csr_csrrs_o : UInt<1>, csr_csrrc_o : UInt<1>, sys_op_nop_o : UInt<1>, sys_op_mret_o : UInt<1>, sys_op_ecall_o : UInt<1>, sys_op_ebreak_o : UInt<1>, sys_op_fence_o : UInt<1>, sys_op_dret_o : UInt<1>}, flip csr_op2_o : UInt<32>, csr_res_o : UInt<32>, alu_res_o : UInt<32>, bjp_res_o : UInt<32>, bjp_cmp_res_o : UInt<1>}
    
    wire mux_op1 : UInt<32> @[EX_ALU.scala 20:21]
    wire mux_op2 : UInt<32> @[EX_ALU.scala 21:21]
    node _T = mux(io.ex_dispatch_ALUIO.req_csr_o, io.ex_dispatch_ALUIO.csr_op1_o, UInt<1>("h00")) @[Mux.scala 87:16]
    node _T_1 = mux(io.ex_dispatch_ALUIO.req_bjp_o, io.ex_dispatch_ALUIO.bjp_op1_o, _T) @[Mux.scala 87:16]
    node _T_2 = mux(io.ex_dispatch_ALUIO.req_alu_o, io.ex_dispatch_ALUIO.alu_op1_o, _T_1) @[Mux.scala 87:16]
    mux_op1 <= _T_2 @[EX_ALU.scala 22:13]
    node _T_3 = mux(io.ex_dispatch_ALUIO.req_csr_o, io.csr_op2_o, UInt<1>("h00")) @[Mux.scala 87:16]
    node _T_4 = mux(io.ex_dispatch_ALUIO.req_bjp_o, io.ex_dispatch_ALUIO.bjp_op2_o, _T_3) @[Mux.scala 87:16]
    node _T_5 = mux(io.ex_dispatch_ALUIO.req_alu_o, io.ex_dispatch_ALUIO.alu_op2_o, _T_4) @[Mux.scala 87:16]
    mux_op2 <= _T_5 @[EX_ALU.scala 28:13]
    wire xor_res : UInt<32> @[EX_ALU.scala 33:21]
    wire or_res : UInt<32> @[EX_ALU.scala 34:20]
    wire and_res : UInt<32> @[EX_ALU.scala 35:21]
    wire add_sub_res : UInt<32> @[EX_ALU.scala 36:25]
    wire sll_res : UInt<32> @[EX_ALU.scala 37:21]
    wire srl_res : UInt<32> @[EX_ALU.scala 38:21]
    wire sr_shift_mask : UInt<32> @[EX_ALU.scala 39:27]
    wire sra_res : UInt<32> @[EX_ALU.scala 40:21]
    node _T_6 = xor(mux_op1, mux_op2) @[EX_ALU.scala 42:24]
    xor_res <= _T_6 @[EX_ALU.scala 42:13]
    node _T_7 = or(mux_op1, mux_op2) @[EX_ALU.scala 43:24]
    or_res <= _T_7 @[EX_ALU.scala 43:13]
    node _T_8 = and(mux_op1, mux_op2) @[EX_ALU.scala 44:24]
    and_res <= _T_8 @[EX_ALU.scala 44:13]
    node _T_9 = sub(UInt<1>("h00"), mux_op2) @[EX_ALU.scala 45:67]
    node _T_10 = tail(_T_9, 1) @[EX_ALU.scala 45:67]
    node _T_11 = mux(io.ex_dispatch_ALUIO.alu_op_sub_o, _T_10, mux_op2) @[EX_ALU.scala 45:31]
    node _T_12 = add(mux_op1, _T_11) @[EX_ALU.scala 45:26]
    node _T_13 = tail(_T_12, 1) @[EX_ALU.scala 45:26]
    add_sub_res <= _T_13 @[EX_ALU.scala 45:16]
    node _T_14 = bits(mux_op2, 4, 0) @[EX_ALU.scala 46:30]
    node _T_15 = dshl(mux_op1, _T_14) @[EX_ALU.scala 46:21]
    sll_res <= _T_15 @[EX_ALU.scala 46:12]
    node _T_16 = bits(mux_op2, 4, 0) @[EX_ALU.scala 47:30]
    node _T_17 = dshr(mux_op1, _T_16) @[EX_ALU.scala 47:21]
    srl_res <= _T_17 @[EX_ALU.scala 47:12]
    node _T_18 = bits(mux_op2, 4, 0) @[EX_ALU.scala 48:45]
    node _T_19 = dshr(UInt<32>("h0ffffffff"), _T_18) @[EX_ALU.scala 48:35]
    sr_shift_mask <= _T_19 @[EX_ALU.scala 48:19]
    node _T_20 = and(srl_res, sr_shift_mask) @[EX_ALU.scala 49:33]
    node _T_21 = bits(mux_op1, 31, 31) @[EX_ALU.scala 49:68]
    node _T_22 = bits(_T_21, 0, 0) @[Bitwise.scala 72:15]
    node _T_23 = mux(_T_22, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _T_24 = not(sr_shift_mask) @[EX_ALU.scala 49:77]
    node _T_25 = and(_T_23, _T_24) @[EX_ALU.scala 49:74]
    node _T_26 = or(_T_20, _T_25) @[EX_ALU.scala 49:50]
    sra_res <= _T_26 @[EX_ALU.scala 49:13]
    node _T_27 = asSInt(mux_op1) @[EX_ALU.scala 51:38]
    node _T_28 = asSInt(mux_op2) @[EX_ALU.scala 51:54]
    node op1_ge_op2_signed = geq(_T_27, _T_28) @[EX_ALU.scala 51:44]
    node op1_ge_op2_unsigned = geq(mux_op1, mux_op2) @[EX_ALU.scala 52:37]
    node op1_uneq_op2 = neq(xor_res, UInt<1>("h00")) @[EX_ALU.scala 54:31]
    node _T_29 = not(op1_uneq_op2) @[EX_ALU.scala 55:22]
    node op1_eq_op2 = bits(_T_29, 0, 0) @[EX_ALU.scala 55:37]
    node jump_beq = and(io.ex_dispatch_ALUIO.bjp_op_beq_o, op1_eq_op2) @[EX_ALU.scala 57:52]
    node jump_bne = and(io.ex_dispatch_ALUIO.bjp_op_bne_o, op1_uneq_op2) @[EX_ALU.scala 58:52]
    node _T_30 = eq(op1_ge_op2_signed, UInt<1>("h00")) @[EX_ALU.scala 59:55]
    node jump_lt = and(io.ex_dispatch_ALUIO.bjp_op_blt_o, _T_30) @[EX_ALU.scala 59:52]
    node _T_31 = eq(op1_ge_op2_unsigned, UInt<1>("h00")) @[EX_ALU.scala 60:57]
    node jump_ltu = and(io.ex_dispatch_ALUIO.bjp_op_bltu_o, _T_31) @[EX_ALU.scala 60:54]
    node jump_bge = and(io.ex_dispatch_ALUIO.bjp_op_bge_o, op1_ge_op2_signed) @[EX_ALU.scala 61:53]
    node jump_bgeu = and(io.ex_dispatch_ALUIO.bjp_op_bgeu_o, op1_ge_op2_unsigned) @[EX_ALU.scala 62:55]
    node csr_or = or(io.ex_dispatch_ALUIO.csr_csrrw_o, io.ex_dispatch_ALUIO.csr_csrrs_o) @[EX_ALU.scala 64:48]
    wire slt_res : UInt<32> @[EX_ALU.scala 67:21]
    node _T_32 = eq(op1_ge_op2_signed, UInt<1>("h00")) @[EX_ALU.scala 68:20]
    node _T_33 = mux(_T_32, UInt<1>("h01"), UInt<1>("h00")) @[EX_ALU.scala 68:19]
    slt_res <= _T_33 @[EX_ALU.scala 68:13]
    wire sltu_res : UInt<32> @[EX_ALU.scala 69:22]
    node _T_34 = eq(op1_ge_op2_unsigned, UInt<1>("h00")) @[EX_ALU.scala 70:21]
    node _T_35 = mux(_T_34, UInt<1>("h01"), UInt<1>("h00")) @[EX_ALU.scala 70:20]
    sltu_res <= _T_35 @[EX_ALU.scala 70:14]
    wire alu_datapath_res : UInt
    alu_datapath_res <= UInt<1>("h00")
    io.csr_res_o <= UInt<1>("h00") @[EX_ALU.scala 73:18]
    node _T_36 = eq(io.ex_dispatch_ALUIO.alu_op_sltu_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_37 = mux(_T_36, sltu_res, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_38 = eq(io.ex_dispatch_ALUIO.alu_op_slt_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_39 = mux(_T_38, slt_res, _T_37) @[Mux.scala 68:16]
    node _T_40 = eq(io.ex_dispatch_ALUIO.alu_op_sra_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_41 = mux(_T_40, sra_res, _T_39) @[Mux.scala 68:16]
    node _T_42 = eq(io.ex_dispatch_ALUIO.alu_op_srl_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_43 = mux(_T_42, srl_res, _T_41) @[Mux.scala 68:16]
    node _T_44 = eq(io.ex_dispatch_ALUIO.alu_op_sll_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_45 = mux(_T_44, sll_res, _T_43) @[Mux.scala 68:16]
    node _T_46 = eq(io.ex_dispatch_ALUIO.alu_op_sub_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_47 = mux(_T_46, add_sub_res, _T_45) @[Mux.scala 68:16]
    node _T_48 = eq(io.ex_dispatch_ALUIO.alu_op_add_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_49 = mux(_T_48, add_sub_res, _T_47) @[Mux.scala 68:16]
    node _T_50 = eq(io.ex_dispatch_ALUIO.alu_op_and_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_51 = mux(_T_50, and_res, _T_49) @[Mux.scala 68:16]
    node _T_52 = eq(io.ex_dispatch_ALUIO.alu_op_or_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_53 = mux(_T_52, or_res, _T_51) @[Mux.scala 68:16]
    node _T_54 = eq(io.ex_dispatch_ALUIO.alu_op_xor_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_55 = mux(_T_54, xor_res, _T_53) @[Mux.scala 68:16]
    alu_datapath_res <= _T_55 @[EX_ALU.scala 75:20]
    node _T_56 = eq(io.ex_dispatch_ALUIO.csr_csrrc_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_57 = mux(_T_56, and_res, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_58 = eq(csr_or, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_59 = mux(_T_58, or_res, _T_57) @[Mux.scala 68:16]
    io.csr_res_o <= _T_59 @[EX_ALU.scala 88:14]
    io.alu_res_o <= alu_datapath_res @[EX_ALU.scala 96:17]
    node _T_60 = add(io.ex_dispatch_ALUIO.bjp_jump_op1_o, io.ex_dispatch_ALUIO.bjp_jump_op2_o) @[EX_ALU.scala 97:91]
    node _T_61 = tail(_T_60, 1) @[EX_ALU.scala 97:91]
    node _T_62 = mux(io.ex_dispatch_ALUIO.req_bjp_o, _T_61, UInt<1>("h00")) @[EX_ALU.scala 97:24]
    io.bjp_res_o <= _T_62 @[EX_ALU.scala 97:18]
    node _T_63 = or(jump_beq, jump_bge) @[EX_ALU.scala 98:34]
    node _T_64 = or(_T_63, jump_bgeu) @[EX_ALU.scala 98:46]
    node _T_65 = or(_T_64, jump_bne) @[EX_ALU.scala 98:59]
    node _T_66 = or(_T_65, jump_lt) @[EX_ALU.scala 98:71]
    node _T_67 = or(_T_66, jump_ltu) @[EX_ALU.scala 98:82]
    io.bjp_cmp_res_o <= _T_67 @[EX_ALU.scala 98:22]
    
  module EX_dispatch : 
    input clock : Clock
    input reset : Reset
    output io : {ex_dispatch_ALUIO : {req_alu_o : UInt<1>, alu_op1_o : UInt<32>, alu_op2_o : UInt<32>, alu_op_lui_o : UInt<1>, alu_op_auipc_o : UInt<1>, alu_op_add_o : UInt<1>, alu_op_sub_o : UInt<1>, alu_op_sll_o : UInt<1>, alu_op_slt_o : UInt<1>, alu_op_sltu_o : UInt<1>, alu_op_xor_o : UInt<1>, alu_op_srl_o : UInt<1>, alu_op_sra_o : UInt<1>, alu_op_or_o : UInt<1>, alu_op_and_o : UInt<1>, req_bjp_o : UInt<1>, bjp_op1_o : UInt<32>, bjp_op2_o : UInt<32>, bjp_jump_op1_o : UInt<32>, bjp_jump_op2_o : UInt<32>, bjp_op_jump_o : UInt<1>, bjp_op_beq_o : UInt<1>, bjp_op_bne_o : UInt<1>, bjp_op_blt_o : UInt<1>, bjp_op_bltu_o : UInt<1>, bjp_op_bge_o : UInt<1>, bjp_op_bgeu_o : UInt<1>, bjp_op_jalr_o : UInt<1>, req_muldiv_o : UInt<1>, muldiv_op1_o : UInt<32>, muldiv_op2_o : UInt<32>, muldiv_op_mul_o : UInt<1>, muldiv_op_mulh_o : UInt<1>, muldiv_op_mulhsu_o : UInt<1>, muldiv_op_mulhu_o : UInt<1>, muldiv_op_div_o : UInt<1>, muldiv_op_divu_o : UInt<1>, muldiv_op_rem_o : UInt<1>, muldiv_op_remu_o : UInt<1>, req_csr_o : UInt<1>, csr_op1_o : UInt<32>, csr_csrrw_o : UInt<1>, csr_csrrs_o : UInt<1>, csr_csrrc_o : UInt<1>, sys_op_nop_o : UInt<1>, sys_op_mret_o : UInt<1>, sys_op_ecall_o : UInt<1>, sys_op_ebreak_o : UInt<1>, sys_op_fence_o : UInt<1>, sys_op_dret_o : UInt<1>}, flip dec_info_bus_i : UInt<19>, flip dec_imm_i : UInt<32>, flip dec_pc_i : UInt<32>, flip rs1_rdata_i : UInt<32>, flip rs2_rdata_i : UInt<32>, csr_addr_o : UInt<32>, req_mem_o : UInt<1>, mem_op1_o : UInt<32>, mem_op2_o : UInt<32>, mem_rs2_data_o : UInt<32>, mem_op_lb_o : UInt<1>, mem_op_lh_o : UInt<1>, mem_op_lw_o : UInt<1>, mem_op_lbu_o : UInt<1>, mem_op_lhu_o : UInt<1>, mem_op_sb_o : UInt<1>, mem_op_sh_o : UInt<1>, mem_op_sw_o : UInt<1>}
    
    node disp_info_grp = bits(io.dec_info_bus_i, 2, 0) @[EX_dispatch.scala 41:40]
    node op_alu = eq(disp_info_grp, UInt<3>("h01")) @[EX_dispatch.scala 42:30]
    wire alu_info : UInt<19> @[EX_dispatch.scala 43:22]
    node _T = bits(op_alu, 0, 0) @[Bitwise.scala 72:15]
    node _T_1 = mux(_T, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 72:12]
    node _T_2 = and(_T_1, io.dec_info_bus_i) @[EX_dispatch.scala 44:43]
    alu_info <= _T_2 @[EX_dispatch.scala 44:13]
    node alu_op1_pc = bits(alu_info, 16, 16) @[EX_dispatch.scala 46:30]
    node alu_op1_zero = bits(alu_info, 3, 3) @[EX_dispatch.scala 47:31]
    wire alu_op1 : UInt<32> @[EX_dispatch.scala 48:23]
    node _T_3 = mux(alu_op1_zero, UInt<32>("h00"), io.rs1_rdata_i) @[EX_dispatch.scala 49:48]
    node _T_4 = mux(alu_op1_pc, io.dec_pc_i, _T_3) @[EX_dispatch.scala 49:19]
    alu_op1 <= _T_4 @[EX_dispatch.scala 49:13]
    node _T_5 = mux(op_alu, alu_op1, UInt<32>("h00")) @[EX_dispatch.scala 50:42]
    io.ex_dispatch_ALUIO.alu_op1_o <= _T_5 @[EX_dispatch.scala 50:36]
    node alu_op2_imm = bits(alu_info, 15, 15) @[EX_dispatch.scala 52:29]
    wire alu_op2 : UInt<32> @[EX_dispatch.scala 53:22]
    node _T_6 = mux(alu_op2_imm, io.dec_imm_i, io.rs2_rdata_i) @[EX_dispatch.scala 54:17]
    alu_op2 <= _T_6 @[EX_dispatch.scala 54:12]
    node _T_7 = mux(op_alu, alu_op2, UInt<32>("h00")) @[EX_dispatch.scala 55:42]
    io.ex_dispatch_ALUIO.alu_op2_o <= _T_7 @[EX_dispatch.scala 55:36]
    node _T_8 = bits(alu_info, 3, 3) @[EX_dispatch.scala 56:50]
    io.ex_dispatch_ALUIO.alu_op_lui_o <= _T_8 @[EX_dispatch.scala 56:39]
    node _T_9 = bits(alu_info, 4, 4) @[EX_dispatch.scala 57:52]
    io.ex_dispatch_ALUIO.alu_op_auipc_o <= _T_9 @[EX_dispatch.scala 57:41]
    node _T_10 = bits(alu_info, 5, 5) @[EX_dispatch.scala 58:50]
    io.ex_dispatch_ALUIO.alu_op_add_o <= _T_10 @[EX_dispatch.scala 58:39]
    node _T_11 = bits(alu_info, 6, 6) @[EX_dispatch.scala 59:50]
    io.ex_dispatch_ALUIO.alu_op_sub_o <= _T_11 @[EX_dispatch.scala 59:39]
    node _T_12 = bits(alu_info, 7, 7) @[EX_dispatch.scala 60:50]
    io.ex_dispatch_ALUIO.alu_op_sll_o <= _T_12 @[EX_dispatch.scala 60:39]
    node _T_13 = bits(alu_info, 8, 8) @[EX_dispatch.scala 61:50]
    io.ex_dispatch_ALUIO.alu_op_slt_o <= _T_13 @[EX_dispatch.scala 61:39]
    node _T_14 = bits(alu_info, 9, 9) @[EX_dispatch.scala 62:51]
    io.ex_dispatch_ALUIO.alu_op_sltu_o <= _T_14 @[EX_dispatch.scala 62:40]
    node _T_15 = bits(alu_info, 10, 10) @[EX_dispatch.scala 63:50]
    io.ex_dispatch_ALUIO.alu_op_xor_o <= _T_15 @[EX_dispatch.scala 63:39]
    node _T_16 = bits(alu_info, 11, 11) @[EX_dispatch.scala 64:50]
    io.ex_dispatch_ALUIO.alu_op_srl_o <= _T_16 @[EX_dispatch.scala 64:39]
    node _T_17 = bits(alu_info, 12, 12) @[EX_dispatch.scala 65:50]
    io.ex_dispatch_ALUIO.alu_op_sra_o <= _T_17 @[EX_dispatch.scala 65:39]
    node _T_18 = bits(alu_info, 13, 13) @[EX_dispatch.scala 66:49]
    io.ex_dispatch_ALUIO.alu_op_or_o <= _T_18 @[EX_dispatch.scala 66:38]
    node _T_19 = bits(alu_info, 14, 14) @[EX_dispatch.scala 67:50]
    io.ex_dispatch_ALUIO.alu_op_and_o <= _T_19 @[EX_dispatch.scala 67:39]
    io.ex_dispatch_ALUIO.req_alu_o <= op_alu @[EX_dispatch.scala 68:36]
    wire op_bjp : UInt<1> @[EX_dispatch.scala 71:20]
    node _T_20 = eq(disp_info_grp, UInt<3>("h02")) @[EX_dispatch.scala 72:28]
    op_bjp <= _T_20 @[EX_dispatch.scala 72:10]
    wire bjp_info : UInt<19> @[EX_dispatch.scala 73:22]
    node _T_21 = bits(op_bjp, 0, 0) @[Bitwise.scala 72:15]
    node _T_22 = mux(_T_21, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 72:12]
    node _T_23 = and(_T_22, io.dec_info_bus_i) @[EX_dispatch.scala 74:43]
    bjp_info <= _T_23 @[EX_dispatch.scala 74:12]
    wire bjp_op1_rs1 : UInt<1> @[EX_dispatch.scala 75:25]
    node _T_24 = bits(bjp_info, 10, 10) @[EX_dispatch.scala 76:26]
    bjp_op1_rs1 <= _T_24 @[EX_dispatch.scala 76:15]
    wire bjp_op1 : UInt<32> @[EX_dispatch.scala 77:21]
    node _T_25 = mux(bjp_op1_rs1, io.rs1_rdata_i, io.dec_pc_i) @[EX_dispatch.scala 78:17]
    bjp_op1 <= _T_25 @[EX_dispatch.scala 78:11]
    node _T_26 = mux(op_bjp, bjp_op1, UInt<32>("h00")) @[EX_dispatch.scala 79:45]
    io.ex_dispatch_ALUIO.bjp_jump_op1_o <= _T_26 @[EX_dispatch.scala 79:39]
    wire bjp_op2 : UInt<32> @[EX_dispatch.scala 80:21]
    bjp_op2 <= io.dec_imm_i @[EX_dispatch.scala 81:11]
    node _T_27 = mux(op_bjp, bjp_op2, UInt<32>("h00")) @[EX_dispatch.scala 82:45]
    io.ex_dispatch_ALUIO.bjp_jump_op2_o <= _T_27 @[EX_dispatch.scala 82:39]
    node _T_28 = mux(op_bjp, io.rs1_rdata_i, UInt<32>("h00")) @[EX_dispatch.scala 83:40]
    io.ex_dispatch_ALUIO.bjp_op1_o <= _T_28 @[EX_dispatch.scala 83:34]
    node _T_29 = mux(op_bjp, io.rs2_rdata_i, UInt<32>("h00")) @[EX_dispatch.scala 84:40]
    io.ex_dispatch_ALUIO.bjp_op2_o <= _T_29 @[EX_dispatch.scala 84:34]
    node _T_30 = bits(bjp_info, 3, 3) @[EX_dispatch.scala 85:49]
    io.ex_dispatch_ALUIO.bjp_op_jump_o <= _T_30 @[EX_dispatch.scala 85:38]
    node _T_31 = bits(bjp_info, 4, 4) @[EX_dispatch.scala 86:48]
    io.ex_dispatch_ALUIO.bjp_op_beq_o <= _T_31 @[EX_dispatch.scala 86:37]
    node _T_32 = bits(bjp_info, 5, 5) @[EX_dispatch.scala 87:48]
    io.ex_dispatch_ALUIO.bjp_op_bne_o <= _T_32 @[EX_dispatch.scala 87:37]
    node _T_33 = bits(bjp_info, 6, 6) @[EX_dispatch.scala 88:48]
    io.ex_dispatch_ALUIO.bjp_op_blt_o <= _T_33 @[EX_dispatch.scala 88:37]
    node _T_34 = bits(bjp_info, 8, 8) @[EX_dispatch.scala 89:49]
    io.ex_dispatch_ALUIO.bjp_op_bltu_o <= _T_34 @[EX_dispatch.scala 89:38]
    node _T_35 = bits(bjp_info, 7, 7) @[EX_dispatch.scala 90:48]
    io.ex_dispatch_ALUIO.bjp_op_bge_o <= _T_35 @[EX_dispatch.scala 90:37]
    node _T_36 = bits(bjp_info, 9, 9) @[EX_dispatch.scala 91:49]
    io.ex_dispatch_ALUIO.bjp_op_bgeu_o <= _T_36 @[EX_dispatch.scala 91:38]
    io.ex_dispatch_ALUIO.req_bjp_o <= op_bjp @[EX_dispatch.scala 92:34]
    io.ex_dispatch_ALUIO.bjp_op_jalr_o <= bjp_op1_rs1 @[EX_dispatch.scala 93:38]
    node op_muldiv = eq(disp_info_grp, UInt<3>("h03")) @[EX_dispatch.scala 96:36]
    wire muldiv_info : UInt<19> @[EX_dispatch.scala 98:27]
    node _T_37 = bits(op_muldiv, 0, 0) @[Bitwise.scala 72:15]
    node _T_38 = mux(_T_37, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 72:12]
    node _T_39 = and(io.dec_info_bus_i, _T_38) @[EX_dispatch.scala 99:38]
    muldiv_info <= _T_39 @[EX_dispatch.scala 99:17]
    node _T_40 = mux(op_muldiv, io.rs1_rdata_i, UInt<32>("h00")) @[EX_dispatch.scala 101:45]
    io.ex_dispatch_ALUIO.muldiv_op1_o <= _T_40 @[EX_dispatch.scala 101:39]
    node _T_41 = mux(op_muldiv, io.rs2_rdata_i, UInt<32>("h00")) @[EX_dispatch.scala 102:45]
    io.ex_dispatch_ALUIO.muldiv_op2_o <= _T_41 @[EX_dispatch.scala 102:39]
    node _T_42 = bits(muldiv_info, 3, 3) @[EX_dispatch.scala 103:56]
    node _T_43 = bits(_T_42, 0, 0) @[EX_dispatch.scala 103:77]
    io.ex_dispatch_ALUIO.muldiv_op_mul_o <= _T_43 @[EX_dispatch.scala 103:42]
    node _T_44 = bits(muldiv_info, 4, 4) @[EX_dispatch.scala 104:57]
    node _T_45 = bits(_T_44, 0, 0) @[EX_dispatch.scala 104:79]
    io.ex_dispatch_ALUIO.muldiv_op_mulh_o <= _T_45 @[EX_dispatch.scala 104:43]
    node _T_46 = bits(muldiv_info, 6, 6) @[EX_dispatch.scala 105:58]
    node _T_47 = bits(_T_46, 0, 0) @[EX_dispatch.scala 105:81]
    io.ex_dispatch_ALUIO.muldiv_op_mulhu_o <= _T_47 @[EX_dispatch.scala 105:44]
    node _T_48 = bits(muldiv_info, 5, 5) @[EX_dispatch.scala 106:59]
    node _T_49 = bits(_T_48, 0, 0) @[EX_dispatch.scala 106:83]
    io.ex_dispatch_ALUIO.muldiv_op_mulhsu_o <= _T_49 @[EX_dispatch.scala 106:45]
    node _T_50 = bits(muldiv_info, 7, 7) @[EX_dispatch.scala 107:56]
    node _T_51 = bits(_T_50, 0, 0) @[EX_dispatch.scala 107:77]
    io.ex_dispatch_ALUIO.muldiv_op_div_o <= _T_51 @[EX_dispatch.scala 107:42]
    node _T_52 = bits(muldiv_info, 8, 8) @[EX_dispatch.scala 108:57]
    node _T_53 = bits(_T_52, 0, 0) @[EX_dispatch.scala 108:79]
    io.ex_dispatch_ALUIO.muldiv_op_divu_o <= _T_53 @[EX_dispatch.scala 108:43]
    node _T_54 = bits(muldiv_info, 9, 9) @[EX_dispatch.scala 109:56]
    node _T_55 = bits(_T_54, 0, 0) @[EX_dispatch.scala 109:77]
    io.ex_dispatch_ALUIO.muldiv_op_rem_o <= _T_55 @[EX_dispatch.scala 109:42]
    node _T_56 = bits(muldiv_info, 10, 10) @[EX_dispatch.scala 110:57]
    node _T_57 = bits(_T_56, 0, 0) @[EX_dispatch.scala 110:79]
    io.ex_dispatch_ALUIO.muldiv_op_remu_o <= _T_57 @[EX_dispatch.scala 110:43]
    io.ex_dispatch_ALUIO.req_muldiv_o <= op_muldiv @[EX_dispatch.scala 111:39]
    node op_mem = eq(disp_info_grp, UInt<3>("h05")) @[EX_dispatch.scala 114:33]
    wire mem_info : UInt<19> @[EX_dispatch.scala 115:24]
    node _T_58 = bits(op_mem, 0, 0) @[Bitwise.scala 72:15]
    node _T_59 = mux(_T_58, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 72:12]
    node _T_60 = and(io.dec_info_bus_i, _T_59) @[EX_dispatch.scala 116:35]
    mem_info <= _T_60 @[EX_dispatch.scala 116:14]
    node _T_61 = bits(mem_info, 3, 3) @[EX_dispatch.scala 118:31]
    node _T_62 = bits(_T_61, 0, 0) @[EX_dispatch.scala 118:48]
    io.mem_op_lb_o <= _T_62 @[EX_dispatch.scala 118:20]
    node _T_63 = bits(mem_info, 4, 4) @[EX_dispatch.scala 119:31]
    node _T_64 = bits(_T_63, 0, 0) @[EX_dispatch.scala 119:48]
    io.mem_op_lh_o <= _T_64 @[EX_dispatch.scala 119:20]
    node _T_65 = bits(mem_info, 5, 5) @[EX_dispatch.scala 120:31]
    node _T_66 = bits(_T_65, 0, 0) @[EX_dispatch.scala 120:48]
    io.mem_op_lw_o <= _T_66 @[EX_dispatch.scala 120:20]
    node _T_67 = bits(mem_info, 6, 6) @[EX_dispatch.scala 121:32]
    node _T_68 = bits(_T_67, 0, 0) @[EX_dispatch.scala 121:50]
    io.mem_op_lbu_o <= _T_68 @[EX_dispatch.scala 121:21]
    node _T_69 = bits(mem_info, 7, 7) @[EX_dispatch.scala 122:32]
    node _T_70 = bits(_T_69, 0, 0) @[EX_dispatch.scala 122:50]
    io.mem_op_lhu_o <= _T_70 @[EX_dispatch.scala 122:21]
    node _T_71 = bits(mem_info, 8, 8) @[EX_dispatch.scala 123:31]
    node _T_72 = bits(_T_71, 0, 0) @[EX_dispatch.scala 123:48]
    io.mem_op_sb_o <= _T_72 @[EX_dispatch.scala 123:20]
    node _T_73 = bits(mem_info, 9, 9) @[EX_dispatch.scala 124:31]
    node _T_74 = bits(_T_73, 0, 0) @[EX_dispatch.scala 124:48]
    io.mem_op_sh_o <= _T_74 @[EX_dispatch.scala 124:20]
    node _T_75 = bits(mem_info, 10, 10) @[EX_dispatch.scala 125:31]
    node _T_76 = bits(_T_75, 0, 0) @[EX_dispatch.scala 125:48]
    io.mem_op_sw_o <= _T_76 @[EX_dispatch.scala 125:20]
    node _T_77 = mux(op_mem, io.rs1_rdata_i, UInt<32>("h00")) @[EX_dispatch.scala 126:24]
    io.mem_op1_o <= _T_77 @[EX_dispatch.scala 126:18]
    node _T_78 = mux(op_mem, io.dec_imm_i, UInt<32>("h00")) @[EX_dispatch.scala 127:24]
    io.mem_op2_o <= _T_78 @[EX_dispatch.scala 127:18]
    node _T_79 = mux(op_mem, io.rs2_rdata_i, UInt<32>("h00")) @[EX_dispatch.scala 128:29]
    io.mem_rs2_data_o <= _T_79 @[EX_dispatch.scala 128:23]
    io.req_mem_o <= op_mem @[EX_dispatch.scala 129:18]
    node opCsr = eq(io.dec_info_bus_i, UInt<3>("h04")) @[EX_dispatch.scala 132:35]
    wire csrInfo : UInt<19> @[EX_dispatch.scala 133:23]
    node _T_80 = bits(opCsr, 0, 0) @[Bitwise.scala 72:15]
    node _T_81 = mux(_T_80, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 72:12]
    node _T_82 = and(io.dec_info_bus_i, _T_81) @[EX_dispatch.scala 134:36]
    csrInfo <= _T_82 @[EX_dispatch.scala 134:15]
    node csrRs1Imm = bits(csrInfo, 6, 6) @[EX_dispatch.scala 137:28]
    node csrRs1 = mux(csrRs1Imm, io.dec_imm_i, io.rs1_rdata_i) @[EX_dispatch.scala 138:21]
    node _T_83 = mux(opCsr, csrRs1, UInt<1>("h00")) @[EX_dispatch.scala 139:42]
    io.ex_dispatch_ALUIO.csr_op1_o <= _T_83 @[EX_dispatch.scala 139:36]
    node _T_84 = bits(csrInfo, 7, 7) @[EX_dispatch.scala 141:29]
    io.csr_addr_o <= _T_84 @[EX_dispatch.scala 141:19]
    node _T_85 = bits(csrInfo, 3, 3) @[EX_dispatch.scala 143:48]
    io.ex_dispatch_ALUIO.csr_csrrw_o <= _T_85 @[EX_dispatch.scala 143:38]
    node _T_86 = bits(csrInfo, 4, 4) @[EX_dispatch.scala 144:48]
    io.ex_dispatch_ALUIO.csr_csrrs_o <= _T_86 @[EX_dispatch.scala 144:38]
    node _T_87 = bits(csrInfo, 5, 5) @[EX_dispatch.scala 145:48]
    io.ex_dispatch_ALUIO.csr_csrrc_o <= _T_87 @[EX_dispatch.scala 145:38]
    io.ex_dispatch_ALUIO.req_csr_o <= opCsr @[EX_dispatch.scala 146:36]
    node op_sys = eq(disp_info_grp, UInt<3>("h06")) @[EX_dispatch.scala 150:33]
    wire sys_info : UInt<32> @[EX_dispatch.scala 152:24]
    node _T_88 = bits(op_sys, 0, 0) @[Bitwise.scala 72:15]
    node _T_89 = mux(_T_88, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _T_90 = and(io.dec_info_bus_i, _T_89) @[EX_dispatch.scala 153:35]
    sys_info <= _T_90 @[EX_dispatch.scala 153:14]
    node _T_91 = bits(sys_info, 5, 5) @[EX_dispatch.scala 155:50]
    node _T_92 = bits(_T_91, 0, 0) @[EX_dispatch.scala 155:68]
    io.ex_dispatch_ALUIO.sys_op_nop_o <= _T_92 @[EX_dispatch.scala 155:39]
    node _T_93 = bits(sys_info, 6, 6) @[EX_dispatch.scala 156:51]
    node _T_94 = bits(_T_93, 0, 0) @[EX_dispatch.scala 156:70]
    io.ex_dispatch_ALUIO.sys_op_mret_o <= _T_94 @[EX_dispatch.scala 156:40]
    node _T_95 = bits(sys_info, 3, 3) @[EX_dispatch.scala 157:52]
    node _T_96 = bits(_T_95, 0, 0) @[EX_dispatch.scala 157:72]
    io.ex_dispatch_ALUIO.sys_op_ecall_o <= _T_96 @[EX_dispatch.scala 157:41]
    node _T_97 = bits(sys_info, 4, 4) @[EX_dispatch.scala 158:53]
    node _T_98 = bits(_T_97, 0, 0) @[EX_dispatch.scala 158:74]
    io.ex_dispatch_ALUIO.sys_op_ebreak_o <= _T_98 @[EX_dispatch.scala 158:42]
    node _T_99 = bits(sys_info, 7, 7) @[EX_dispatch.scala 159:52]
    node _T_100 = bits(_T_99, 0, 0) @[EX_dispatch.scala 159:72]
    io.ex_dispatch_ALUIO.sys_op_fence_o <= _T_100 @[EX_dispatch.scala 159:41]
    node _T_101 = bits(sys_info, 8, 8) @[EX_dispatch.scala 160:51]
    node _T_102 = bits(_T_101, 0, 0) @[EX_dispatch.scala 160:70]
    io.ex_dispatch_ALUIO.sys_op_dret_o <= _T_102 @[EX_dispatch.scala 160:40]
    
  module Divider : 
    input clock : Clock
    input reset : Reset
    output io : {flip dividend_i : UInt<32>, flip divisor_i : UInt<32>, flip start_i : UInt<1>, flip op_i : UInt<4>, result_o : UInt<32>, ready_o : UInt<1>}
    
    reg state : UInt<4>, clock with : (reset => (reset, UInt<4>("h01"))) @[divider.scala 27:22]
    reg dividend_r : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[divider.scala 28:27]
    reg divisor_r : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[divider.scala 29:26]
    reg op_r : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[divider.scala 30:21]
    reg count : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[divider.scala 31:22]
    reg div_result : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[divider.scala 32:27]
    reg div_remain : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[divider.scala 33:27]
    reg minuend : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[divider.scala 34:24]
    reg invert_result : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[divider.scala 35:30]
    reg result_o_reg : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[divider.scala 36:29]
    reg ready_o_reg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[divider.scala 37:28]
    io.result_o <= result_o_reg @[divider.scala 39:15]
    io.ready_o <= ready_o_reg @[divider.scala 40:14]
    node op_div = bits(op_r, 3, 3) @[divider.scala 43:20]
    node op_divu = bits(op_r, 2, 2) @[divider.scala 44:21]
    node op_rem = bits(op_r, 1, 1) @[divider.scala 45:20]
    node op_remu = bits(op_r, 0, 0) @[divider.scala 46:21]
    node _T = sub(UInt<1>("h00"), dividend_r) @[divider.scala 48:25]
    node dividend_invert = tail(_T, 1) @[divider.scala 48:25]
    node _T_1 = sub(UInt<1>("h00"), divisor_r) @[divider.scala 49:24]
    node divisor_invert = tail(_T_1, 1) @[divider.scala 49:24]
    node minuend_ge_divisor = geq(minuend, divisor_r) @[divider.scala 50:36]
    node _T_2 = sub(minuend, divisor_r) @[divider.scala 51:33]
    node minuend_sub_res = tail(_T_2, 1) @[divider.scala 51:33]
    node _T_3 = bits(div_result, 30, 0) @[divider.scala 52:62]
    node _T_4 = cat(_T_3, UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_5 = bits(div_result, 30, 0) @[divider.scala 52:96]
    node _T_6 = cat(_T_5, UInt<1>("h00")) @[Cat.scala 30:58]
    node div_result_tmp = mux(minuend_ge_divisor, _T_4, _T_6) @[divider.scala 52:27]
    node _T_7 = bits(minuend_sub_res, 30, 0) @[divider.scala 53:60]
    node _T_8 = bits(minuend, 30, 0) @[divider.scala 53:76]
    node minuend_tmp = mux(minuend_ge_divisor, _T_7, _T_8) @[divider.scala 53:24]
    node _T_9 = eq(UInt<4>("h01"), state) @[Conditional.scala 37:30]
    when _T_9 : @[Conditional.scala 40:58]
      when io.start_i : @[divider.scala 58:24]
        op_r <= io.op_i @[divider.scala 59:14]
        dividend_r <= io.dividend_i @[divider.scala 60:20]
        divisor_r <= io.divisor_i @[divider.scala 61:19]
        state <= UInt<4>("h02") @[divider.scala 62:15]
        skip @[divider.scala 58:24]
      else : @[divider.scala 63:19]
        op_r <= UInt<1>("h00") @[divider.scala 64:14]
        dividend_r <= UInt<1>("h00") @[divider.scala 65:20]
        divisor_r <= UInt<1>("h00") @[divider.scala 66:19]
        ready_o_reg <= UInt<1>("h00") @[divider.scala 67:21]
        result_o_reg <= UInt<1>("h00") @[divider.scala 68:22]
        skip @[divider.scala 63:19]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_10 = eq(UInt<4>("h02"), state) @[Conditional.scala 37:30]
      when _T_10 : @[Conditional.scala 39:67]
        when io.start_i : @[divider.scala 73:24]
          node _T_11 = eq(divisor_r, UInt<1>("h00")) @[divider.scala 74:24]
          when _T_11 : @[divider.scala 74:33]
            node _T_12 = or(op_div, op_divu) @[divider.scala 76:23]
            when _T_12 : @[divider.scala 76:35]
              result_o_reg <= UInt<32>("h0ffffffff") @[divider.scala 77:26]
              skip @[divider.scala 76:35]
            else : @[divider.scala 78:23]
              result_o_reg <= dividend_r @[divider.scala 79:26]
              skip @[divider.scala 78:23]
            ready_o_reg <= UInt<1>("h01") @[divider.scala 81:23]
            state <= UInt<4>("h01") @[divider.scala 82:17]
            skip @[divider.scala 74:33]
          else : @[divider.scala 83:21]
            count <= UInt<31>("h040000000") @[divider.scala 84:17]
            state <= UInt<4>("h04") @[divider.scala 85:17]
            div_result <= UInt<1>("h00") @[divider.scala 86:22]
            div_remain <= UInt<1>("h00") @[divider.scala 87:22]
            node _T_13 = or(op_div, op_rem) @[divider.scala 90:23]
            when _T_13 : @[divider.scala 90:34]
              node _T_14 = bits(dividend_r, 31, 31) @[divider.scala 91:28]
              node _T_15 = eq(_T_14, UInt<1>("h01")) @[divider.scala 91:33]
              when _T_15 : @[divider.scala 91:42]
                dividend_r <= dividend_invert @[divider.scala 92:26]
                node _T_16 = bits(dividend_invert, 31, 31) @[divider.scala 93:41]
                minuend <= _T_16 @[divider.scala 93:23]
                skip @[divider.scala 91:42]
              else : @[divider.scala 94:25]
                node _T_17 = bits(dividend_r, 31, 31) @[divider.scala 95:36]
                minuend <= _T_17 @[divider.scala 95:23]
                skip @[divider.scala 94:25]
              node _T_18 = bits(divisor_r, 31, 31) @[divider.scala 97:27]
              node _T_19 = eq(_T_18, UInt<1>("h01")) @[divider.scala 97:32]
              when _T_19 : @[divider.scala 97:41]
                divisor_r <= divisor_invert @[divider.scala 98:25]
                skip @[divider.scala 97:41]
              skip @[divider.scala 90:34]
            else : @[divider.scala 100:23]
              node _T_20 = bits(dividend_r, 31, 31) @[divider.scala 101:34]
              minuend <= _T_20 @[divider.scala 101:21]
              skip @[divider.scala 100:23]
            node _T_21 = bits(dividend_r, 31, 31) @[divider.scala 105:50]
            node _T_22 = bits(divisor_r, 31, 31) @[divider.scala 105:66]
            node _T_23 = xor(_T_21, _T_22) @[divider.scala 105:55]
            node _T_24 = and(op_div, _T_23) @[divider.scala 105:36]
            node _T_25 = bits(dividend_r, 31, 31) @[divider.scala 105:97]
            node _T_26 = and(op_rem, _T_25) @[divider.scala 105:84]
            node _T_27 = or(_T_24, _T_26) @[divider.scala 105:73]
            invert_result <= _T_27 @[divider.scala 105:25]
            skip @[divider.scala 83:21]
          skip @[divider.scala 73:24]
        else : @[divider.scala 107:19]
          state <= UInt<4>("h01") @[divider.scala 108:15]
          result_o_reg <= UInt<1>("h00") @[divider.scala 109:22]
          ready_o_reg <= UInt<1>("h00") @[divider.scala 110:21]
          skip @[divider.scala 107:19]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_28 = eq(UInt<4>("h04"), state) @[Conditional.scala 37:30]
        when _T_28 : @[Conditional.scala 39:67]
          when io.start_i : @[divider.scala 115:24]
            node _T_29 = bits(dividend_r, 30, 0) @[divider.scala 116:37]
            node _T_30 = cat(_T_29, UInt<1>("h00")) @[Cat.scala 30:58]
            dividend_r <= _T_30 @[divider.scala 116:20]
            div_result <= div_result_tmp @[divider.scala 117:20]
            node _T_31 = bits(count, 31, 1) @[divider.scala 118:37]
            node _T_32 = cat(UInt<1>("h00"), _T_31) @[Cat.scala 30:58]
            count <= _T_32 @[divider.scala 118:15]
            node _T_33 = neq(count, UInt<1>("h00")) @[divider.scala 119:20]
            when _T_33 : @[divider.scala 119:25]
              node _T_34 = bits(dividend_r, 30, 30) @[divider.scala 120:49]
              node _T_35 = cat(minuend_tmp, _T_34) @[Cat.scala 30:58]
              minuend <= _T_35 @[divider.scala 120:19]
              skip @[divider.scala 119:25]
            else : @[divider.scala 121:21]
              state <= UInt<4>("h08") @[divider.scala 122:17]
              node _T_36 = mux(minuend_ge_divisor, minuend_sub_res, minuend) @[divider.scala 123:28]
              div_remain <= _T_36 @[divider.scala 123:22]
              skip @[divider.scala 121:21]
            skip @[divider.scala 115:24]
          else : @[divider.scala 125:19]
            state <= UInt<4>("h01") @[divider.scala 126:15]
            result_o_reg <= UInt<1>("h00") @[divider.scala 127:22]
            ready_o_reg <= UInt<1>("h00") @[divider.scala 128:21]
            skip @[divider.scala 125:19]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_37 = eq(UInt<4>("h08"), state) @[Conditional.scala 37:30]
          when _T_37 : @[Conditional.scala 39:67]
            when io.start_i : @[divider.scala 133:24]
              ready_o_reg <= UInt<1>("h01") @[divider.scala 134:21]
              state <= UInt<4>("h01") @[divider.scala 135:15]
              node _T_38 = or(op_div, op_divu) @[divider.scala 136:21]
              when _T_38 : @[divider.scala 136:33]
                when invert_result : @[divider.scala 137:31]
                  node _T_39 = sub(UInt<1>("h00"), div_result) @[divider.scala 138:29]
                  node _T_40 = tail(_T_39, 1) @[divider.scala 138:29]
                  result_o_reg <= _T_40 @[divider.scala 138:26]
                  skip @[divider.scala 137:31]
                else : @[divider.scala 139:23]
                  result_o_reg <= div_result @[divider.scala 140:26]
                  skip @[divider.scala 139:23]
                skip @[divider.scala 136:33]
              else : @[divider.scala 142:21]
                when invert_result : @[divider.scala 143:31]
                  node _T_41 = sub(UInt<1>("h00"), div_remain) @[divider.scala 144:29]
                  node _T_42 = tail(_T_41, 1) @[divider.scala 144:29]
                  result_o_reg <= _T_42 @[divider.scala 144:26]
                  skip @[divider.scala 143:31]
                else : @[divider.scala 145:23]
                  result_o_reg <= div_remain @[divider.scala 146:26]
                  skip @[divider.scala 145:23]
                skip @[divider.scala 142:21]
              skip @[divider.scala 133:24]
            else : @[divider.scala 149:19]
              state <= UInt<4>("h01") @[divider.scala 150:15]
              result_o_reg <= UInt<1>("h00") @[divider.scala 151:22]
              ready_o_reg <= UInt<1>("h00") @[divider.scala 152:21]
              skip @[divider.scala 149:19]
            skip @[Conditional.scala 39:67]
    
  module exu_muldiv : 
    input clock : Clock
    input reset : Reset
    output io : {flip muldiv_op1_i : UInt<32>, flip muldiv_op2_i : UInt<32>, flip muldiv_op_mul_i : UInt<1>, flip muldiv_op_mulh_i : UInt<1>, flip muldiv_op_mulhsu_i : UInt<1>, flip muldiv_op_mulhu_i : UInt<1>, flip muldiv_op_div_i : UInt<1>, flip muldiv_op_divu_i : UInt<1>, flip muldiv_op_rem_i : UInt<1>, flip muldiv_op_remu_i : UInt<1>, flip int_stall_i : UInt<1>, muldiv_reg_wdata_o : UInt<32>, muldiv_reg_we_o : UInt<1>, muldiv_stall_o : UInt<1>}
    
    inst u_divider of Divider @[EX_muldiv.scala 32:25]
    u_divider.clock <= clock
    u_divider.reset <= reset
    wire div_result : UInt<32> @[EX_muldiv.scala 33:24]
    wire div_ready : UInt<1> @[EX_muldiv.scala 34:23]
    div_result <= u_divider.io.result_o @[EX_muldiv.scala 35:14]
    div_ready <= u_divider.io.ready_o @[EX_muldiv.scala 36:13]
    node _T = or(io.muldiv_op_div_i, io.muldiv_op_divu_i) @[EX_muldiv.scala 39:35]
    node _T_1 = or(_T, io.muldiv_op_rem_i) @[EX_muldiv.scala 39:57]
    node op_div = or(_T_1, io.muldiv_op_remu_i) @[EX_muldiv.scala 39:78]
    node _T_2 = eq(div_ready, UInt<1>("h00")) @[EX_muldiv.scala 40:29]
    node _T_3 = and(op_div, _T_2) @[EX_muldiv.scala 40:26]
    node _T_4 = eq(io.int_stall_i, UInt<1>("h00")) @[EX_muldiv.scala 40:43]
    node div_start = and(_T_3, _T_4) @[EX_muldiv.scala 40:40]
    node _T_5 = cat(io.muldiv_op_rem_i, io.muldiv_op_remu_i) @[Cat.scala 30:58]
    node _T_6 = cat(io.muldiv_op_div_i, io.muldiv_op_divu_i) @[Cat.scala 30:58]
    node div_op = cat(_T_6, _T_5) @[Cat.scala 30:58]
    u_divider.io.dividend_i <= io.muldiv_op1_i @[EX_muldiv.scala 43:27]
    u_divider.io.divisor_i <= io.muldiv_op2_i @[EX_muldiv.scala 44:26]
    u_divider.io.start_i <= div_start @[EX_muldiv.scala 45:24]
    u_divider.io.op_i <= div_op @[EX_muldiv.scala 46:21]
    node _T_7 = or(io.muldiv_op_mul_i, io.muldiv_op_mulh_i) @[EX_muldiv.scala 50:35]
    node _T_8 = or(_T_7, io.muldiv_op_mulhsu_i) @[EX_muldiv.scala 50:57]
    node op_mul = or(_T_8, io.muldiv_op_mulhu_i) @[EX_muldiv.scala 50:81]
    reg muldiv_op1_r : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Reg.scala 27:20]
    when op_mul : @[Reg.scala 28:19]
      muldiv_op1_r <= io.muldiv_op1_i @[Reg.scala 28:23]
      skip @[Reg.scala 28:19]
    reg muldiv_op2_r : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Reg.scala 27:20]
    when op_mul : @[Reg.scala 28:19]
      muldiv_op2_r <= io.muldiv_op2_i @[Reg.scala 28:23]
      skip @[Reg.scala 28:19]
    reg mul_ready_r : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[EX_muldiv.scala 56:28]
    node _T_9 = eq(mul_ready_r, UInt<1>("h00")) @[EX_muldiv.scala 57:19]
    node mul_ready = and(_T_9, op_mul) @[EX_muldiv.scala 57:32]
    mul_ready_r <= mul_ready @[EX_muldiv.scala 58:15]
    node _T_10 = eq(mul_ready_r, UInt<1>("h00")) @[EX_muldiv.scala 60:19]
    node mul_start = and(_T_10, op_mul) @[EX_muldiv.scala 60:32]
    node op1_is_signed = bits(muldiv_op1_r, 31, 31) @[EX_muldiv.scala 62:35]
    node op2_is_signed = bits(muldiv_op2_r, 31, 31) @[EX_muldiv.scala 63:35]
    node _T_11 = sub(UInt<1>("h00"), muldiv_op1_r) @[EX_muldiv.scala 64:42]
    node _T_12 = tail(_T_11, 1) @[EX_muldiv.scala 64:42]
    node op1_complcode = mux(op1_is_signed, _T_12, muldiv_op1_r) @[EX_muldiv.scala 64:26]
    node _T_13 = sub(UInt<1>("h00"), muldiv_op2_r) @[EX_muldiv.scala 65:42]
    node _T_14 = tail(_T_13, 1) @[EX_muldiv.scala 65:42]
    node op2_complcode = mux(op2_is_signed, _T_14, muldiv_op2_r) @[EX_muldiv.scala 65:26]
    node _T_15 = or(io.muldiv_op_mul_i, io.muldiv_op_mulhu_i) @[EX_muldiv.scala 67:40]
    node op1_mul = mux(_T_15, muldiv_op1_r, op1_complcode) @[EX_muldiv.scala 67:20]
    node _T_16 = or(io.muldiv_op_mul_i, io.muldiv_op_mulhu_i) @[EX_muldiv.scala 68:40]
    node _T_17 = or(_T_16, io.muldiv_op_mulhsu_i) @[EX_muldiv.scala 68:63]
    node op2_mul = mux(_T_17, muldiv_op2_r, op2_complcode) @[EX_muldiv.scala 68:20]
    node mul_res_tmp = mul(op1_mul, op2_mul) @[EX_muldiv.scala 70:29]
    node _T_18 = sub(UInt<1>("h00"), mul_res_tmp) @[EX_muldiv.scala 71:31]
    node mul_res_tmp_complcode = tail(_T_18, 1) @[EX_muldiv.scala 71:31]
    node mul_res = bits(mul_res_tmp, 31, 0) @[EX_muldiv.scala 72:28]
    node mulhu_res = bits(mul_res_tmp, 63, 32) @[EX_muldiv.scala 73:30]
    node _T_19 = xor(op1_is_signed, op2_is_signed) @[EX_muldiv.scala 74:36]
    node _T_20 = bits(mul_res_tmp_complcode, 63, 32) @[EX_muldiv.scala 74:74]
    node _T_21 = bits(mul_res_tmp, 63, 32) @[EX_muldiv.scala 74:95]
    node mulh_res = mux(_T_19, _T_20, _T_21) @[EX_muldiv.scala 74:21]
    node _T_22 = bits(mul_res_tmp_complcode, 63, 32) @[EX_muldiv.scala 75:60]
    node _T_23 = bits(mul_res_tmp, 63, 32) @[EX_muldiv.scala 75:81]
    node mulhsu_res = mux(op1_is_signed, _T_22, _T_23) @[EX_muldiv.scala 75:23]
    wire mul_op_res : UInt<32> @[EX_muldiv.scala 77:24]
    node _T_24 = eq(io.muldiv_op_mulhsu_i, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_25 = mux(_T_24, mulhsu_res, UInt<32>("h00")) @[Mux.scala 68:16]
    node _T_26 = eq(io.muldiv_op_mulh_i, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_27 = mux(_T_26, mulh_res, _T_25) @[Mux.scala 68:16]
    node _T_28 = eq(io.muldiv_op_mulhu_i, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_29 = mux(_T_28, mulhu_res, _T_27) @[Mux.scala 68:16]
    node _T_30 = eq(io.muldiv_op_mul_i, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_31 = mux(_T_30, mul_res, _T_29) @[Mux.scala 68:16]
    mul_op_res <= _T_31 @[EX_muldiv.scala 78:14]
    node _T_32 = or(div_result, mul_op_res) @[EX_muldiv.scala 86:39]
    io.muldiv_reg_wdata_o <= _T_32 @[EX_muldiv.scala 86:25]
    node _T_33 = or(div_ready, mul_ready_r) @[EX_muldiv.scala 87:35]
    io.muldiv_reg_we_o <= _T_33 @[EX_muldiv.scala 87:22]
    node _T_34 = or(div_start, mul_start) @[EX_muldiv.scala 88:34]
    io.muldiv_stall_o <= _T_34 @[EX_muldiv.scala 88:21]
    
  module EX : 
    input clock : Clock
    input reset : Reset
    output io : {flip id_i : {inst_valid : UInt<1>, inst : UInt<32>, pc : UInt<32>, rd_waddr : UInt<5>, rd_we : UInt<1>, rs1_rdata : UInt<32>, rs2_rdata : UInt<32>, dec_imm : UInt<32>, dec_info_bus : UInt<19>}, flip mem_alu_res : UInt<32>, flip mem_pc : UInt<32>, flip wb_alu_res : UInt<32>, flip wb_pc : UInt<32>, flip last_rs1_rd : UInt<1>, flip last_rs2_rd : UInt<1>, flip last_two_rs1_rd : UInt<1>, flip last_two_rs2_rd : UInt<1>, flip load1 : UInt<1>, flip load2 : UInt<1>, flip csr_rdata_i : UInt<32>, csr_raddr_o : UInt<32>, csr_wdata_o : UInt<32>, csr_we_o : UInt<1>, csr_waddr_o : UInt<32>, flip int_stall_i : UInt<1>, inst_ecall_o : UInt<1>, inst_ebreak_o : UInt<1>, inst_mret_o : UInt<1>, inst_dret_o : UInt<1>, hold_flag_o : UInt<1>, jump_flag_o : UInt<1>, jump_addr_o : UInt<32>, ex_o : {inst_valid : UInt<1>, inst : UInt<32>, pc : UInt<32>, rd_waddr : UInt<5>, rd_we : UInt<1>, req_alu : UInt<1>, alu_res : UInt<32>, bjp_op_jump : UInt<1>, bjp_res : UInt<32>, muldiv_reg_wdata_o : UInt<32>, muldiv_reg_we_o : UInt<1>, csr_reg_we : UInt<1>, csr_rdata_o : UInt<32>, req_mem_o : UInt<1>, mem_op1_o : UInt<32>, mem_op2_o : UInt<32>, mem_rs2_data_o : UInt<32>, mem_op_lb_o : UInt<1>, mem_op_lh_o : UInt<1>, mem_op_lw_o : UInt<1>, mem_op_lbu_o : UInt<1>, mem_op_lhu_o : UInt<1>, mem_op_sb_o : UInt<1>, mem_op_sh_o : UInt<1>, mem_op_sw_o : UInt<1>}}
    
    io.ex_o.inst <= io.id_i.inst @[EX.scala 47:17]
    io.ex_o.inst_valid <= io.id_i.inst_valid @[EX.scala 48:23]
    io.ex_o.pc <= io.id_i.pc @[EX.scala 49:15]
    io.ex_o.rd_waddr <= io.id_i.rd_waddr @[EX.scala 50:21]
    io.ex_o.rd_we <= io.id_i.rd_we @[EX.scala 51:18]
    inst EX_ALU of EX_ALU @[EX.scala 53:22]
    EX_ALU.clock <= clock
    EX_ALU.reset <= reset
    inst EX_dispatch of EX_dispatch @[EX.scala 54:27]
    EX_dispatch.clock <= clock
    EX_dispatch.reset <= reset
    inst exu_muldiv of exu_muldiv @[EX.scala 55:26]
    exu_muldiv.clock <= clock
    exu_muldiv.reset <= reset
    EX_dispatch.io.dec_info_bus_i <= io.id_i.dec_info_bus @[EX.scala 58:34]
    EX_dispatch.io.dec_imm_i <= io.id_i.dec_imm @[EX.scala 59:29]
    EX_dispatch.io.dec_pc_i <= io.id_i.pc @[EX.scala 60:28]
    EX_ALU.io.ex_dispatch_ALUIO.sys_op_dret_o <= EX_dispatch.io.ex_dispatch_ALUIO.sys_op_dret_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.sys_op_fence_o <= EX_dispatch.io.ex_dispatch_ALUIO.sys_op_fence_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.sys_op_ebreak_o <= EX_dispatch.io.ex_dispatch_ALUIO.sys_op_ebreak_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.sys_op_ecall_o <= EX_dispatch.io.ex_dispatch_ALUIO.sys_op_ecall_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.sys_op_mret_o <= EX_dispatch.io.ex_dispatch_ALUIO.sys_op_mret_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.sys_op_nop_o <= EX_dispatch.io.ex_dispatch_ALUIO.sys_op_nop_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.csr_csrrc_o <= EX_dispatch.io.ex_dispatch_ALUIO.csr_csrrc_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.csr_csrrs_o <= EX_dispatch.io.ex_dispatch_ALUIO.csr_csrrs_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.csr_csrrw_o <= EX_dispatch.io.ex_dispatch_ALUIO.csr_csrrw_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.csr_op1_o <= EX_dispatch.io.ex_dispatch_ALUIO.csr_op1_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.req_csr_o <= EX_dispatch.io.ex_dispatch_ALUIO.req_csr_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.muldiv_op_remu_o <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op_remu_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.muldiv_op_rem_o <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op_rem_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.muldiv_op_divu_o <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op_divu_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.muldiv_op_div_o <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op_div_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.muldiv_op_mulhu_o <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op_mulhu_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.muldiv_op_mulhsu_o <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op_mulhsu_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.muldiv_op_mulh_o <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op_mulh_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.muldiv_op_mul_o <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op_mul_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.muldiv_op2_o <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op2_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.muldiv_op1_o <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op1_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.req_muldiv_o <= EX_dispatch.io.ex_dispatch_ALUIO.req_muldiv_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.bjp_op_jalr_o <= EX_dispatch.io.ex_dispatch_ALUIO.bjp_op_jalr_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.bjp_op_bgeu_o <= EX_dispatch.io.ex_dispatch_ALUIO.bjp_op_bgeu_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.bjp_op_bge_o <= EX_dispatch.io.ex_dispatch_ALUIO.bjp_op_bge_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.bjp_op_bltu_o <= EX_dispatch.io.ex_dispatch_ALUIO.bjp_op_bltu_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.bjp_op_blt_o <= EX_dispatch.io.ex_dispatch_ALUIO.bjp_op_blt_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.bjp_op_bne_o <= EX_dispatch.io.ex_dispatch_ALUIO.bjp_op_bne_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.bjp_op_beq_o <= EX_dispatch.io.ex_dispatch_ALUIO.bjp_op_beq_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.bjp_op_jump_o <= EX_dispatch.io.ex_dispatch_ALUIO.bjp_op_jump_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.bjp_jump_op2_o <= EX_dispatch.io.ex_dispatch_ALUIO.bjp_jump_op2_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.bjp_jump_op1_o <= EX_dispatch.io.ex_dispatch_ALUIO.bjp_jump_op1_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.bjp_op2_o <= EX_dispatch.io.ex_dispatch_ALUIO.bjp_op2_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.bjp_op1_o <= EX_dispatch.io.ex_dispatch_ALUIO.bjp_op1_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.req_bjp_o <= EX_dispatch.io.ex_dispatch_ALUIO.req_bjp_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.alu_op_and_o <= EX_dispatch.io.ex_dispatch_ALUIO.alu_op_and_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.alu_op_or_o <= EX_dispatch.io.ex_dispatch_ALUIO.alu_op_or_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.alu_op_sra_o <= EX_dispatch.io.ex_dispatch_ALUIO.alu_op_sra_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.alu_op_srl_o <= EX_dispatch.io.ex_dispatch_ALUIO.alu_op_srl_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.alu_op_xor_o <= EX_dispatch.io.ex_dispatch_ALUIO.alu_op_xor_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.alu_op_sltu_o <= EX_dispatch.io.ex_dispatch_ALUIO.alu_op_sltu_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.alu_op_slt_o <= EX_dispatch.io.ex_dispatch_ALUIO.alu_op_slt_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.alu_op_sll_o <= EX_dispatch.io.ex_dispatch_ALUIO.alu_op_sll_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.alu_op_sub_o <= EX_dispatch.io.ex_dispatch_ALUIO.alu_op_sub_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.alu_op_add_o <= EX_dispatch.io.ex_dispatch_ALUIO.alu_op_add_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.alu_op_auipc_o <= EX_dispatch.io.ex_dispatch_ALUIO.alu_op_auipc_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.alu_op_lui_o <= EX_dispatch.io.ex_dispatch_ALUIO.alu_op_lui_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.alu_op2_o <= EX_dispatch.io.ex_dispatch_ALUIO.alu_op2_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.alu_op1_o <= EX_dispatch.io.ex_dispatch_ALUIO.alu_op1_o @[EX.scala 62:37]
    EX_ALU.io.ex_dispatch_ALUIO.req_alu_o <= EX_dispatch.io.ex_dispatch_ALUIO.req_alu_o @[EX.scala 62:37]
    exu_muldiv.io.int_stall_i <= io.int_stall_i @[EX.scala 64:30]
    exu_muldiv.io.muldiv_op1_i <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op1_o @[EX.scala 65:31]
    exu_muldiv.io.muldiv_op2_i <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op2_o @[EX.scala 66:31]
    exu_muldiv.io.muldiv_op_mul_i <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op_mul_o @[EX.scala 67:34]
    exu_muldiv.io.muldiv_op_mulh_i <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op_mulh_o @[EX.scala 68:35]
    exu_muldiv.io.muldiv_op_mulhsu_i <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op_mulhsu_o @[EX.scala 69:37]
    exu_muldiv.io.muldiv_op_mulhu_i <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op_mulhu_o @[EX.scala 70:36]
    exu_muldiv.io.muldiv_op_div_i <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op_div_o @[EX.scala 71:34]
    exu_muldiv.io.muldiv_op_divu_i <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op_divu_o @[EX.scala 72:35]
    exu_muldiv.io.muldiv_op_rem_i <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op_rem_o @[EX.scala 73:34]
    exu_muldiv.io.muldiv_op_remu_i <= EX_dispatch.io.ex_dispatch_ALUIO.muldiv_op_remu_o @[EX.scala 74:35]
    io.ex_o.csr_reg_we <= EX_dispatch.io.ex_dispatch_ALUIO.req_csr_o @[EX.scala 76:23]
    io.ex_o.csr_rdata_o <= io.csr_rdata_i @[EX.scala 77:24]
    io.ex_o.muldiv_reg_wdata_o <= exu_muldiv.io.muldiv_reg_wdata_o @[EX.scala 78:31]
    io.ex_o.muldiv_reg_we_o <= exu_muldiv.io.muldiv_reg_we_o @[EX.scala 79:28]
    io.ex_o.bjp_op_jump <= EX_dispatch.io.ex_dispatch_ALUIO.bjp_op_jump_o @[EX.scala 80:24]
    io.ex_o.bjp_res <= io.id_i.pc @[EX.scala 81:20]
    io.ex_o.req_alu <= EX_dispatch.io.ex_dispatch_ALUIO.req_alu_o @[EX.scala 82:20]
    io.ex_o.inst_valid <= io.id_i.inst_valid @[EX.scala 83:23]
    io.ex_o.inst <= io.id_i.inst @[EX.scala 84:17]
    io.ex_o.rd_waddr <= io.id_i.rd_waddr @[EX.scala 85:21]
    io.ex_o.req_mem_o <= EX_dispatch.io.req_mem_o @[EX.scala 87:22]
    io.ex_o.mem_rs2_data_o <= EX_dispatch.io.mem_rs2_data_o @[EX.scala 88:27]
    io.ex_o.mem_op_lb_o <= EX_dispatch.io.mem_op_lb_o @[EX.scala 89:24]
    io.ex_o.mem_op_lh_o <= EX_dispatch.io.mem_op_lh_o @[EX.scala 90:24]
    io.ex_o.mem_op_lw_o <= EX_dispatch.io.mem_op_lw_o @[EX.scala 91:24]
    io.ex_o.mem_op_lbu_o <= EX_dispatch.io.mem_op_lbu_o @[EX.scala 92:25]
    io.ex_o.mem_op_lhu_o <= EX_dispatch.io.mem_op_lhu_o @[EX.scala 93:25]
    io.ex_o.mem_op_sb_o <= EX_dispatch.io.mem_op_sb_o @[EX.scala 94:24]
    io.ex_o.mem_op_sh_o <= EX_dispatch.io.mem_op_sh_o @[EX.scala 95:24]
    io.ex_o.mem_op_sw_o <= EX_dispatch.io.mem_op_sw_o @[EX.scala 96:24]
    io.ex_o.mem_op1_o <= EX_dispatch.io.mem_op1_o @[EX.scala 97:22]
    io.ex_o.mem_op2_o <= EX_dispatch.io.mem_op2_o @[EX.scala 98:22]
    wire csr_op1 : UInt<32> @[EX.scala 102:21]
    wire csr_op2 : UInt<32> @[EX.scala 103:21]
    node _T = not(EX_dispatch.io.ex_dispatch_ALUIO.csr_op1_o) @[EX.scala 104:66]
    node _T_1 = mux(EX_dispatch.io.ex_dispatch_ALUIO.csr_csrrc_o, _T, EX_dispatch.io.ex_dispatch_ALUIO.csr_op1_o) @[EX.scala 104:19]
    csr_op1 <= _T_1 @[EX.scala 104:13]
    node _T_2 = mux(EX_dispatch.io.ex_dispatch_ALUIO.csr_csrrw_o, UInt<32>("h00"), io.csr_rdata_i) @[EX.scala 105:19]
    csr_op2 <= _T_2 @[EX.scala 105:13]
    EX_ALU.io.ex_dispatch_ALUIO.req_csr_o <= EX_dispatch.io.ex_dispatch_ALUIO.req_csr_o @[EX.scala 107:42]
    EX_ALU.io.ex_dispatch_ALUIO.csr_csrrw_o <= EX_dispatch.io.ex_dispatch_ALUIO.csr_csrrw_o @[EX.scala 108:44]
    EX_ALU.io.ex_dispatch_ALUIO.csr_csrrs_o <= EX_dispatch.io.ex_dispatch_ALUIO.csr_csrrs_o @[EX.scala 109:44]
    EX_ALU.io.csr_op2_o <= csr_op2 @[EX.scala 110:24]
    EX_ALU.io.ex_dispatch_ALUIO.csr_op1_o <= csr_op1 @[EX.scala 111:42]
    io.csr_raddr_o <= EX_dispatch.io.csr_addr_o @[EX.scala 113:19]
    io.csr_waddr_o <= EX_dispatch.io.csr_addr_o @[EX.scala 114:19]
    node _T_3 = eq(io.int_stall_i, UInt<1>("h00")) @[EX.scala 115:62]
    node _T_4 = and(EX_dispatch.io.ex_dispatch_ALUIO.req_csr_o, _T_3) @[EX.scala 115:60]
    io.csr_we_o <= _T_4 @[EX.scala 115:16]
    io.csr_wdata_o <= EX_ALU.io.csr_res_o @[EX.scala 116:19]
    io.inst_ecall_o <= EX_dispatch.io.ex_dispatch_ALUIO.sys_op_ecall_o @[EX.scala 119:20]
    io.inst_ebreak_o <= EX_dispatch.io.ex_dispatch_ALUIO.sys_op_ebreak_o @[EX.scala 120:21]
    io.inst_mret_o <= EX_dispatch.io.ex_dispatch_ALUIO.sys_op_mret_o @[EX.scala 121:19]
    io.inst_dret_o <= EX_dispatch.io.ex_dispatch_ALUIO.sys_op_dret_o @[EX.scala 122:19]
    wire raw_res_one : UInt<32> @[EX.scala 124:25]
    node _T_5 = add(io.mem_pc, UInt<3>("h04")) @[EX.scala 125:136]
    node _T_6 = tail(_T_5, 1) @[EX.scala 125:136]
    node _T_7 = mux(EX_dispatch.io.ex_dispatch_ALUIO.req_bjp_o, _T_6, UInt<1>("h00")) @[EX.scala 125:83]
    node _T_8 = mux(EX_dispatch.io.ex_dispatch_ALUIO.req_alu_o, io.mem_alu_res, _T_7) @[EX.scala 125:21]
    raw_res_one <= _T_8 @[EX.scala 125:16]
    wire raw_res_two : UInt<32> @[EX.scala 126:25]
    node _T_9 = add(io.wb_pc, UInt<3>("h04")) @[EX.scala 127:134]
    node _T_10 = tail(_T_9, 1) @[EX.scala 127:134]
    node _T_11 = mux(EX_dispatch.io.ex_dispatch_ALUIO.req_bjp_o, _T_10, UInt<1>("h00")) @[EX.scala 127:82]
    node _T_12 = mux(EX_dispatch.io.ex_dispatch_ALUIO.req_alu_o, io.wb_alu_res, _T_11) @[EX.scala 127:21]
    raw_res_two <= _T_12 @[EX.scala 127:16]
    node _T_13 = or(io.last_two_rs1_rd, io.load1) @[EX.scala 128:87]
    node _T_14 = mux(_T_13, raw_res_two, io.id_i.rs1_rdata) @[EX.scala 128:67]
    node _T_15 = mux(io.last_rs1_rd, raw_res_one, _T_14) @[EX.scala 128:36]
    EX_dispatch.io.rs1_rdata_i <= _T_15 @[EX.scala 128:31]
    node _T_16 = or(io.last_two_rs2_rd, io.load2) @[EX.scala 129:86]
    node _T_17 = mux(_T_16, raw_res_two, io.id_i.rs1_rdata) @[EX.scala 129:67]
    node _T_18 = mux(io.last_rs2_rd, raw_res_one, _T_17) @[EX.scala 129:36]
    EX_dispatch.io.rs2_rdata_i <= _T_18 @[EX.scala 129:31]
    io.ex_o.alu_res <= EX_ALU.io.alu_res_o @[EX.scala 130:20]
    node _T_19 = eq(EX_dispatch.io.ex_dispatch_ALUIO.bjp_op_jalr_o, UInt<1>("h00")) @[EX.scala 132:22]
    node _T_20 = and(_T_19, EX_dispatch.io.ex_dispatch_ALUIO.req_bjp_o) @[EX.scala 132:70]
    node _T_21 = eq(EX_dispatch.io.ex_dispatch_ALUIO.bjp_op_jump_o, UInt<1>("h00")) @[EX.scala 132:160]
    node _T_22 = and(EX_dispatch.io.ex_dispatch_ALUIO.req_bjp_o, _T_21) @[EX.scala 132:158]
    node _T_23 = bits(io.id_i.dec_imm, 31, 31) @[EX.scala 132:224]
    node _T_24 = and(_T_22, _T_23) @[EX.scala 132:208]
    node prdt_taken = or(_T_20, _T_24) @[EX.scala 132:114]
    node _T_25 = eq(EX_ALU.io.bjp_cmp_res_o, UInt<1>("h00")) @[EX.scala 133:39]
    node _T_26 = and(prdt_taken, _T_25) @[EX.scala 133:37]
    node _T_27 = and(_T_26, EX_dispatch.io.ex_dispatch_ALUIO.req_bjp_o) @[EX.scala 133:64]
    node _T_28 = eq(EX_dispatch.io.ex_dispatch_ALUIO.bjp_op_jump_o, UInt<1>("h00")) @[EX.scala 133:109]
    node prdt_taken_error = and(_T_27, _T_28) @[EX.scala 133:107]
    node _T_29 = eq(prdt_taken, UInt<1>("h00")) @[EX.scala 134:20]
    node _T_30 = and(_T_29, EX_ALU.io.bjp_cmp_res_o) @[EX.scala 134:31]
    node _T_31 = eq(prdt_taken, UInt<1>("h00")) @[EX.scala 134:59]
    node _T_32 = and(_T_31, EX_ALU.io.ex_dispatch_ALUIO.bjp_op_jump_o) @[EX.scala 134:70]
    node _T_33 = or(_T_30, _T_32) @[EX.scala 134:57]
    node inst_jump = or(_T_33, EX_dispatch.io.ex_dispatch_ALUIO.sys_op_fence_o) @[EX.scala 134:114]
    wire next_pc : UInt<32> @[EX.scala 135:21]
    node _T_34 = add(io.id_i.pc, UInt<3>("h04")) @[EX.scala 136:24]
    node _T_35 = tail(_T_34, 1) @[EX.scala 136:24]
    next_pc <= _T_35 @[EX.scala 136:12]
    node _T_36 = or(inst_jump, prdt_taken_error) @[EX.scala 137:31]
    node _T_37 = eq(io.int_stall_i, UInt<1>("h00")) @[EX.scala 137:51]
    node _T_38 = and(_T_36, _T_37) @[EX.scala 137:49]
    io.jump_flag_o <= _T_38 @[EX.scala 137:19]
    node _T_39 = mux(prdt_taken_error, next_pc, EX_ALU.io.bjp_res_o) @[EX.scala 139:25]
    node _T_40 = mux(EX_dispatch.io.ex_dispatch_ALUIO.sys_op_fence_o, next_pc, _T_39) @[EX.scala 138:25]
    io.jump_addr_o <= _T_40 @[EX.scala 138:19]
    io.hold_flag_o <= exu_muldiv.io.muldiv_stall_o @[EX.scala 140:19]
    
  module EX_MEM : 
    input clock : Clock
    input reset : Reset
    output io : {flip stall_i : UInt<4>, flip flush_i : UInt<1>, flip csr_rdata_i : UInt<32>, flip ex_i : {inst_valid : UInt<1>, inst : UInt<32>, pc : UInt<32>, rd_waddr : UInt<5>, rd_we : UInt<1>, req_alu : UInt<1>, alu_res : UInt<32>, bjp_op_jump : UInt<1>, bjp_res : UInt<32>, muldiv_reg_wdata_o : UInt<32>, muldiv_reg_we_o : UInt<1>, csr_reg_we : UInt<1>, csr_rdata_o : UInt<32>, req_mem_o : UInt<1>, mem_op1_o : UInt<32>, mem_op2_o : UInt<32>, mem_rs2_data_o : UInt<32>, mem_op_lb_o : UInt<1>, mem_op_lh_o : UInt<1>, mem_op_lw_o : UInt<1>, mem_op_lbu_o : UInt<1>, mem_op_lhu_o : UInt<1>, mem_op_sb_o : UInt<1>, mem_op_sh_o : UInt<1>, mem_op_sw_o : UInt<1>}, mem_o : {inst_valid : UInt<1>, inst : UInt<32>, pc : UInt<32>, rd_waddr : UInt<5>, rd_we : UInt<1>, req_alu : UInt<1>, alu_res : UInt<32>, bjp_op_jump : UInt<1>, bjp_res : UInt<32>, muldiv_reg_wdata_o : UInt<32>, muldiv_reg_we_o : UInt<1>, csr_reg_we : UInt<1>, csr_rdata_o : UInt<32>, req_mem_o : UInt<1>, mem_op1_o : UInt<32>, mem_op2_o : UInt<32>, mem_rs2_data_o : UInt<32>, mem_op_lb_o : UInt<1>, mem_op_lh_o : UInt<1>, mem_op_lw_o : UInt<1>, mem_op_lbu_o : UInt<1>, mem_op_lhu_o : UInt<1>, mem_op_sb_o : UInt<1>, mem_op_sh_o : UInt<1>, mem_op_sw_o : UInt<1>}}
    
    node _T = bits(io.stall_i, 3, 3) @[EX_MEM.scala 20:24]
    node _T_1 = not(_T) @[EX_MEM.scala 20:13]
    node _T_2 = bits(_T_1, 0, 0) @[EX_MEM.scala 20:29]
    node en = or(_T_2, io.flush_i) @[EX_MEM.scala 20:35]
    wire i_rd_waddr : UInt<5> @[EX_MEM.scala 22:24]
    node _T_3 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.rd_waddr) @[EX_MEM.scala 23:20]
    i_rd_waddr <= _T_3 @[EX_MEM.scala 23:15]
    reg _T_4 : UInt, clock with : (reset => (reset, en)) @[EX_MEM.scala 24:31]
    _T_4 <= i_rd_waddr @[EX_MEM.scala 24:31]
    io.mem_o.rd_waddr <= _T_4 @[EX_MEM.scala 24:22]
    wire i_rd_we : UInt<1> @[EX_MEM.scala 26:21]
    node _T_5 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.rd_we) @[EX_MEM.scala 27:17]
    i_rd_we <= _T_5 @[EX_MEM.scala 27:12]
    reg _T_6 : UInt<1>, clock with : (reset => (reset, en)) @[EX_MEM.scala 28:28]
    _T_6 <= i_rd_we @[EX_MEM.scala 28:28]
    io.mem_o.rd_we <= _T_6 @[EX_MEM.scala 28:19]
    wire i_inst : UInt<32> @[EX_MEM.scala 30:20]
    node _T_7 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.inst) @[EX_MEM.scala 31:16]
    i_inst <= _T_7 @[EX_MEM.scala 31:11]
    reg _T_8 : UInt, clock with : (reset => (reset, en)) @[EX_MEM.scala 32:27]
    _T_8 <= i_inst @[EX_MEM.scala 32:27]
    io.mem_o.inst <= _T_8 @[EX_MEM.scala 32:18]
    wire inst_valid : UInt<1> @[EX_MEM.scala 34:24]
    node _T_9 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.inst_valid) @[EX_MEM.scala 35:20]
    inst_valid <= _T_9 @[EX_MEM.scala 35:15]
    reg _T_10 : UInt<1>, clock with : (reset => (reset, en)) @[EX_MEM.scala 36:33]
    _T_10 <= inst_valid @[EX_MEM.scala 36:33]
    io.mem_o.inst_valid <= _T_10 @[EX_MEM.scala 36:24]
    wire pc : UInt<1> @[EX_MEM.scala 38:16]
    node _T_11 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.pc) @[EX_MEM.scala 39:12]
    pc <= _T_11 @[EX_MEM.scala 39:7]
    reg _T_12 : UInt<1>, clock with : (reset => (reset, en)) @[EX_MEM.scala 40:25]
    _T_12 <= pc @[EX_MEM.scala 40:25]
    io.mem_o.pc <= _T_12 @[EX_MEM.scala 40:16]
    wire bjp_op_jump : UInt<1> @[EX_MEM.scala 42:25]
    node _T_13 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.bjp_op_jump) @[EX_MEM.scala 43:21]
    bjp_op_jump <= _T_13 @[EX_MEM.scala 43:16]
    reg _T_14 : UInt<1>, clock with : (reset => (reset, en)) @[EX_MEM.scala 44:34]
    _T_14 <= bjp_op_jump @[EX_MEM.scala 44:34]
    io.mem_o.bjp_op_jump <= _T_14 @[EX_MEM.scala 44:25]
    wire bjp_res : UInt<32> @[EX_MEM.scala 46:21]
    node _T_15 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.bjp_res) @[EX_MEM.scala 47:17]
    bjp_res <= _T_15 @[EX_MEM.scala 47:12]
    reg _T_16 : UInt, clock with : (reset => (reset, en)) @[EX_MEM.scala 48:30]
    _T_16 <= bjp_res @[EX_MEM.scala 48:30]
    io.mem_o.bjp_res <= _T_16 @[EX_MEM.scala 48:21]
    wire csr_reg_we : UInt<1> @[EX_MEM.scala 50:24]
    node _T_17 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.csr_reg_we) @[EX_MEM.scala 51:20]
    csr_reg_we <= _T_17 @[EX_MEM.scala 51:15]
    reg _T_18 : UInt<1>, clock with : (reset => (reset, en)) @[EX_MEM.scala 52:33]
    _T_18 <= csr_reg_we @[EX_MEM.scala 52:33]
    io.mem_o.csr_reg_we <= _T_18 @[EX_MEM.scala 52:24]
    wire csr_rdata_o : UInt<32> @[EX_MEM.scala 54:25]
    node _T_19 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.csr_rdata_o) @[EX_MEM.scala 55:21]
    csr_rdata_o <= _T_19 @[EX_MEM.scala 55:16]
    reg _T_20 : UInt, clock with : (reset => (reset, en)) @[EX_MEM.scala 56:34]
    _T_20 <= csr_rdata_o @[EX_MEM.scala 56:34]
    io.mem_o.csr_rdata_o <= _T_20 @[EX_MEM.scala 56:25]
    wire muldiv_reg_we_o : UInt<1> @[EX_MEM.scala 58:29]
    node _T_21 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.muldiv_reg_we_o) @[EX_MEM.scala 59:25]
    muldiv_reg_we_o <= _T_21 @[EX_MEM.scala 59:20]
    reg _T_22 : UInt<1>, clock with : (reset => (reset, en)) @[EX_MEM.scala 60:38]
    _T_22 <= muldiv_reg_we_o @[EX_MEM.scala 60:38]
    io.mem_o.muldiv_reg_we_o <= _T_22 @[EX_MEM.scala 60:29]
    wire muldiv_reg_wdata_o : UInt<32> @[EX_MEM.scala 62:32]
    node _T_23 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.muldiv_reg_wdata_o) @[EX_MEM.scala 63:28]
    muldiv_reg_wdata_o <= _T_23 @[EX_MEM.scala 63:23]
    reg _T_24 : UInt, clock with : (reset => (reset, en)) @[EX_MEM.scala 64:41]
    _T_24 <= muldiv_reg_wdata_o @[EX_MEM.scala 64:41]
    io.mem_o.muldiv_reg_wdata_o <= _T_24 @[EX_MEM.scala 64:32]
    wire req_alu : UInt<1> @[EX_MEM.scala 66:21]
    node _T_25 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.req_alu) @[EX_MEM.scala 67:17]
    req_alu <= _T_25 @[EX_MEM.scala 67:12]
    reg _T_26 : UInt<1>, clock with : (reset => (reset, en)) @[EX_MEM.scala 68:30]
    _T_26 <= req_alu @[EX_MEM.scala 68:30]
    io.mem_o.req_alu <= _T_26 @[EX_MEM.scala 68:21]
    wire alu_res : UInt<32> @[EX_MEM.scala 70:21]
    node _T_27 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.alu_res) @[EX_MEM.scala 71:17]
    alu_res <= _T_27 @[EX_MEM.scala 71:12]
    reg _T_28 : UInt, clock with : (reset => (reset, en)) @[EX_MEM.scala 72:30]
    _T_28 <= alu_res @[EX_MEM.scala 72:30]
    io.mem_o.alu_res <= _T_28 @[EX_MEM.scala 72:21]
    wire req_mem_o : UInt<1> @[EX_MEM.scala 74:23]
    node _T_29 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.req_mem_o) @[EX_MEM.scala 75:19]
    req_mem_o <= _T_29 @[EX_MEM.scala 75:14]
    reg _T_30 : UInt<1>, clock with : (reset => (reset, en)) @[EX_MEM.scala 76:32]
    _T_30 <= req_mem_o @[EX_MEM.scala 76:32]
    io.mem_o.req_mem_o <= _T_30 @[EX_MEM.scala 76:23]
    wire mem_op1_o : UInt<32> @[EX_MEM.scala 78:23]
    node _T_31 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.mem_op1_o) @[EX_MEM.scala 79:19]
    mem_op1_o <= _T_31 @[EX_MEM.scala 79:14]
    reg _T_32 : UInt, clock with : (reset => (reset, en)) @[EX_MEM.scala 80:32]
    _T_32 <= mem_op1_o @[EX_MEM.scala 80:32]
    io.mem_o.mem_op1_o <= _T_32 @[EX_MEM.scala 80:23]
    wire mem_op2_o : UInt<32> @[EX_MEM.scala 82:23]
    node _T_33 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.mem_op2_o) @[EX_MEM.scala 83:19]
    mem_op2_o <= _T_33 @[EX_MEM.scala 83:14]
    reg _T_34 : UInt, clock with : (reset => (reset, en)) @[EX_MEM.scala 84:32]
    _T_34 <= mem_op2_o @[EX_MEM.scala 84:32]
    io.mem_o.mem_op2_o <= _T_34 @[EX_MEM.scala 84:23]
    wire mem_rs2_data_o : UInt<32> @[EX_MEM.scala 86:28]
    node _T_35 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.mem_rs2_data_o) @[EX_MEM.scala 87:24]
    mem_rs2_data_o <= _T_35 @[EX_MEM.scala 87:19]
    reg _T_36 : UInt, clock with : (reset => (reset, en)) @[EX_MEM.scala 88:37]
    _T_36 <= mem_rs2_data_o @[EX_MEM.scala 88:37]
    io.mem_o.mem_rs2_data_o <= _T_36 @[EX_MEM.scala 88:28]
    wire mem_op_lb_o : UInt<1> @[EX_MEM.scala 91:25]
    node _T_37 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.mem_op_lb_o) @[EX_MEM.scala 92:21]
    mem_op_lb_o <= _T_37 @[EX_MEM.scala 92:16]
    reg _T_38 : UInt<1>, clock with : (reset => (reset, en)) @[EX_MEM.scala 93:34]
    _T_38 <= mem_op_lb_o @[EX_MEM.scala 93:34]
    io.mem_o.mem_op_lb_o <= _T_38 @[EX_MEM.scala 93:25]
    wire mem_op_lh_o : UInt<1> @[EX_MEM.scala 95:25]
    node _T_39 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.mem_op_lh_o) @[EX_MEM.scala 96:21]
    mem_op_lh_o <= _T_39 @[EX_MEM.scala 96:16]
    reg _T_40 : UInt<1>, clock with : (reset => (reset, en)) @[EX_MEM.scala 97:34]
    _T_40 <= mem_op_lh_o @[EX_MEM.scala 97:34]
    io.mem_o.mem_op_lh_o <= _T_40 @[EX_MEM.scala 97:25]
    wire mem_op_lw_o : UInt<1> @[EX_MEM.scala 99:25]
    node _T_41 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.mem_op_lw_o) @[EX_MEM.scala 100:21]
    mem_op_lw_o <= _T_41 @[EX_MEM.scala 100:16]
    reg _T_42 : UInt<1>, clock with : (reset => (reset, en)) @[EX_MEM.scala 101:34]
    _T_42 <= mem_op_lw_o @[EX_MEM.scala 101:34]
    io.mem_o.mem_op_lw_o <= _T_42 @[EX_MEM.scala 101:25]
    wire mem_op_lbu_o : UInt<1> @[EX_MEM.scala 103:26]
    node _T_43 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.mem_op_lbu_o) @[EX_MEM.scala 104:22]
    mem_op_lbu_o <= _T_43 @[EX_MEM.scala 104:17]
    reg _T_44 : UInt<1>, clock with : (reset => (reset, en)) @[EX_MEM.scala 105:35]
    _T_44 <= mem_op_lbu_o @[EX_MEM.scala 105:35]
    io.mem_o.mem_op_lbu_o <= _T_44 @[EX_MEM.scala 105:26]
    wire mem_op_lhu_o : UInt<1> @[EX_MEM.scala 107:26]
    node _T_45 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.mem_op_lhu_o) @[EX_MEM.scala 108:22]
    mem_op_lhu_o <= _T_45 @[EX_MEM.scala 108:17]
    reg _T_46 : UInt<1>, clock with : (reset => (reset, en)) @[EX_MEM.scala 109:35]
    _T_46 <= mem_op_lhu_o @[EX_MEM.scala 109:35]
    io.mem_o.mem_op_lhu_o <= _T_46 @[EX_MEM.scala 109:26]
    wire mem_op_sb_o : UInt<1> @[EX_MEM.scala 111:25]
    node _T_47 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.mem_op_sb_o) @[EX_MEM.scala 112:21]
    mem_op_sb_o <= _T_47 @[EX_MEM.scala 112:16]
    reg _T_48 : UInt<1>, clock with : (reset => (reset, en)) @[EX_MEM.scala 113:34]
    _T_48 <= mem_op_sb_o @[EX_MEM.scala 113:34]
    io.mem_o.mem_op_sb_o <= _T_48 @[EX_MEM.scala 113:25]
    wire mem_op_sh_o : UInt<1> @[EX_MEM.scala 115:25]
    node _T_49 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.mem_op_sh_o) @[EX_MEM.scala 116:21]
    mem_op_sh_o <= _T_49 @[EX_MEM.scala 116:16]
    reg _T_50 : UInt<1>, clock with : (reset => (reset, en)) @[EX_MEM.scala 117:34]
    _T_50 <= mem_op_sh_o @[EX_MEM.scala 117:34]
    io.mem_o.mem_op_sh_o <= _T_50 @[EX_MEM.scala 117:25]
    wire mem_op_sw_o : UInt<1> @[EX_MEM.scala 119:25]
    node _T_51 = mux(io.flush_i, UInt<1>("h00"), io.ex_i.mem_op_sw_o) @[EX_MEM.scala 120:21]
    mem_op_sw_o <= _T_51 @[EX_MEM.scala 120:16]
    reg _T_52 : UInt<1>, clock with : (reset => (reset, en)) @[EX_MEM.scala 121:34]
    _T_52 <= mem_op_sw_o @[EX_MEM.scala 121:34]
    io.mem_o.mem_op_sw_o <= _T_52 @[EX_MEM.scala 121:25]
    
  module MEM : 
    input clock : Clock
    input reset : Reset
    output io : {flip ex_i : {inst_valid : UInt<1>, inst : UInt<32>, pc : UInt<32>, rd_waddr : UInt<5>, rd_we : UInt<1>, req_alu : UInt<1>, alu_res : UInt<32>, bjp_op_jump : UInt<1>, bjp_res : UInt<32>, muldiv_reg_wdata_o : UInt<32>, muldiv_reg_we_o : UInt<1>, csr_reg_we : UInt<1>, csr_rdata_o : UInt<32>, req_mem_o : UInt<1>, mem_op1_o : UInt<32>, mem_op2_o : UInt<32>, mem_rs2_data_o : UInt<32>, mem_op_lb_o : UInt<1>, mem_op_lh_o : UInt<1>, mem_op_lw_o : UInt<1>, mem_op_lbu_o : UInt<1>, mem_op_lhu_o : UInt<1>, mem_op_sb_o : UInt<1>, mem_op_sh_o : UInt<1>, mem_op_sw_o : UInt<1>}, mem_access_misaligned_o : UInt<1>, mem_stall_o : UInt<1>, mem_addr_o : UInt<32>, mem_mem_we_o : UInt<1>, mem_be_o : UInt<4>, mem_req_o : UInt<1>, flip mem_rdata_i : UInt<32>, flip mem_gnt_i : UInt<1>, flip mem_rvalid_i : UInt<1>, mem_o : {inst_valid : UInt<1>, inst : UInt<32>, pc : UInt<32>, rd_waddr : UInt<5>, rd_we : UInt<1>, req_alu : UInt<1>, alu_res : UInt<32>, bjp_op_jump : UInt<1>, bjp_res : UInt<32>, muldiv_reg_we : UInt<1>, muldiv_reg_wdata : UInt<32>, mem_reg_we : UInt<1>, mem_wdata : UInt<32>, csr_reg_we : UInt<1>, csr_reg_wdata : UInt<32>}}
    
    io.mem_o.inst <= io.ex_i.inst @[MemData.scala 29:18]
    io.mem_o.inst_valid <= io.ex_i.inst_valid @[MemData.scala 30:24]
    io.mem_o.pc <= io.ex_i.pc @[MemData.scala 31:16]
    io.mem_o.rd_we <= io.ex_i.rd_we @[MemData.scala 32:19]
    io.mem_o.rd_waddr <= io.ex_i.rd_waddr @[MemData.scala 33:22]
    io.mem_o.req_alu <= io.ex_i.req_alu @[MemData.scala 34:21]
    io.mem_o.alu_res <= io.ex_i.alu_res @[MemData.scala 35:21]
    io.mem_o.bjp_op_jump <= io.ex_i.bjp_op_jump @[MemData.scala 36:25]
    io.mem_o.bjp_res <= io.ex_i.bjp_res @[MemData.scala 37:21]
    io.mem_o.muldiv_reg_we <= io.ex_i.muldiv_reg_we_o @[MemData.scala 38:27]
    io.mem_o.muldiv_reg_wdata <= io.ex_i.muldiv_reg_wdata_o @[MemData.scala 39:30]
    io.mem_o.csr_reg_we <= io.ex_i.csr_reg_we @[MemData.scala 40:24]
    io.mem_o.csr_reg_wdata <= io.ex_i.csr_rdata_o @[MemData.scala 41:27]
    wire mem_addr_i : UInt<32> @[MemData.scala 45:24]
    node _T = add(io.ex_i.mem_op1_o, io.ex_i.mem_op2_o) @[MemData.scala 46:56]
    node _T_1 = tail(_T, 1) @[MemData.scala 46:56]
    node _T_2 = mux(io.ex_i.req_mem_o, _T_1, UInt<1>("h00")) @[MemData.scala 46:20]
    mem_addr_i <= _T_2 @[MemData.scala 46:15]
    wire mem_addr_index : UInt<2> @[MemData.scala 48:28]
    wire mem_addr_index00 : UInt<1> @[MemData.scala 49:32]
    wire mem_addr_index01 : UInt<1> @[MemData.scala 50:32]
    wire mem_addr_index10 : UInt<1> @[MemData.scala 51:32]
    wire mem_addr_index11 : UInt<1> @[MemData.scala 52:32]
    node _T_3 = bits(mem_addr_i, 1, 0) @[MemData.scala 54:31]
    mem_addr_index <= _T_3 @[MemData.scala 54:19]
    node _T_4 = eq(mem_addr_index, UInt<1>("h00")) @[MemData.scala 55:40]
    mem_addr_index00 <= _T_4 @[MemData.scala 55:22]
    node _T_5 = eq(mem_addr_index, UInt<1>("h01")) @[MemData.scala 56:40]
    mem_addr_index01 <= _T_5 @[MemData.scala 56:22]
    node _T_6 = eq(mem_addr_index, UInt<2>("h02")) @[MemData.scala 57:40]
    mem_addr_index10 <= _T_6 @[MemData.scala 57:22]
    node _T_7 = eq(mem_addr_index, UInt<2>("h03")) @[MemData.scala 58:40]
    mem_addr_index11 <= _T_7 @[MemData.scala 58:22]
    wire _T_8 : UInt<4>
    _T_8 <= UInt<4>("h00")
    io.mem_be_o <= _T_8 @[MemData.scala 60:17]
    node _T_9 = and(io.ex_i.mem_op_sh_o, mem_addr_index10) @[MemData.scala 63:50]
    node _T_10 = or(mem_addr_index11, _T_9) @[MemData.scala 63:27]
    node _T_11 = or(_T_10, io.ex_i.mem_op_sw_o) @[MemData.scala 63:70]
    node _T_12 = or(mem_addr_index10, io.ex_i.mem_op_sw_o) @[MemData.scala 64:27]
    node _T_13 = and(io.ex_i.mem_op_sh_o, mem_addr_index00) @[MemData.scala 65:50]
    node _T_14 = or(mem_addr_index01, _T_13) @[MemData.scala 65:27]
    node _T_15 = or(_T_14, io.ex_i.mem_op_sw_o) @[MemData.scala 65:70]
    node _T_16 = or(mem_addr_index00, io.ex_i.mem_op_sw_o) @[MemData.scala 66:27]
    node _T_17 = cat(_T_15, _T_16) @[Cat.scala 30:58]
    node _T_18 = cat(_T_11, _T_12) @[Cat.scala 30:58]
    node _T_19 = cat(_T_18, _T_17) @[Cat.scala 30:58]
    io.mem_be_o <= _T_19 @[MemData.scala 62:17]
    wire sb_res : UInt<32>
    sb_res <= UInt<32>("h00")
    node _T_20 = bits(io.ex_i.mem_rs2_data_o, 7, 0) @[MemData.scala 72:62]
    node _T_21 = cat(UInt<24>("h00"), _T_20) @[Cat.scala 30:58]
    node _T_22 = bits(io.ex_i.mem_rs2_data_o, 7, 0) @[MemData.scala 73:62]
    node _T_23 = cat(UInt<16>("h00"), _T_22) @[Cat.scala 30:58]
    node _T_24 = cat(_T_23, UInt<8>("h00")) @[Cat.scala 30:58]
    node _T_25 = bits(io.ex_i.mem_rs2_data_o, 7, 0) @[MemData.scala 74:61]
    node _T_26 = cat(UInt<8>("h00"), _T_25) @[Cat.scala 30:58]
    node _T_27 = cat(_T_26, UInt<16>("h00")) @[Cat.scala 30:58]
    node _T_28 = bits(io.ex_i.mem_rs2_data_o, 7, 0) @[MemData.scala 75:51]
    node _T_29 = cat(_T_28, UInt<24>("h00")) @[Cat.scala 30:58]
    node _T_30 = eq(mem_addr_index11, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_31 = mux(_T_30, _T_29, UInt<32>("h00")) @[Mux.scala 68:16]
    node _T_32 = eq(mem_addr_index10, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_33 = mux(_T_32, _T_27, _T_31) @[Mux.scala 68:16]
    node _T_34 = eq(mem_addr_index01, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_35 = mux(_T_34, _T_24, _T_33) @[Mux.scala 68:16]
    node _T_36 = eq(mem_addr_index00, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_37 = mux(_T_36, _T_21, _T_35) @[Mux.scala 68:16]
    sb_res <= _T_37 @[MemData.scala 71:12]
    node _T_38 = bits(io.ex_i.mem_rs2_data_o, 15, 0) @[MemData.scala 79:63]
    node _T_39 = cat(UInt<16>("h00"), _T_38) @[Cat.scala 30:58]
    node _T_40 = bits(io.ex_i.mem_rs2_data_o, 15, 0) @[MemData.scala 80:52]
    node _T_41 = cat(_T_40, UInt<16>("h00")) @[Cat.scala 30:58]
    node _T_42 = eq(mem_addr_index10, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_43 = mux(_T_42, _T_41, UInt<32>("h00")) @[Mux.scala 68:16]
    node _T_44 = eq(mem_addr_index00, UInt<1>("h01")) @[Mux.scala 68:19]
    node sh_res = mux(_T_44, _T_39, _T_43) @[Mux.scala 68:16]
    node _T_45 = bits(io.mem_rdata_i, 7, 7) @[MemData.scala 86:52]
    node _T_46 = bits(_T_45, 0, 0) @[Bitwise.scala 72:15]
    node _T_47 = mux(_T_46, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
    node _T_48 = bits(io.mem_rdata_i, 7, 0) @[MemData.scala 86:72]
    node _T_49 = cat(_T_47, _T_48) @[Cat.scala 30:58]
    node _T_50 = bits(io.mem_rdata_i, 15, 15) @[MemData.scala 87:52]
    node _T_51 = bits(_T_50, 0, 0) @[Bitwise.scala 72:15]
    node _T_52 = mux(_T_51, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
    node _T_53 = bits(io.mem_rdata_i, 15, 8) @[MemData.scala 87:73]
    node _T_54 = cat(_T_52, _T_53) @[Cat.scala 30:58]
    node _T_55 = bits(io.mem_rdata_i, 23, 23) @[MemData.scala 88:52]
    node _T_56 = bits(_T_55, 0, 0) @[Bitwise.scala 72:15]
    node _T_57 = mux(_T_56, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
    node _T_58 = bits(io.mem_rdata_i, 23, 16) @[MemData.scala 88:73]
    node _T_59 = cat(_T_57, _T_58) @[Cat.scala 30:58]
    node _T_60 = bits(io.mem_rdata_i, 31, 31) @[MemData.scala 89:52]
    node _T_61 = bits(_T_60, 0, 0) @[Bitwise.scala 72:15]
    node _T_62 = mux(_T_61, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
    node _T_63 = bits(io.mem_rdata_i, 31, 24) @[MemData.scala 89:73]
    node _T_64 = cat(_T_62, _T_63) @[Cat.scala 30:58]
    node _T_65 = eq(mem_addr_index11, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_66 = mux(_T_65, _T_64, UInt<32>("h00")) @[Mux.scala 68:16]
    node _T_67 = eq(mem_addr_index10, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_68 = mux(_T_67, _T_59, _T_66) @[Mux.scala 68:16]
    node _T_69 = eq(mem_addr_index01, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_70 = mux(_T_69, _T_54, _T_68) @[Mux.scala 68:16]
    node _T_71 = eq(mem_addr_index00, UInt<1>("h01")) @[Mux.scala 68:19]
    node lb_res = mux(_T_71, _T_49, _T_70) @[Mux.scala 68:16]
    node _T_72 = bits(io.mem_rdata_i, 15, 15) @[MemData.scala 93:52]
    node _T_73 = bits(_T_72, 0, 0) @[Bitwise.scala 72:15]
    node _T_74 = mux(_T_73, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
    node _T_75 = bits(io.mem_rdata_i, 15, 0) @[MemData.scala 93:73]
    node _T_76 = cat(_T_74, _T_75) @[Cat.scala 30:58]
    node _T_77 = bits(io.mem_rdata_i, 31, 31) @[MemData.scala 94:52]
    node _T_78 = bits(_T_77, 0, 0) @[Bitwise.scala 72:15]
    node _T_79 = mux(_T_78, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
    node _T_80 = bits(io.mem_rdata_i, 31, 16) @[MemData.scala 94:73]
    node _T_81 = cat(_T_79, _T_80) @[Cat.scala 30:58]
    node _T_82 = eq(mem_addr_index10, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_83 = mux(_T_82, _T_81, UInt<32>("h00")) @[Mux.scala 68:16]
    node _T_84 = eq(mem_addr_index00, UInt<1>("h01")) @[Mux.scala 68:19]
    node lh_res = mux(_T_84, _T_76, _T_83) @[Mux.scala 68:16]
    node _T_85 = eq(io.ex_i.mem_op_lw_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_86 = mux(_T_85, sb_res, UInt<32>("h00")) @[Mux.scala 68:16]
    node _T_87 = eq(io.ex_i.mem_op_lhu_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_88 = mux(_T_87, sb_res, _T_86) @[Mux.scala 68:16]
    node _T_89 = eq(io.ex_i.mem_op_lh_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_90 = mux(_T_89, sb_res, _T_88) @[Mux.scala 68:16]
    node _T_91 = eq(io.ex_i.mem_op_lbu_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_92 = mux(_T_91, sb_res, _T_90) @[Mux.scala 68:16]
    node _T_93 = eq(io.ex_i.mem_op_lb_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_94 = mux(_T_93, lb_res, _T_92) @[Mux.scala 68:16]
    node _T_95 = eq(io.ex_i.mem_op_sw_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_96 = mux(_T_95, io.ex_i.mem_rs2_data_o, _T_94) @[Mux.scala 68:16]
    node _T_97 = eq(io.ex_i.mem_op_sh_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_98 = mux(_T_97, sh_res, _T_96) @[Mux.scala 68:16]
    node _T_99 = eq(io.ex_i.mem_op_sb_o, UInt<1>("h01")) @[Mux.scala 68:19]
    node mem_wdata = mux(_T_99, sb_res, _T_98) @[Mux.scala 68:16]
    io.mem_o.mem_wdata <= mem_wdata @[MemData.scala 109:25]
    node _T_100 = or(io.ex_i.mem_op_lb_o, io.ex_i.mem_op_lh_o) @[MemData.scala 110:38]
    node _T_101 = or(_T_100, io.ex_i.mem_op_lw_o) @[MemData.scala 110:60]
    node _T_102 = or(_T_101, io.ex_i.mem_op_lbu_o) @[MemData.scala 110:82]
    node op_load = or(_T_102, io.ex_i.mem_op_lhu_o) @[MemData.scala 110:105]
    node _T_103 = or(io.ex_i.mem_op_sb_o, io.ex_i.mem_op_sh_o) @[MemData.scala 111:39]
    node op_store = or(_T_103, io.ex_i.mem_op_sw_o) @[MemData.scala 111:61]
    reg state_q : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[MemData.scala 114:34]
    reg state_d : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[MemData.scala 114:34]
    wire mem_stall_d : UInt<1>
    mem_stall_d <= UInt<1>("h00")
    wire mem_reg_we_d : UInt<1>
    mem_reg_we_d <= UInt<1>("h00")
    wire mem_mem_we_d : UInt<1>
    mem_mem_we_d <= UInt<1>("h00")
    wire req_mem_d : UInt<1>
    req_mem_d <= UInt<1>("h00")
    node _T_104 = eq(UInt<2>("h00"), state_q) @[Conditional.scala 37:30]
    when _T_104 : @[Conditional.scala 40:58]
      when io.ex_i.req_mem_o : @[MemData.scala 123:38]
        mem_stall_d <= UInt<1>("h01") @[MemData.scala 124:29]
        req_mem_d <= UInt<1>("h01") @[MemData.scala 125:27]
        when io.mem_gnt_i : @[MemData.scala 126:37]
          when op_load : @[MemData.scala 127:36]
            state_d <= UInt<2>("h01") @[MemData.scala 128:33]
            skip @[MemData.scala 127:36]
          else : @[MemData.scala 129:44]
            when op_store : @[MemData.scala 129:44]
              state_d <= UInt<2>("h02") @[MemData.scala 130:33]
              mem_mem_we_d <= UInt<1>("h01") @[MemData.scala 131:38]
              skip @[MemData.scala 129:44]
          skip @[MemData.scala 126:37]
        skip @[MemData.scala 123:38]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_105 = eq(UInt<2>("h01"), state_q) @[Conditional.scala 37:30]
      when _T_105 : @[Conditional.scala 39:67]
        mem_stall_d <= UInt<1>("h01") @[MemData.scala 137:25]
        when io.mem_rvalid_i : @[MemData.scala 138:36]
          state_d <= UInt<2>("h00") @[MemData.scala 139:25]
          mem_reg_we_d <= UInt<1>("h01") @[MemData.scala 140:30]
          mem_stall_d <= UInt<1>("h00") @[MemData.scala 141:29]
          skip @[MemData.scala 138:36]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_106 = eq(UInt<2>("h02"), state_q) @[Conditional.scala 37:30]
        when _T_106 : @[Conditional.scala 39:67]
          mem_stall_d <= UInt<1>("h01") @[MemData.scala 145:25]
          when io.mem_rvalid_i : @[MemData.scala 146:36]
            state_d <= UInt<2>("h00") @[MemData.scala 147:25]
            mem_stall_d <= UInt<1>("h00") @[MemData.scala 148:29]
            skip @[MemData.scala 146:36]
          skip @[Conditional.scala 39:67]
    state_q <= state_d @[MemData.scala 153:13]
    io.mem_stall_o <= mem_stall_d @[MemData.scala 154:20]
    io.mem_o.mem_reg_we <= mem_reg_we_d @[MemData.scala 155:25]
    io.mem_mem_we_o <= mem_mem_we_d @[MemData.scala 156:21]
    io.mem_req_o <= req_mem_d @[MemData.scala 157:18]
    io.mem_addr_o <= mem_addr_i @[MemData.scala 158:18]
    node _T_107 = or(io.ex_i.mem_op_sw_o, io.ex_i.mem_op_lw_o) @[MemData.scala 159:56]
    node _T_108 = bits(mem_addr_i, 0, 0) @[MemData.scala 159:87]
    node _T_109 = bits(mem_addr_i, 1, 1) @[MemData.scala 159:101]
    node _T_110 = or(_T_108, _T_109) @[MemData.scala 159:90]
    node _T_111 = or(io.ex_i.mem_op_sh_o, io.ex_i.mem_op_lh_o) @[MemData.scala 160:56]
    node _T_112 = or(_T_111, io.ex_i.mem_op_lhu_o) @[MemData.scala 160:76]
    node _T_113 = bits(mem_addr_i, 0, 0) @[MemData.scala 160:108]
    node _T_114 = mux(_T_112, _T_113, UInt<1>("h00")) @[MemData.scala 160:36]
    node _T_115 = mux(_T_107, _T_110, _T_114) @[MemData.scala 159:36]
    io.mem_access_misaligned_o <= _T_115 @[MemData.scala 159:31]
    
  module MEM_WB : 
    input clock : Clock
    input reset : Reset
    output io : {flip stall_i : UInt<4>, flip flush_i : UInt<1>, flip mem_i : {inst_valid : UInt<1>, inst : UInt<32>, pc : UInt<32>, rd_waddr : UInt<5>, rd_we : UInt<1>, req_alu : UInt<1>, alu_res : UInt<32>, bjp_op_jump : UInt<1>, bjp_res : UInt<32>, muldiv_reg_we : UInt<1>, muldiv_reg_wdata : UInt<32>, mem_reg_we : UInt<1>, mem_wdata : UInt<32>, csr_reg_we : UInt<1>, csr_reg_wdata : UInt<32>}, wb_o : {inst_valid : UInt<1>, inst : UInt<32>, pc : UInt<32>, rd_waddr : UInt<5>, rd_we : UInt<1>, req_alu : UInt<1>, alu_res : UInt<32>, bjp_op_jump : UInt<1>, bjp_res : UInt<32>, muldiv_reg_we : UInt<1>, muldiv_reg_wdata : UInt<32>, mem_reg_we : UInt<1>, mem_wdata : UInt<32>, csr_reg_we : UInt<1>, csr_reg_wdata : UInt<32>}}
    
    node _T = bits(io.stall_i, 3, 3) @[MEM_WB.scala 18:22]
    node _T_1 = not(_T) @[MEM_WB.scala 18:11]
    node _T_2 = bits(_T_1, 0, 0) @[MEM_WB.scala 18:27]
    node en = or(_T_2, io.flush_i) @[MEM_WB.scala 18:33]
    wire i_rd_waddr : UInt<5> @[MEM_WB.scala 20:24]
    node _T_3 = mux(io.flush_i, UInt<1>("h00"), io.mem_i.rd_waddr) @[MEM_WB.scala 21:20]
    i_rd_waddr <= _T_3 @[MEM_WB.scala 21:15]
    reg _T_4 : UInt, clock with : (reset => (reset, en)) @[MEM_WB.scala 22:30]
    _T_4 <= i_rd_waddr @[MEM_WB.scala 22:30]
    io.wb_o.rd_waddr <= _T_4 @[MEM_WB.scala 22:21]
    wire i_rd_we : UInt<1> @[MEM_WB.scala 24:21]
    node _T_5 = mux(io.flush_i, UInt<1>("h00"), io.mem_i.rd_we) @[MEM_WB.scala 25:17]
    i_rd_we <= _T_5 @[MEM_WB.scala 25:12]
    reg _T_6 : UInt<1>, clock with : (reset => (reset, en)) @[MEM_WB.scala 26:27]
    _T_6 <= i_rd_we @[MEM_WB.scala 26:27]
    io.wb_o.rd_we <= _T_6 @[MEM_WB.scala 26:18]
    wire i_inst : UInt<32> @[MEM_WB.scala 28:20]
    node _T_7 = mux(io.flush_i, UInt<1>("h00"), io.mem_i.inst) @[MEM_WB.scala 29:16]
    i_inst <= _T_7 @[MEM_WB.scala 29:11]
    reg _T_8 : UInt, clock with : (reset => (reset, en)) @[MEM_WB.scala 30:26]
    _T_8 <= i_inst @[MEM_WB.scala 30:26]
    io.wb_o.inst <= _T_8 @[MEM_WB.scala 30:17]
    wire inst_valid : UInt<1> @[MEM_WB.scala 32:24]
    node _T_9 = mux(io.flush_i, UInt<1>("h00"), io.mem_i.inst_valid) @[MEM_WB.scala 33:20]
    inst_valid <= _T_9 @[MEM_WB.scala 33:15]
    reg _T_10 : UInt<1>, clock with : (reset => (reset, en)) @[MEM_WB.scala 34:32]
    _T_10 <= inst_valid @[MEM_WB.scala 34:32]
    io.wb_o.inst_valid <= _T_10 @[MEM_WB.scala 34:23]
    wire pc : UInt<1> @[MEM_WB.scala 36:16]
    node _T_11 = mux(io.flush_i, UInt<1>("h00"), io.mem_i.pc) @[MEM_WB.scala 37:12]
    pc <= _T_11 @[MEM_WB.scala 37:7]
    reg _T_12 : UInt<1>, clock with : (reset => (reset, en)) @[MEM_WB.scala 38:24]
    _T_12 <= pc @[MEM_WB.scala 38:24]
    io.wb_o.pc <= _T_12 @[MEM_WB.scala 38:15]
    wire req_alu_i : UInt<1> @[MEM_WB.scala 40:21]
    node _T_13 = mux(io.flush_i, UInt<1>("h00"), io.mem_i.req_alu) @[MEM_WB.scala 41:17]
    req_alu_i <= _T_13 @[MEM_WB.scala 41:12]
    reg _T_14 : UInt<1>, clock with : (reset => (reset, en)) @[MEM_WB.scala 42:27]
    _T_14 <= req_alu_i @[MEM_WB.scala 42:27]
    io.wb_o.req_alu <= _T_14 @[MEM_WB.scala 42:18]
    wire alu_res : UInt<32> @[MEM_WB.scala 44:19]
    node _T_15 = mux(io.flush_i, UInt<1>("h00"), io.mem_i.alu_res) @[MEM_WB.scala 45:15]
    alu_res <= _T_15 @[MEM_WB.scala 45:10]
    reg _T_16 : UInt, clock with : (reset => (reset, en)) @[MEM_WB.scala 46:27]
    _T_16 <= alu_res @[MEM_WB.scala 46:27]
    io.wb_o.alu_res <= _T_16 @[MEM_WB.scala 46:18]
    wire bjp_op_jump : UInt<1> @[MEM_WB.scala 48:23]
    node _T_17 = mux(io.flush_i, UInt<1>("h00"), io.mem_i.bjp_op_jump) @[MEM_WB.scala 49:19]
    bjp_op_jump <= _T_17 @[MEM_WB.scala 49:14]
    reg _T_18 : UInt<1>, clock with : (reset => (reset, en)) @[MEM_WB.scala 50:31]
    _T_18 <= bjp_op_jump @[MEM_WB.scala 50:31]
    io.wb_o.bjp_op_jump <= _T_18 @[MEM_WB.scala 50:22]
    wire bjp_res : UInt<32> @[MEM_WB.scala 52:19]
    node _T_19 = mux(io.flush_i, UInt<1>("h00"), io.mem_i.bjp_res) @[MEM_WB.scala 53:15]
    bjp_res <= _T_19 @[MEM_WB.scala 53:10]
    reg _T_20 : UInt, clock with : (reset => (reset, en)) @[MEM_WB.scala 54:27]
    _T_20 <= bjp_res @[MEM_WB.scala 54:27]
    io.wb_o.bjp_res <= _T_20 @[MEM_WB.scala 54:18]
    wire muldiv_reg_we : UInt<1> @[MEM_WB.scala 56:25]
    node _T_21 = mux(io.flush_i, UInt<1>("h00"), io.mem_i.muldiv_reg_we) @[MEM_WB.scala 57:21]
    muldiv_reg_we <= _T_21 @[MEM_WB.scala 57:16]
    reg _T_22 : UInt<1>, clock with : (reset => (reset, en)) @[MEM_WB.scala 58:33]
    _T_22 <= muldiv_reg_we @[MEM_WB.scala 58:33]
    io.wb_o.muldiv_reg_we <= _T_22 @[MEM_WB.scala 58:24]
    wire muldiv_reg_wdata : UInt<32> @[MEM_WB.scala 60:28]
    node _T_23 = mux(io.flush_i, UInt<1>("h00"), io.mem_i.muldiv_reg_wdata) @[MEM_WB.scala 61:24]
    muldiv_reg_wdata <= _T_23 @[MEM_WB.scala 61:19]
    reg _T_24 : UInt, clock with : (reset => (reset, en)) @[MEM_WB.scala 62:36]
    _T_24 <= muldiv_reg_wdata @[MEM_WB.scala 62:36]
    io.wb_o.muldiv_reg_wdata <= _T_24 @[MEM_WB.scala 62:27]
    wire mem_reg_we : UInt<1> @[MEM_WB.scala 64:22]
    node _T_25 = mux(io.flush_i, UInt<1>("h00"), io.mem_i.mem_reg_we) @[MEM_WB.scala 65:18]
    mem_reg_we <= _T_25 @[MEM_WB.scala 65:13]
    reg _T_26 : UInt<1>, clock with : (reset => (reset, en)) @[MEM_WB.scala 66:30]
    _T_26 <= mem_reg_we @[MEM_WB.scala 66:30]
    io.wb_o.mem_reg_we <= _T_26 @[MEM_WB.scala 66:21]
    wire mem_wdata : UInt<32> @[MEM_WB.scala 68:21]
    node _T_27 = mux(io.flush_i, UInt<1>("h00"), io.mem_i.mem_wdata) @[MEM_WB.scala 69:17]
    mem_wdata <= _T_27 @[MEM_WB.scala 69:12]
    reg _T_28 : UInt, clock with : (reset => (reset, en)) @[MEM_WB.scala 70:29]
    _T_28 <= mem_wdata @[MEM_WB.scala 70:29]
    io.wb_o.mem_wdata <= _T_28 @[MEM_WB.scala 70:20]
    wire csr_reg_we : UInt<1> @[MEM_WB.scala 72:22]
    node _T_29 = mux(io.flush_i, UInt<1>("h00"), io.mem_i.csr_reg_we) @[MEM_WB.scala 73:18]
    csr_reg_we <= _T_29 @[MEM_WB.scala 73:13]
    reg _T_30 : UInt<1>, clock with : (reset => (reset, en)) @[MEM_WB.scala 74:30]
    _T_30 <= csr_reg_we @[MEM_WB.scala 74:30]
    io.wb_o.csr_reg_we <= _T_30 @[MEM_WB.scala 74:21]
    wire csr_reg_wdata : UInt<32> @[MEM_WB.scala 76:25]
    node _T_31 = mux(io.flush_i, UInt<1>("h00"), io.mem_i.csr_reg_wdata) @[MEM_WB.scala 77:21]
    csr_reg_wdata <= _T_31 @[MEM_WB.scala 77:16]
    reg _T_32 : UInt, clock with : (reset => (reset, en)) @[MEM_WB.scala 78:33]
    _T_32 <= csr_reg_wdata @[MEM_WB.scala 78:33]
    io.wb_o.csr_reg_wdata <= _T_32 @[MEM_WB.scala 78:24]
    
  module WB : 
    input clock : Clock
    input reset : Reset
    output io : {flip wb_i : {inst_valid : UInt<1>, inst : UInt<32>, pc : UInt<32>, rd_waddr : UInt<5>, rd_we : UInt<1>, req_alu : UInt<1>, alu_res : UInt<32>, bjp_op_jump : UInt<1>, bjp_res : UInt<32>, muldiv_reg_we : UInt<1>, muldiv_reg_wdata : UInt<32>, mem_reg_we : UInt<1>, mem_wdata : UInt<32>, csr_reg_we : UInt<1>, csr_reg_wdata : UInt<32>}, reg_we_o : UInt<1>, reg_waddr_o : UInt<5>, reg_wdata_o : UInt<32>}
    
    node _T = add(io.wb_i.bjp_res, UInt<3>("h04")) @[wb.scala 25:45]
    node _T_1 = tail(_T, 1) @[wb.scala 25:45]
    node _T_2 = eq(io.wb_i.req_alu, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_3 = mux(_T_2, io.wb_i.alu_res, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_4 = eq(io.wb_i.bjp_op_jump, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_5 = mux(_T_4, _T_1, _T_3) @[Mux.scala 68:16]
    node _T_6 = eq(io.wb_i.csr_reg_we, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_7 = mux(_T_6, io.wb_i.csr_reg_wdata, _T_5) @[Mux.scala 68:16]
    node _T_8 = eq(io.wb_i.mem_reg_we, UInt<1>("h01")) @[Mux.scala 68:19]
    node _T_9 = mux(_T_8, io.wb_i.mem_wdata, _T_7) @[Mux.scala 68:16]
    node _T_10 = eq(io.wb_i.muldiv_reg_we, UInt<1>("h01")) @[Mux.scala 68:19]
    node reg_wdata = mux(_T_10, io.wb_i.muldiv_reg_wdata, _T_9) @[Mux.scala 68:16]
    io.reg_wdata_o <= reg_wdata @[wb.scala 30:20]
    io.reg_we_o <= io.wb_i.rd_we @[wb.scala 31:16]
    io.reg_waddr_o <= io.wb_i.rd_waddr @[wb.scala 32:19]
    
  module Registers : 
    input clock : Clock
    input reset : Reset
    output io : {flip wen : UInt<1>, flip waddr : UInt<5>, flip wdata : UInt<32>, flip rdaddr1_i : UInt<5>, flip rdaddr2_i : UInt<5>, rdata1_o : UInt<32>, rdata2_o : UInt<32>}
    
    wire _T : UInt<32>[32] @[Registers.scala 21:31]
    _T[0] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[1] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[2] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[3] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[4] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[5] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[6] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[7] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[8] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[9] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[10] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[11] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[12] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[13] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[14] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[15] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[16] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[17] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[18] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[19] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[20] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[21] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[22] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[23] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[24] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[25] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[26] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[27] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[28] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[29] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[30] <= UInt<32>("h00") @[Registers.scala 21:31]
    _T[31] <= UInt<32>("h00") @[Registers.scala 21:31]
    reg regs : UInt<32>[32], clock with : (reset => (reset, _T)) @[Registers.scala 21:23]
    node _T_1 = neq(io.waddr, UInt<1>("h00")) @[Registers.scala 23:29]
    node _T_2 = and(io.wen, _T_1) @[Registers.scala 23:17]
    when _T_2 : @[Registers.scala 23:38]
      regs[io.waddr] <= io.wdata @[Registers.scala 24:24]
      skip @[Registers.scala 23:38]
    node _T_3 = eq(io.rdaddr1_i, UInt<1>("h00")) @[Registers.scala 28:24]
    when _T_3 : @[Registers.scala 28:33]
      io.rdata1_o <= UInt<1>("h00") @[Registers.scala 29:21]
      skip @[Registers.scala 28:33]
    else : @[Registers.scala 30:45]
      node _T_4 = eq(io.rdaddr1_i, io.waddr) @[Registers.scala 30:30]
      when _T_4 : @[Registers.scala 30:45]
        io.rdata1_o <= io.wdata @[Registers.scala 31:21]
        skip @[Registers.scala 30:45]
      else : @[Registers.scala 32:18]
        io.rdata1_o <= regs[io.rdaddr1_i] @[Registers.scala 33:21]
        skip @[Registers.scala 32:18]
    node _T_5 = eq(io.rdaddr2_i, UInt<1>("h00")) @[Registers.scala 36:24]
    when _T_5 : @[Registers.scala 36:33]
      io.rdata2_o <= UInt<1>("h00") @[Registers.scala 37:21]
      skip @[Registers.scala 36:33]
    else : @[Registers.scala 38:45]
      node _T_6 = eq(io.rdaddr2_i, io.waddr) @[Registers.scala 38:30]
      when _T_6 : @[Registers.scala 38:45]
        io.rdata2_o <= io.wdata @[Registers.scala 39:21]
        skip @[Registers.scala 38:45]
      else : @[Registers.scala 40:18]
        io.rdata2_o <= regs[io.rdaddr2_i] @[Registers.scala 41:21]
        skip @[Registers.scala 40:18]
    
  module PipeCtrl : 
    input clock : Clock
    input reset : Reset
    output io : {flip stall_from_if_i : UInt<1>, flip stall_from_id_i : UInt<1>, flip stall_from_ex_i : UInt<1>, flip stall_from_mem_i : UInt<1>, flip jump_assert_i : UInt<1>, flip jump_addr_i : UInt<32>, flip int_assert_i : UInt<1>, flip int_addr_i : UInt<32>, flush_IF_ID : UInt<1>, flush_all : UInt<1>, flush_addr_o : UInt<32>, stall_o : UInt<5>}
    
    io.flush_all <= io.int_assert_i @[pipe_crtl.scala 25:17]
    node _T = or(io.jump_assert_i, io.int_assert_i) @[pipe_crtl.scala 26:39]
    io.flush_IF_ID <= _T @[pipe_crtl.scala 26:20]
    node _T_1 = mux(io.jump_assert_i, io.jump_addr_i, io.int_addr_i) @[pipe_crtl.scala 27:27]
    io.flush_addr_o <= _T_1 @[pipe_crtl.scala 27:21]
    wire stall : UInt<4> @[pipe_crtl.scala 29:21]
    node _T_2 = mux(io.stall_from_if_i, UInt<5>("h010"), UInt<1>("h00")) @[pipe_crtl.scala 33:20]
    node _T_3 = mux(io.stall_from_id_i, UInt<5>("h018"), _T_2) @[pipe_crtl.scala 32:20]
    node _T_4 = mux(io.stall_from_ex_i, UInt<5>("h01c"), _T_3) @[pipe_crtl.scala 31:20]
    node _T_5 = mux(io.stall_from_mem_i, UInt<5>("h01e"), _T_4) @[pipe_crtl.scala 30:20]
    stall <= _T_5 @[pipe_crtl.scala 30:15]
    io.stall_o <= stall @[pipe_crtl.scala 34:16]
    
  module CSR : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<32>, flip we_i : UInt<1>, rdata_o : UInt<32>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<32>, flip we_i : UInt<1>, rdata_o : UInt<32>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<32>, flip we_i : UInt<1>, rdata_o : UInt<32>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<32>, flip we_i : UInt<1>, rdata_o : UInt<32>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<32>, flip we_i : UInt<1>, rdata_o : UInt<32>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_5 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<32>, flip we_i : UInt<1>, rdata_o : UInt<32>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_6 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<32>, flip we_i : UInt<1>, rdata_o : UInt<32>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_7 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<32>, flip we_i : UInt<1>, rdata_o : UInt<32>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_8 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<32>, flip we_i : UInt<1>, rdata_o : UInt<32>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_9 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<32>, flip we_i : UInt<1>, rdata_o : UInt<32>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_10 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<32>, flip we_i : UInt<1>, rdata_o : UInt<32>}
    
    reg rdata_q : UInt<31>, clock with : (reset => (reset, UInt<31>("h040000000"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_11 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<32>, flip we_i : UInt<1>, rdata_o : UInt<32>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_12 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<32>, flip we_i : UInt<1>, rdata_o : UInt<32>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_13 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<1>, flip we_i : UInt<1>, rdata_o : UInt<1>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_14 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<1>, flip we_i : UInt<1>, rdata_o : UInt<1>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_15 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<1>, flip we_i : UInt<1>, rdata_o : UInt<1>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_16 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<32>, flip we_i : UInt<1>, rdata_o : UInt<32>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_17 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<32>, flip we_i : UInt<1>, rdata_o : UInt<32>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSR_18 : 
    input clock : Clock
    input reset : Reset
    output io : {flip wdata_i : UInt<32>, flip we_i : UInt<1>, rdata_o : UInt<32>}
    
    reg rdata_q : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 17:24]
    when io.we_i : @[csr.scala 18:17]
      rdata_q <= io.wdata_i @[csr.scala 19:13]
      skip @[csr.scala 18:17]
    io.rdata_o <= rdata_q @[csr.scala 21:14]
    
  module CSRReg : 
    input clock : Clock
    input reset : Reset
    output io : {flip clk : Clock, flip rst_n : UInt<1>, flip exu_we_i : UInt<1>, flip exu_waddr_i : UInt<32>, flip exu_wdata_i : UInt<32>, flip exu_raddr_i : UInt<32>, exu_rdata_o : UInt<32>, flip pc_if_i : UInt<32>, trigger_match_o : UInt<1>, flip excep_we_i : UInt<1>, flip excep_waddr_i : UInt<32>, flip excep_wdata_i : UInt<32>, mtvec_o : UInt<32>, mepc_o : UInt<32>, mstatus_o : UInt<32>, mie_o : UInt<32>, dpc_o : UInt<32>, dcsr_o : UInt<32>}
    
    reg sstatus_d : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[csr_reg.scala 47:26]
    wire sstatus_q : UInt<32>
    sstatus_q <= UInt<32>("h00")
    reg sstatus_we : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr_reg.scala 49:27]
    reg mtvec_d : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[csr_reg.scala 51:24]
    wire mtvec : UInt<32>
    mtvec <= UInt<32>("h00")
    reg mtvec_we : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr_reg.scala 53:25]
    reg mcause_d : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[csr_reg.scala 55:25]
    wire mcause_q : UInt<32>
    mcause_q <= UInt<32>("h00")
    reg mcause_we : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr_reg.scala 57:26]
    reg mepc_d : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[csr_reg.scala 59:23]
    wire mepc : UInt<32>
    mepc <= UInt<32>("h00")
    reg mepc_we : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr_reg.scala 61:24]
    reg mie_d : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[csr_reg.scala 63:22]
    wire mie : UInt<32>
    mie <= UInt<32>("h00")
    reg mie_we : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr_reg.scala 65:23]
    reg mstatus_d : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[csr_reg.scala 67:26]
    wire mstatus : UInt<32>
    mstatus <= UInt<32>("h00")
    reg mstatus_we : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr_reg.scala 69:27]
    reg mscratch_d : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[csr_reg.scala 71:27]
    wire mscratch_q : UInt<32>
    mscratch_q <= UInt<32>("h00")
    reg mscratch_we : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr_reg.scala 73:28]
    reg dscratch0_d : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[csr_reg.scala 75:28]
    wire dscratch0_q : UInt<32>
    dscratch0_q <= UInt<32>("h00")
    reg dscratch0_we : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr_reg.scala 77:29]
    reg dscratch1_d : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[csr_reg.scala 79:28]
    wire dscratch1_q : UInt<32>
    dscratch1_q <= UInt<32>("h00")
    reg dscratch1_we : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr_reg.scala 81:29]
    reg mhartid_d : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[csr_reg.scala 83:26]
    wire mhartid_q : UInt<32>
    mhartid_q <= UInt<32>("h00")
    reg mhartid_we : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr_reg.scala 85:27]
    reg dpc_d : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[csr_reg.scala 87:22]
    wire dpc : UInt<32>
    dpc <= UInt<32>("h00")
    reg dpc_we : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr_reg.scala 89:23]
    reg dcsr_d : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[csr_reg.scala 91:23]
    wire dcsr : UInt<32>
    dcsr <= UInt<32>("h00")
    reg dcsr_we : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr_reg.scala 93:24]
    reg tselect_d : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[csr_reg.scala 95:26]
    wire tselect_q : UInt<32>
    tselect_q <= UInt<32>("h00")
    reg tselect_we : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr_reg.scala 97:27]
    wire tmatch_control_d : UInt<1>
    tmatch_control_d <= UInt<1>("h00")
    wire _T : UInt<1>[3] @[csr_reg.scala 100:41]
    _T[0] <= UInt<1>("h00") @[csr_reg.scala 100:41]
    _T[1] <= UInt<1>("h00") @[csr_reg.scala 100:41]
    _T[2] <= UInt<1>("h00") @[csr_reg.scala 100:41]
    reg tmatch_control_q : UInt<1>[3], clock with : (reset => (reset, _T)) @[csr_reg.scala 100:33]
    wire _T_1 : UInt<1>[3] @[csr_reg.scala 101:43]
    _T_1[0] <= UInt<1>("h00") @[csr_reg.scala 101:43]
    _T_1[1] <= UInt<1>("h00") @[csr_reg.scala 101:43]
    _T_1[2] <= UInt<1>("h00") @[csr_reg.scala 101:43]
    wire tmatch_control_we : UInt<1>[3]
    tmatch_control_we[0] <= _T_1[0]
    tmatch_control_we[1] <= _T_1[1]
    tmatch_control_we[2] <= _T_1[2]
    wire tmatch_value_d : UInt<32>
    tmatch_value_d <= UInt<32>("h00")
    wire _T_2 : UInt<32>[3] @[csr_reg.scala 104:39]
    _T_2[0] <= UInt<32>("h00") @[csr_reg.scala 104:39]
    _T_2[1] <= UInt<32>("h00") @[csr_reg.scala 104:39]
    _T_2[2] <= UInt<32>("h00") @[csr_reg.scala 104:39]
    reg tmatch_value_q : UInt<32>[3], clock with : (reset => (reset, _T_2)) @[csr_reg.scala 104:31]
    wire _T_3 : UInt<1>[3] @[csr_reg.scala 105:41]
    _T_3[0] <= UInt<1>("h00") @[csr_reg.scala 105:41]
    _T_3[1] <= UInt<1>("h00") @[csr_reg.scala 105:41]
    _T_3[2] <= UInt<1>("h00") @[csr_reg.scala 105:41]
    wire tmatch_value_we : UInt<1>[3]
    tmatch_value_we[0] <= _T_3[0]
    tmatch_value_we[1] <= _T_3[1]
    tmatch_value_we[2] <= _T_3[2]
    wire _T_4 : UInt<1>[3] @[csr_reg.scala 107:39]
    _T_4[0] <= UInt<1>("h00") @[csr_reg.scala 107:39]
    _T_4[1] <= UInt<1>("h00") @[csr_reg.scala 107:39]
    _T_4[2] <= UInt<1>("h00") @[csr_reg.scala 107:39]
    wire trigger_match : UInt<1>[3]
    trigger_match[0] <= _T_4[0]
    trigger_match[1] <= _T_4[1]
    trigger_match[2] <= _T_4[2]
    reg cycle : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[csr_reg.scala 109:22]
    node _T_5 = eq(io.rst_n, UInt<1>("h00")) @[csr_reg.scala 112:8]
    when _T_5 : @[csr_reg.scala 112:19]
      cycle <= UInt<1>("h00") @[csr_reg.scala 113:11]
      skip @[csr_reg.scala 112:19]
    else : @[csr_reg.scala 114:16]
      node _T_6 = add(cycle, UInt<1>("h01")) @[csr_reg.scala 115:20]
      node _T_7 = tail(_T_6, 1) @[csr_reg.scala 115:20]
      cycle <= _T_7 @[csr_reg.scala 115:11]
      skip @[csr_reg.scala 114:16]
    io.mtvec_o <= mtvec @[csr_reg.scala 118:14]
    io.mepc_o <= mepc @[csr_reg.scala 119:13]
    io.mstatus_o <= mstatus @[csr_reg.scala 120:16]
    io.mie_o <= mie @[csr_reg.scala 121:12]
    io.dpc_o <= dpc @[csr_reg.scala 122:12]
    io.dcsr_o <= dcsr @[csr_reg.scala 123:13]
    wire exu_rdata : UInt<32> @[csr_reg.scala 125:23]
    node we = or(io.exu_we_i, io.excep_we_i) @[csr_reg.scala 130:24]
    node waddr = mux(io.exu_we_i, io.exu_waddr_i, io.excep_waddr_i) @[csr_reg.scala 131:18]
    node wdata = mux(io.exu_we_i, io.exu_wdata_i, io.excep_wdata_i) @[csr_reg.scala 132:18]
    mtvec_d <= mtvec @[csr_reg.scala 135:11]
    mtvec_we <= UInt<1>("h00") @[csr_reg.scala 136:12]
    mcause_d <= mcause_q @[csr_reg.scala 137:12]
    mcause_we <= UInt<1>("h00") @[csr_reg.scala 138:13]
    mepc_d <= mepc @[csr_reg.scala 139:10]
    mepc_we <= UInt<1>("h00") @[csr_reg.scala 140:11]
    mie_d <= mie @[csr_reg.scala 141:9]
    mie_we <= UInt<1>("h00") @[csr_reg.scala 142:10]
    mstatus_d <= mstatus @[csr_reg.scala 143:13]
    mstatus_we <= UInt<1>("h00") @[csr_reg.scala 144:14]
    mscratch_d <= mscratch_q @[csr_reg.scala 145:14]
    mscratch_we <= UInt<1>("h00") @[csr_reg.scala 146:15]
    dscratch0_d <= dscratch0_q @[csr_reg.scala 147:15]
    dscratch0_we <= UInt<1>("h00") @[csr_reg.scala 148:16]
    dscratch1_d <= dscratch1_q @[csr_reg.scala 149:15]
    dscratch1_we <= UInt<1>("h00") @[csr_reg.scala 150:16]
    mhartid_d <= mhartid_q @[csr_reg.scala 151:13]
    mhartid_we <= UInt<1>("h00") @[csr_reg.scala 152:14]
    dpc_d <= dpc @[csr_reg.scala 153:9]
    dpc_we <= UInt<1>("h00") @[csr_reg.scala 154:10]
    dcsr_d <= dcsr @[csr_reg.scala 155:10]
    dcsr_we <= UInt<1>("h00") @[csr_reg.scala 156:11]
    sstatus_d <= sstatus_q @[csr_reg.scala 157:13]
    sstatus_we <= UInt<1>("h00") @[csr_reg.scala 158:14]
    when we : @[csr_reg.scala 160:12]
      node _T_8 = bits(waddr, 11, 0) @[csr_reg.scala 161:17]
      node _T_9 = eq(UInt<12>("h0305"), _T_8) @[Conditional.scala 37:30]
      when _T_9 : @[Conditional.scala 40:58]
        mtvec_d <= wdata @[csr_reg.scala 163:17]
        mtvec_we <= UInt<1>("h01") @[csr_reg.scala 164:18]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_10 = eq(UInt<12>("h0342"), _T_8) @[Conditional.scala 37:30]
        when _T_10 : @[Conditional.scala 39:67]
          mcause_d <= wdata @[csr_reg.scala 167:18]
          mcause_we <= UInt<1>("h01") @[csr_reg.scala 168:19]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_11 = eq(UInt<12>("h0341"), _T_8) @[Conditional.scala 37:30]
          when _T_11 : @[Conditional.scala 39:67]
            mepc_d <= wdata @[csr_reg.scala 171:16]
            mepc_we <= UInt<1>("h01") @[csr_reg.scala 172:17]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_12 = eq(UInt<12>("h0304"), _T_8) @[Conditional.scala 37:30]
            when _T_12 : @[Conditional.scala 39:67]
              mie_d <= wdata @[csr_reg.scala 175:15]
              mie_we <= UInt<1>("h01") @[csr_reg.scala 176:16]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_13 = eq(UInt<12>("h0300"), _T_8) @[Conditional.scala 37:30]
              when _T_13 : @[Conditional.scala 39:67]
                mstatus_d <= wdata @[csr_reg.scala 179:19]
                mstatus_we <= UInt<1>("h01") @[csr_reg.scala 180:20]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_14 = eq(UInt<12>("h0340"), _T_8) @[Conditional.scala 37:30]
                when _T_14 : @[Conditional.scala 39:67]
                  mscratch_d <= wdata @[csr_reg.scala 183:20]
                  mscratch_we <= UInt<1>("h01") @[csr_reg.scala 184:21]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_15 = eq(UInt<12>("h07b2"), _T_8) @[Conditional.scala 37:30]
                  when _T_15 : @[Conditional.scala 39:67]
                    dscratch0_d <= wdata @[csr_reg.scala 187:21]
                    dscratch0_we <= UInt<1>("h01") @[csr_reg.scala 188:22]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_16 = eq(UInt<12>("h07b3"), _T_8) @[Conditional.scala 37:30]
                    when _T_16 : @[Conditional.scala 39:67]
                      dscratch1_d <= wdata @[csr_reg.scala 191:21]
                      dscratch1_we <= UInt<1>("h01") @[csr_reg.scala 192:22]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_17 = eq(UInt<12>("h0f14"), _T_8) @[Conditional.scala 37:30]
                      when _T_17 : @[Conditional.scala 39:67]
                        mhartid_d <= wdata @[csr_reg.scala 195:19]
                        mhartid_we <= UInt<1>("h01") @[csr_reg.scala 196:20]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_18 = eq(UInt<12>("h0100"), _T_8) @[Conditional.scala 37:30]
                        when _T_18 : @[Conditional.scala 39:67]
                          sstatus_d <= wdata @[csr_reg.scala 199:19]
                          sstatus_we <= UInt<1>("h01") @[csr_reg.scala 200:20]
                          skip @[Conditional.scala 39:67]
                        else : @[Conditional.scala 39:67]
                          node _T_19 = eq(UInt<12>("h07b1"), _T_8) @[Conditional.scala 37:30]
                          when _T_19 : @[Conditional.scala 39:67]
                            dpc_d <= wdata @[csr_reg.scala 203:15]
                            dpc_we <= UInt<1>("h01") @[csr_reg.scala 204:16]
                            skip @[Conditional.scala 39:67]
                          else : @[Conditional.scala 39:67]
                            node _T_20 = eq(UInt<12>("h07b0"), _T_8) @[Conditional.scala 37:30]
                            when _T_20 : @[Conditional.scala 39:67]
                              when io.exu_we_i : @[csr_reg.scala 207:27]
                                node _T_21 = bits(dcsr, 31, 28) @[csr_reg.scala 208:31]
                                node _T_22 = bits(wdata, 27, 9) @[csr_reg.scala 208:46]
                                node _T_23 = bits(dcsr, 8, 6) @[csr_reg.scala 208:61]
                                node _T_24 = bits(wdata, 5, 4) @[csr_reg.scala 208:74]
                                node _T_25 = bits(dcsr, 3, 3) @[csr_reg.scala 208:88]
                                node _T_26 = bits(wdata, 2, 0) @[csr_reg.scala 208:98]
                                node _T_27 = cat(_T_24, _T_25) @[Cat.scala 30:58]
                                node _T_28 = cat(_T_27, _T_26) @[Cat.scala 30:58]
                                node _T_29 = cat(_T_21, _T_22) @[Cat.scala 30:58]
                                node _T_30 = cat(_T_29, _T_23) @[Cat.scala 30:58]
                                node _T_31 = cat(_T_30, _T_28) @[Cat.scala 30:58]
                                dcsr_d <= _T_31 @[csr_reg.scala 208:18]
                                skip @[csr_reg.scala 207:27]
                              else : @[csr_reg.scala 209:22]
                                dcsr_d <= wdata @[csr_reg.scala 210:18]
                                skip @[csr_reg.scala 209:22]
                              dcsr_we <= UInt<1>("h01") @[csr_reg.scala 212:17]
                              skip @[Conditional.scala 39:67]
      skip @[csr_reg.scala 160:12]
    node _T_32 = bits(io.exu_waddr_i, 11, 0) @[csr_reg.scala 218:32]
    node _T_33 = eq(_T_32, UInt<12>("h07a0")) @[csr_reg.scala 218:40]
    node _T_34 = and(_T_33, io.exu_we_i) @[csr_reg.scala 218:57]
    tselect_we <= _T_34 @[csr_reg.scala 218:14]
    node _T_35 = eq(UInt<1>("h00"), tselect_q) @[csr_reg.scala 221:34]
    node _T_36 = and(_T_35, io.exu_we_i) @[csr_reg.scala 221:49]
    node _T_37 = bits(io.exu_waddr_i, 11, 0) @[csr_reg.scala 221:82]
    node _T_38 = eq(_T_37, UInt<12>("h07a1")) @[csr_reg.scala 221:90]
    node _T_39 = and(_T_36, _T_38) @[csr_reg.scala 221:64]
    tmatch_control_we[0] <= _T_39 @[csr_reg.scala 221:26]
    node _T_40 = eq(UInt<1>("h00"), tselect_q) @[csr_reg.scala 222:32]
    node _T_41 = and(_T_40, io.exu_we_i) @[csr_reg.scala 222:47]
    node _T_42 = bits(io.exu_waddr_i, 11, 0) @[csr_reg.scala 222:80]
    node _T_43 = eq(_T_42, UInt<12>("h07a2")) @[csr_reg.scala 222:88]
    node _T_44 = and(_T_41, _T_43) @[csr_reg.scala 222:62]
    tmatch_value_we[0] <= _T_44 @[csr_reg.scala 222:24]
    node _T_45 = eq(UInt<1>("h01"), tselect_q) @[csr_reg.scala 221:34]
    node _T_46 = and(_T_45, io.exu_we_i) @[csr_reg.scala 221:49]
    node _T_47 = bits(io.exu_waddr_i, 11, 0) @[csr_reg.scala 221:82]
    node _T_48 = eq(_T_47, UInt<12>("h07a1")) @[csr_reg.scala 221:90]
    node _T_49 = and(_T_46, _T_48) @[csr_reg.scala 221:64]
    tmatch_control_we[1] <= _T_49 @[csr_reg.scala 221:26]
    node _T_50 = eq(UInt<1>("h01"), tselect_q) @[csr_reg.scala 222:32]
    node _T_51 = and(_T_50, io.exu_we_i) @[csr_reg.scala 222:47]
    node _T_52 = bits(io.exu_waddr_i, 11, 0) @[csr_reg.scala 222:80]
    node _T_53 = eq(_T_52, UInt<12>("h07a2")) @[csr_reg.scala 222:88]
    node _T_54 = and(_T_51, _T_53) @[csr_reg.scala 222:62]
    tmatch_value_we[1] <= _T_54 @[csr_reg.scala 222:24]
    node _T_55 = eq(UInt<2>("h02"), tselect_q) @[csr_reg.scala 221:34]
    node _T_56 = and(_T_55, io.exu_we_i) @[csr_reg.scala 221:49]
    node _T_57 = bits(io.exu_waddr_i, 11, 0) @[csr_reg.scala 221:82]
    node _T_58 = eq(_T_57, UInt<12>("h07a1")) @[csr_reg.scala 221:90]
    node _T_59 = and(_T_56, _T_58) @[csr_reg.scala 221:64]
    tmatch_control_we[2] <= _T_59 @[csr_reg.scala 221:26]
    node _T_60 = eq(UInt<2>("h02"), tselect_q) @[csr_reg.scala 222:32]
    node _T_61 = and(_T_60, io.exu_we_i) @[csr_reg.scala 222:47]
    node _T_62 = bits(io.exu_waddr_i, 11, 0) @[csr_reg.scala 222:80]
    node _T_63 = eq(_T_62, UInt<12>("h07a2")) @[csr_reg.scala 222:88]
    node _T_64 = and(_T_61, _T_63) @[csr_reg.scala 222:62]
    tmatch_value_we[2] <= _T_64 @[csr_reg.scala 222:24]
    node _T_65 = lt(io.exu_wdata_i, UInt<2>("h03")) @[csr_reg.scala 225:35]
    node _T_66 = mux(_T_65, io.exu_wdata_i, UInt<32>("h02")) @[csr_reg.scala 225:19]
    tselect_d <= _T_66 @[csr_reg.scala 225:13]
    node _T_67 = bits(io.exu_wdata_i, 2, 2) @[csr_reg.scala 226:37]
    tmatch_control_d <= _T_67 @[csr_reg.scala 226:20]
    tmatch_value_d <= io.exu_wdata_i @[csr_reg.scala 227:18]
    node _T_68 = gt(UInt<2>("h03"), UInt<1>("h01")) @[csr_reg.scala 229:47]
    node _T_69 = bits(tselect_q, 1, 0)
    node selected_tmatch_control = mux(_T_68, tmatch_control_q[_T_69], tmatch_control_q[0]) @[csr_reg.scala 229:36]
    node _T_70 = gt(UInt<2>("h03"), UInt<1>("h01")) @[csr_reg.scala 230:45]
    node _T_71 = bits(tselect_q, 1, 0)
    node selected_tmatch_value = mux(_T_70, tmatch_value_q[_T_71], tmatch_value_q[0]) @[csr_reg.scala 230:34]
    node _T_72 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_73 = cat(UInt<1>("h01"), selected_tmatch_control) @[Cat.scala 30:58]
    node _T_74 = cat(_T_73, _T_72) @[Cat.scala 30:58]
    node _T_75 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_76 = cat(UInt<4>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_77 = cat(_T_76, _T_75) @[Cat.scala 30:58]
    node _T_78 = cat(_T_77, _T_74) @[Cat.scala 30:58]
    node _T_79 = cat(UInt<4>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_80 = cat(UInt<1>("h00"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_81 = cat(_T_80, _T_79) @[Cat.scala 30:58]
    node _T_82 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_83 = cat(UInt<4>("h02"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_84 = cat(_T_83, UInt<6>("h00")) @[Cat.scala 30:58]
    node _T_85 = cat(_T_84, _T_82) @[Cat.scala 30:58]
    node _T_86 = cat(_T_85, _T_81) @[Cat.scala 30:58]
    node tmatch_control_rdata = cat(_T_86, _T_78) @[Cat.scala 30:58]
    node _T_87 = bits(io.exu_raddr_i, 11, 0) @[csr_reg.scala 257:40]
    node _T_88 = bits(cycle, 31, 0) @[csr_reg.scala 258:23]
    node _T_89 = bits(cycle, 63, 32) @[csr_reg.scala 259:24]
    node _T_90 = eq(UInt<12>("h07a2"), _T_87) @[Mux.scala 68:19]
    node _T_91 = mux(_T_90, selected_tmatch_value, UInt<1>("h00")) @[Mux.scala 68:16]
    node _T_92 = eq(UInt<12>("h07a1"), _T_87) @[Mux.scala 68:19]
    node _T_93 = mux(_T_92, tmatch_control_rdata, _T_91) @[Mux.scala 68:16]
    node _T_94 = eq(UInt<12>("h07a0"), _T_87) @[Mux.scala 68:19]
    node _T_95 = mux(_T_94, tselect_q, _T_93) @[Mux.scala 68:16]
    node _T_96 = eq(UInt<12>("h0301"), _T_87) @[Mux.scala 68:19]
    node _T_97 = mux(_T_96, UInt<32>("h040001100"), _T_95) @[Mux.scala 68:16]
    node _T_98 = eq(UInt<12>("h07b0"), _T_87) @[Mux.scala 68:19]
    node _T_99 = mux(_T_98, dcsr, _T_97) @[Mux.scala 68:16]
    node _T_100 = eq(UInt<12>("h07b1"), _T_87) @[Mux.scala 68:19]
    node _T_101 = mux(_T_100, dpc, _T_99) @[Mux.scala 68:16]
    node _T_102 = eq(UInt<12>("h0f14"), _T_87) @[Mux.scala 68:19]
    node _T_103 = mux(_T_102, mhartid_q, _T_101) @[Mux.scala 68:16]
    node _T_104 = eq(UInt<12>("h07b3"), _T_87) @[Mux.scala 68:19]
    node _T_105 = mux(_T_104, dscratch1_q, _T_103) @[Mux.scala 68:16]
    node _T_106 = eq(UInt<12>("h07b2"), _T_87) @[Mux.scala 68:19]
    node _T_107 = mux(_T_106, dscratch0_q, _T_105) @[Mux.scala 68:16]
    node _T_108 = eq(UInt<12>("h0340"), _T_87) @[Mux.scala 68:19]
    node _T_109 = mux(_T_108, mscratch_q, _T_107) @[Mux.scala 68:16]
    node _T_110 = eq(UInt<12>("h0300"), _T_87) @[Mux.scala 68:19]
    node _T_111 = mux(_T_110, mstatus, _T_109) @[Mux.scala 68:16]
    node _T_112 = eq(UInt<12>("h0304"), _T_87) @[Mux.scala 68:19]
    node _T_113 = mux(_T_112, mie, _T_111) @[Mux.scala 68:16]
    node _T_114 = eq(UInt<12>("h0341"), _T_87) @[Mux.scala 68:19]
    node _T_115 = mux(_T_114, mepc, _T_113) @[Mux.scala 68:16]
    node _T_116 = eq(UInt<12>("h0342"), _T_87) @[Mux.scala 68:19]
    node _T_117 = mux(_T_116, mcause_q, _T_115) @[Mux.scala 68:16]
    node _T_118 = eq(UInt<12>("h0305"), _T_87) @[Mux.scala 68:19]
    node _T_119 = mux(_T_118, mtvec, _T_117) @[Mux.scala 68:16]
    node _T_120 = eq(UInt<12>("h0c80"), _T_87) @[Mux.scala 68:19]
    node _T_121 = mux(_T_120, _T_89, _T_119) @[Mux.scala 68:16]
    node _T_122 = eq(UInt<12>("h0c00"), _T_87) @[Mux.scala 68:19]
    node _T_123 = mux(_T_122, _T_88, _T_121) @[Mux.scala 68:16]
    exu_rdata <= _T_123 @[csr_reg.scala 257:13]
    io.exu_rdata_o <= exu_rdata @[csr_reg.scala 277:18]
    node _T_124 = eq(io.pc_if_i, tmatch_value_q[0]) @[csr_reg.scala 282:60]
    node _T_125 = and(tmatch_control_q[0], _T_124) @[csr_reg.scala 282:45]
    trigger_match[0] <= _T_125 @[csr_reg.scala 282:22]
    node _T_126 = eq(io.pc_if_i, tmatch_value_q[1]) @[csr_reg.scala 282:60]
    node _T_127 = and(tmatch_control_q[1], _T_126) @[csr_reg.scala 282:45]
    trigger_match[1] <= _T_127 @[csr_reg.scala 282:22]
    node _T_128 = eq(io.pc_if_i, tmatch_value_q[2]) @[csr_reg.scala 282:60]
    node _T_129 = and(tmatch_control_q[2], _T_128) @[csr_reg.scala 282:45]
    trigger_match[2] <= _T_129 @[csr_reg.scala 282:22]
    node _T_130 = cat(trigger_match[2], trigger_match[1]) @[csr_reg.scala 285:39]
    node _T_131 = cat(_T_130, trigger_match[0]) @[csr_reg.scala 285:39]
    node _T_132 = neq(_T_131, UInt<1>("h00")) @[csr_reg.scala 285:46]
    io.trigger_match_o <= _T_132 @[csr_reg.scala 285:22]
    inst mtvec_csr of CSR @[csr_reg.scala 288:25]
    mtvec_csr.clock <= clock
    mtvec_csr.reset <= reset
    mtvec_csr.io.wdata_i <= mtvec_d @[csr_reg.scala 289:24]
    mtvec_csr.io.we_i <= mtvec_we @[csr_reg.scala 290:21]
    mtvec <= mtvec_csr.io.rdata_o @[csr_reg.scala 291:11]
    inst mcause_csr of CSR_1 @[csr_reg.scala 293:26]
    mcause_csr.clock <= clock
    mcause_csr.reset <= reset
    mcause_csr.io.wdata_i <= mcause_d @[csr_reg.scala 294:25]
    mcause_csr.io.we_i <= mcause_we @[csr_reg.scala 295:22]
    mcause_q <= mcause_csr.io.rdata_o @[csr_reg.scala 296:12]
    inst mepc_csr of CSR_2 @[csr_reg.scala 298:24]
    mepc_csr.clock <= clock
    mepc_csr.reset <= reset
    mepc_csr.io.wdata_i <= mepc_d @[csr_reg.scala 299:23]
    mepc_csr.io.we_i <= mepc_we @[csr_reg.scala 300:20]
    mepc <= mepc_csr.io.rdata_o @[csr_reg.scala 301:10]
    inst mie_csr of CSR_3 @[csr_reg.scala 303:23]
    mie_csr.clock <= clock
    mie_csr.reset <= reset
    mie_csr.io.wdata_i <= mie_d @[csr_reg.scala 304:22]
    mie_csr.io.we_i <= mie_we @[csr_reg.scala 305:19]
    mie <= mie_csr.io.rdata_o @[csr_reg.scala 306:9]
    inst mstatus_csr of CSR_4 @[csr_reg.scala 308:27]
    mstatus_csr.clock <= clock
    mstatus_csr.reset <= reset
    mstatus_csr.io.wdata_i <= mstatus_d @[csr_reg.scala 309:26]
    mstatus_csr.io.we_i <= mstatus_we @[csr_reg.scala 310:23]
    mstatus <= mstatus_csr.io.rdata_o @[csr_reg.scala 311:13]
    inst mscratch_csr of CSR_5 @[csr_reg.scala 313:28]
    mscratch_csr.clock <= clock
    mscratch_csr.reset <= reset
    mscratch_csr.io.wdata_i <= mscratch_d @[csr_reg.scala 314:27]
    mscratch_csr.io.we_i <= mscratch_we @[csr_reg.scala 315:24]
    mscratch_q <= mscratch_csr.io.rdata_o @[csr_reg.scala 316:14]
    inst dscratch0_csr of CSR_6 @[csr_reg.scala 318:29]
    dscratch0_csr.clock <= clock
    dscratch0_csr.reset <= reset
    dscratch0_csr.io.wdata_i <= dscratch0_d @[csr_reg.scala 319:28]
    dscratch0_csr.io.we_i <= dscratch0_we @[csr_reg.scala 320:25]
    dscratch0_q <= dscratch0_csr.io.rdata_o @[csr_reg.scala 321:15]
    inst dscratch1_csr of CSR_7 @[csr_reg.scala 323:29]
    dscratch1_csr.clock <= clock
    dscratch1_csr.reset <= reset
    dscratch1_csr.io.wdata_i <= dscratch1_d @[csr_reg.scala 324:28]
    dscratch1_csr.io.we_i <= dscratch1_we @[csr_reg.scala 325:25]
    dscratch1_q <= dscratch1_csr.io.rdata_o @[csr_reg.scala 326:15]
    inst mhartid_csr of CSR_8 @[csr_reg.scala 328:27]
    mhartid_csr.clock <= clock
    mhartid_csr.reset <= reset
    mhartid_csr.io.wdata_i <= mhartid_d @[csr_reg.scala 329:26]
    mhartid_csr.io.we_i <= mhartid_we @[csr_reg.scala 330:23]
    mhartid_q <= mhartid_csr.io.rdata_o @[csr_reg.scala 331:13]
    inst dpc_csr of CSR_9 @[csr_reg.scala 333:23]
    dpc_csr.clock <= clock
    dpc_csr.reset <= reset
    dpc_csr.io.wdata_i <= dpc_d @[csr_reg.scala 334:22]
    dpc_csr.io.we_i <= dpc_we @[csr_reg.scala 335:19]
    dpc <= dpc_csr.io.rdata_o @[csr_reg.scala 336:9]
    inst dcsr_csr of CSR_10 @[csr_reg.scala 338:24]
    dcsr_csr.clock <= clock
    dcsr_csr.reset <= reset
    dcsr_csr.io.wdata_i <= dcsr_d @[csr_reg.scala 339:23]
    dcsr_csr.io.we_i <= dcsr_we @[csr_reg.scala 340:20]
    dcsr <= dcsr_csr.io.rdata_o @[csr_reg.scala 341:10]
    inst tselect_csr of CSR_11 @[csr_reg.scala 343:27]
    tselect_csr.clock <= clock
    tselect_csr.reset <= reset
    tselect_csr.io.wdata_i <= tselect_d @[csr_reg.scala 344:26]
    tselect_csr.io.we_i <= tselect_we @[csr_reg.scala 345:23]
    tselect_q <= tselect_csr.io.rdata_o @[csr_reg.scala 346:13]
    inst sstatus_csr of CSR_12 @[csr_reg.scala 348:27]
    sstatus_csr.clock <= clock
    sstatus_csr.reset <= reset
    sstatus_csr.io.wdata_i <= sstatus_d @[csr_reg.scala 349:26]
    sstatus_csr.io.we_i <= sstatus_we @[csr_reg.scala 350:23]
    sstatus_q <= sstatus_csr.io.rdata_o @[csr_reg.scala 351:13]
    inst CSR of CSR_13 @[csr_reg.scala 353:55]
    CSR.clock <= clock
    CSR.reset <= reset
    inst CSR_1 of CSR_14 @[csr_reg.scala 353:55]
    CSR_1.clock <= clock
    CSR_1.reset <= reset
    inst CSR_2 of CSR_15 @[csr_reg.scala 353:55]
    CSR_2.clock <= clock
    CSR_2.reset <= reset
    inst CSR_3 of CSR_16 @[csr_reg.scala 354:53]
    CSR_3.clock <= clock
    CSR_3.reset <= reset
    inst CSR_4 of CSR_17 @[csr_reg.scala 354:53]
    CSR_4.clock <= clock
    CSR_4.reset <= reset
    inst CSR_5 of CSR_18 @[csr_reg.scala 354:53]
    CSR_5.clock <= clock
    CSR_5.reset <= reset
    CSR.io.wdata_i <= tmatch_control_d @[csr_reg.scala 357:39]
    CSR.io.we_i <= tmatch_control_we[0] @[csr_reg.scala 358:36]
    tmatch_control_q[0] <= CSR.io.rdata_o @[csr_reg.scala 359:25]
    CSR_3.io.wdata_i <= tmatch_value_d @[csr_reg.scala 361:37]
    CSR_3.io.we_i <= tmatch_value_we[0] @[csr_reg.scala 362:34]
    tmatch_value_q[0] <= CSR_3.io.rdata_o @[csr_reg.scala 363:23]
    CSR_1.io.wdata_i <= tmatch_control_d @[csr_reg.scala 357:39]
    CSR_1.io.we_i <= tmatch_control_we[1] @[csr_reg.scala 358:36]
    tmatch_control_q[1] <= CSR_1.io.rdata_o @[csr_reg.scala 359:25]
    CSR_4.io.wdata_i <= tmatch_value_d @[csr_reg.scala 361:37]
    CSR_4.io.we_i <= tmatch_value_we[1] @[csr_reg.scala 362:34]
    tmatch_value_q[1] <= CSR_4.io.rdata_o @[csr_reg.scala 363:23]
    CSR_2.io.wdata_i <= tmatch_control_d @[csr_reg.scala 357:39]
    CSR_2.io.we_i <= tmatch_control_we[2] @[csr_reg.scala 358:36]
    tmatch_control_q[2] <= CSR_2.io.rdata_o @[csr_reg.scala 359:25]
    CSR_5.io.wdata_i <= tmatch_value_d @[csr_reg.scala 361:37]
    CSR_5.io.we_i <= tmatch_value_we[2] @[csr_reg.scala 362:34]
    tmatch_value_q[2] <= CSR_5.io.rdata_o @[csr_reg.scala 363:23]
    
  module Delay : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<1>, out : UInt<1>}
    
    reg _T : UInt<1>, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T <= io.in @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_1 : UInt<1>, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_1 <= _T @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_2 : UInt<1>, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_2 <= _T_1 @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_3 : UInt<1>, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_3 <= _T_2 @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg _T_4 : UInt<1>, clock @[Reg.scala 15:16]
    when UInt<1>("h01") : @[Reg.scala 16:19]
      _T_4 <= _T_3 @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    io.out <= _T_4 @[exception.scala 256:12]
    
  module Exception : 
    input clock : Clock
    input reset : Reset
    output io : {flip inst_valid_i : UInt<1>, flip inst_executed_i : UInt<1>, flip inst_ecall_i : UInt<1>, flip inst_ebreak_i : UInt<1>, flip inst_mret_i : UInt<1>, flip inst_dret_i : UInt<1>, flip inst_addr_i : UInt<32>, flip illegal_inst_i : UInt<1>, flip mtvec_i : UInt<32>, flip mepc_i : UInt<32>, flip mstatus_i : UInt<32>, flip mie_i : UInt<32>, flip dpc_i : UInt<32>, flip dcsr_i : UInt<32>, flip int_req_i : UInt<1>, flip int_id_i : UInt<8>, flip trigger_match_i : UInt<1>, flip debug_halt_addr_i : UInt<32>, flip debug_req_i : UInt<1>, csr_we_o : UInt<1>, csr_waddr_o : UInt<32>, csr_wdata_o : UInt<32>, stall_flag_o : UInt<1>, int_addr_o : UInt<32>, int_assert_o : UInt<1>}
    
    reg debug_mode_d : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[exception.scala 59:31]
    reg debug_mode_q : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[exception.scala 60:31]
    reg state_d : UInt<5>, clock with : (reset => (reset, UInt<5>("h01"))) @[exception.scala 61:26]
    reg state_q : UInt<5>, clock with : (reset => (reset, UInt<5>("h01"))) @[exception.scala 62:26]
    reg assert_addr_d : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[exception.scala 63:32]
    reg assert_addr_q : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[exception.scala 64:32]
    reg return_addr_d : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[exception.scala 65:32]
    reg return_addr_q : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[exception.scala 66:32]
    reg trigger_match_d : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[exception.scala 67:34]
    reg trigger_match_q : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[exception.scala 68:34]
    reg csr_we : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[exception.scala 69:25]
    reg csr_waddr : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[exception.scala 70:28]
    reg csr_wdata : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[exception.scala 71:28]
    reg int_id_d : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[exception.scala 73:27]
    reg int_id_q : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[exception.scala 74:27]
    reg in_irq_context_d : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[exception.scala 75:35]
    reg in_irq_context_q : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[exception.scala 76:35]
    wire global_int_en : UInt<1> @[exception.scala 77:29]
    wire interrupt_req_valid : UInt<1> @[exception.scala 78:35]
    node _T = bits(io.mstatus_i, 3, 3) @[exception.scala 80:34]
    global_int_en <= _T @[exception.scala 80:19]
    node _T_1 = and(io.inst_valid_i, io.int_req_i) @[exception.scala 81:44]
    node _T_2 = neq(io.int_id_i, int_id_q) @[exception.scala 81:77]
    node _T_3 = eq(in_irq_context_q, UInt<1>("h00")) @[exception.scala 81:94]
    node _T_4 = or(_T_2, _T_3) @[exception.scala 81:91]
    node _T_5 = and(_T_1, _T_4) @[exception.scala 81:60]
    interrupt_req_valid <= _T_5 @[exception.scala 81:25]
    reg exception_req : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[exception.scala 84:32]
    reg exception_cause : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[exception.scala 85:34]
    when io.illegal_inst_i : @[exception.scala 87:29]
      exception_req <= UInt<1>("h01") @[exception.scala 88:23]
      exception_cause <= UInt<1>("h00") @[exception.scala 89:25]
      skip @[exception.scala 87:29]
    else : @[exception.scala 90:52]
      node _T_6 = and(io.inst_ecall_i, io.inst_valid_i) @[exception.scala 90:32]
      when _T_6 : @[exception.scala 90:52]
        exception_req <= UInt<1>("h01") @[exception.scala 91:23]
        exception_cause <= UInt<2>("h02") @[exception.scala 92:25]
        skip @[exception.scala 90:52]
      else : @[exception.scala 93:17]
        exception_req <= UInt<1>("h00") @[exception.scala 94:23]
        exception_cause <= UInt<1>("h00") @[exception.scala 95:25]
        skip @[exception.scala 93:17]
    node _T_7 = and(interrupt_req_valid, global_int_en) @[exception.scala 99:53]
    node _T_8 = eq(debug_mode_q, UInt<1>("h00")) @[exception.scala 99:73]
    node _T_9 = and(_T_7, _T_8) @[exception.scala 99:70]
    node int_or_exception_req = or(_T_9, exception_req) @[exception.scala 99:88]
    node _T_10 = cat(UInt<24>("h00"), io.int_id_i) @[Cat.scala 30:58]
    node _T_11 = add(UInt<4>("h08"), _T_10) @[exception.scala 100:76]
    node _T_12 = tail(_T_11, 1) @[exception.scala 100:76]
    node int_or_exception_cause = mux(exception_req, exception_cause, _T_12) @[exception.scala 100:36]
    wire trigger_matching : UInt<1> @[exception.scala 103:32]
    inst genTriggerSync of Delay @[exception.scala 104:32]
    genTriggerSync.clock <= clock
    genTriggerSync.reset <= reset
    genTriggerSync.io.in <= trigger_match_q @[exception.scala 105:26]
    trigger_matching <= genTriggerSync.io.out @[exception.scala 106:22]
    reg enter_debug_cause_debugger_req : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[exception.scala 109:49]
    reg enter_debug_cause_single_step : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[exception.scala 110:48]
    reg enter_debug_cause_ebreak : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[exception.scala 111:43]
    reg enter_debug_cause_reset_halt : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[exception.scala 112:47]
    reg enter_debug_cause_trigger : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[exception.scala 113:44]
    reg dcsr_cause_d : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[exception.scala 114:31]
    reg dcsr_cause_q : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[exception.scala 115:31]
    node _T_13 = and(io.trigger_match_i, io.inst_valid_i) @[exception.scala 119:29]
    node _T_14 = eq(trigger_matching, UInt<1>("h00")) @[exception.scala 119:51]
    node _T_15 = and(_T_13, _T_14) @[exception.scala 119:48]
    when _T_15 : @[exception.scala 119:70]
      enter_debug_cause_trigger <= UInt<1>("h01") @[exception.scala 120:41]
      dcsr_cause_d <= UInt<3>("h02") @[exception.scala 121:33]
      skip @[exception.scala 119:70]
    else : @[exception.scala 122:53]
      node _T_16 = and(io.inst_ebreak_i, io.inst_valid_i) @[exception.scala 122:33]
      when _T_16 : @[exception.scala 122:53]
        enter_debug_cause_ebreak <= UInt<1>("h01") @[exception.scala 123:40]
        dcsr_cause_d <= UInt<3>("h01") @[exception.scala 124:33]
        skip @[exception.scala 122:53]
      else : @[exception.scala 125:77]
        node _T_17 = eq(io.inst_addr_i, UInt<1>("h00")) @[exception.scala 125:31]
        node _T_18 = and(_T_17, io.inst_valid_i) @[exception.scala 125:39]
        node _T_19 = and(_T_18, io.debug_req_i) @[exception.scala 125:58]
        when _T_19 : @[exception.scala 125:77]
          enter_debug_cause_reset_halt <= UInt<1>("h01") @[exception.scala 126:44]
          dcsr_cause_d <= UInt<3>("h05") @[exception.scala 127:33]
          skip @[exception.scala 125:77]
        else : @[exception.scala 128:68]
          node _T_20 = eq(debug_mode_q, UInt<1>("h00")) @[exception.scala 128:16]
          node _T_21 = and(_T_20, io.debug_req_i) @[exception.scala 128:30]
          node _T_22 = and(_T_21, io.inst_valid_i) @[exception.scala 128:48]
          when _T_22 : @[exception.scala 128:68]
            enter_debug_cause_debugger_req <= UInt<1>("h01") @[exception.scala 129:46]
            dcsr_cause_d <= UInt<3>("h03") @[exception.scala 130:33]
            skip @[exception.scala 128:68]
          else : @[exception.scala 131:88]
            node _T_23 = eq(debug_mode_q, UInt<1>("h00")) @[exception.scala 131:16]
            node _T_24 = bits(io.dcsr_i, 2, 2) @[exception.scala 131:42]
            node _T_25 = and(_T_23, _T_24) @[exception.scala 131:30]
            node _T_26 = and(_T_25, io.inst_valid_i) @[exception.scala 131:46]
            node _T_27 = and(_T_26, io.inst_executed_i) @[exception.scala 131:65]
            when _T_27 : @[exception.scala 131:88]
              enter_debug_cause_single_step <= UInt<1>("h01") @[exception.scala 132:45]
              dcsr_cause_d <= UInt<3>("h04") @[exception.scala 133:33]
              skip @[exception.scala 131:88]
    node _T_28 = or(enter_debug_cause_debugger_req, enter_debug_cause_single_step) @[exception.scala 135:57]
    node _T_29 = or(_T_28, enter_debug_cause_reset_halt) @[exception.scala 136:39]
    node _T_30 = or(_T_29, enter_debug_cause_trigger) @[exception.scala 137:38]
    node debug_mode_req = or(_T_30, enter_debug_cause_ebreak) @[exception.scala 138:35]
    node _T_31 = eq(state_q, UInt<1>("h00")) @[exception.scala 142:25]
    node _T_32 = eq(_T_31, UInt<5>("h01")) @[exception.scala 142:34]
    node _T_33 = eq(state_q, UInt<1>("h00")) @[exception.scala 143:10]
    node _T_34 = eq(_T_33, UInt<5>("h08")) @[exception.scala 143:19]
    node _T_35 = and(_T_32, _T_34) @[exception.scala 142:46]
    node _T_36 = or(_T_35, int_or_exception_req) @[exception.scala 143:33]
    node _T_37 = or(_T_36, debug_mode_req) @[exception.scala 144:30]
    node _T_38 = or(_T_37, io.inst_mret_i) @[exception.scala 145:24]
    node _T_39 = or(_T_38, io.inst_dret_i) @[exception.scala 146:24]
    io.stall_flag_o <= _T_39 @[exception.scala 142:21]
    state_d <= state_q @[exception.scala 149:13]
    assert_addr_d <= assert_addr_q @[exception.scala 150:19]
    debug_mode_d <= debug_mode_q @[exception.scala 151:18]
    return_addr_d <= return_addr_q @[exception.scala 152:19]
    csr_we <= UInt<1>("h00") @[exception.scala 153:12]
    csr_waddr <= UInt<32>("h00") @[exception.scala 154:15]
    csr_wdata <= UInt<32>("h00") @[exception.scala 155:15]
    trigger_match_d <= trigger_match_q @[exception.scala 156:21]
    int_id_d <= int_id_q @[exception.scala 157:14]
    in_irq_context_d <= in_irq_context_q @[exception.scala 158:22]
    node _T_40 = eq(UInt<5>("h01"), state_q) @[Conditional.scala 37:30]
    when _T_40 : @[Conditional.scala 40:58]
      node _T_41 = eq(debug_mode_q, UInt<1>("h00")) @[exception.scala 162:42]
      node _T_42 = and(int_or_exception_req, _T_41) @[exception.scala 162:39]
      when _T_42 : @[exception.scala 162:57]
        csr_we <= UInt<1>("h01") @[exception.scala 163:24]
        node _T_43 = cat(UInt<20>("h00"), UInt<12>("h0342")) @[Cat.scala 30:58]
        csr_waddr <= _T_43 @[exception.scala 164:27]
        csr_wdata <= int_or_exception_cause @[exception.scala 165:27]
        assert_addr_d <= io.mtvec_i @[exception.scala 166:31]
        return_addr_d <= io.inst_addr_i @[exception.scala 167:31]
        state_d <= UInt<5>("h010") @[exception.scala 168:25]
        int_id_d <= io.int_id_i @[exception.scala 169:26]
        in_irq_context_d <= UInt<1>("h01") @[exception.scala 170:34]
        skip @[exception.scala 162:57]
      else : @[exception.scala 171:40]
        when debug_mode_req : @[exception.scala 171:40]
          debug_mode_d <= UInt<1>("h01") @[exception.scala 172:30]
          node _T_44 = or(enter_debug_cause_debugger_req, enter_debug_cause_single_step) @[exception.scala 173:53]
          node _T_45 = or(_T_44, enter_debug_cause_trigger) @[exception.scala 173:86]
          node _T_46 = or(_T_45, enter_debug_cause_reset_halt) @[exception.scala 173:115]
          when _T_46 : @[exception.scala 173:148]
            csr_we <= UInt<1>("h01") @[exception.scala 174:28]
            node _T_47 = cat(UInt<20>("h00"), UInt<12>("h07b1")) @[Cat.scala 30:58]
            csr_waddr <= _T_47 @[exception.scala 175:31]
            node _T_48 = mux(enter_debug_cause_reset_halt, UInt<1>("h00"), io.inst_addr_i) @[exception.scala 176:37]
            csr_wdata <= _T_48 @[exception.scala 176:31]
            skip @[exception.scala 173:148]
          when enter_debug_cause_trigger : @[exception.scala 178:50]
            trigger_match_d <= UInt<1>("h01") @[exception.scala 179:37]
            skip @[exception.scala 178:50]
          assert_addr_d <= io.debug_halt_addr_i @[exception.scala 181:31]
          when enter_debug_cause_ebreak : @[exception.scala 182:49]
            state_d <= UInt<5>("h08") @[exception.scala 183:29]
            skip @[exception.scala 182:49]
          else : @[exception.scala 184:30]
            state_d <= UInt<5>("h04") @[exception.scala 185:29]
            skip @[exception.scala 184:30]
          skip @[exception.scala 171:40]
        else : @[exception.scala 187:40]
          when io.inst_mret_i : @[exception.scala 187:40]
            in_irq_context_d <= UInt<1>("h00") @[exception.scala 188:34]
            assert_addr_d <= io.mepc_i @[exception.scala 189:31]
            csr_we <= UInt<1>("h01") @[exception.scala 190:24]
            node _T_49 = cat(UInt<20>("h00"), UInt<12>("h0300")) @[Cat.scala 30:58]
            csr_waddr <= _T_49 @[exception.scala 191:27]
            node _T_50 = bits(io.mstatus_i, 31, 4) @[exception.scala 192:46]
            node _T_51 = bits(io.mstatus_i, 2, 0) @[exception.scala 192:74]
            node _T_52 = cat(_T_50, UInt<1>("h01")) @[Cat.scala 30:58]
            node _T_53 = cat(_T_52, _T_51) @[Cat.scala 30:58]
            csr_wdata <= _T_53 @[exception.scala 192:27]
            state_d <= UInt<5>("h08") @[exception.scala 193:25]
            skip @[exception.scala 187:40]
          else : @[exception.scala 194:40]
            when io.inst_dret_i : @[exception.scala 194:40]
              assert_addr_d <= io.dpc_i @[exception.scala 195:31]
              state_d <= UInt<5>("h08") @[exception.scala 196:25]
              debug_mode_d <= UInt<1>("h00") @[exception.scala 197:30]
              trigger_match_d <= UInt<1>("h00") @[exception.scala 198:33]
              skip @[exception.scala 194:40]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_54 = eq(UInt<5>("h010"), state_q) @[Conditional.scala 37:30]
      when _T_54 : @[Conditional.scala 39:67]
        csr_we <= UInt<1>("h01") @[exception.scala 203:20]
        node _T_55 = cat(UInt<20>("h00"), UInt<12>("h0300")) @[Cat.scala 30:58]
        csr_waddr <= _T_55 @[exception.scala 204:23]
        node _T_56 = bits(io.mstatus_i, 31, 4) @[exception.scala 205:42]
        node _T_57 = bits(io.mstatus_i, 2, 0) @[exception.scala 205:71]
        node _T_58 = cat(_T_56, UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_59 = cat(_T_58, _T_57) @[Cat.scala 30:58]
        csr_wdata <= _T_59 @[exception.scala 205:23]
        state_d <= UInt<5>("h02") @[exception.scala 206:21]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_60 = eq(UInt<5>("h02"), state_q) @[Conditional.scala 37:30]
        when _T_60 : @[Conditional.scala 39:67]
          csr_we <= UInt<1>("h01") @[exception.scala 210:20]
          node _T_61 = cat(UInt<20>("h00"), UInt<12>("h0341")) @[Cat.scala 30:58]
          csr_waddr <= _T_61 @[exception.scala 211:23]
          csr_wdata <= return_addr_q @[exception.scala 212:23]
          state_d <= UInt<5>("h08") @[exception.scala 213:21]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_62 = eq(UInt<5>("h04"), state_q) @[Conditional.scala 37:30]
          when _T_62 : @[Conditional.scala 39:67]
            csr_we <= UInt<1>("h01") @[exception.scala 217:20]
            node _T_63 = cat(UInt<20>("h00"), UInt<12>("h07b0")) @[Cat.scala 30:58]
            csr_waddr <= _T_63 @[exception.scala 218:23]
            node _T_64 = bits(io.dcsr_i, 31, 9) @[exception.scala 219:39]
            node _T_65 = bits(io.dcsr_i, 5, 0) @[exception.scala 219:70]
            node _T_66 = cat(_T_64, dcsr_cause_q) @[Cat.scala 30:58]
            node _T_67 = cat(_T_66, _T_65) @[Cat.scala 30:58]
            csr_wdata <= _T_67 @[exception.scala 219:23]
            state_d <= UInt<5>("h08") @[exception.scala 220:21]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_68 = eq(UInt<5>("h08"), state_q) @[Conditional.scala 37:30]
            when _T_68 : @[Conditional.scala 39:67]
              csr_we <= UInt<1>("h00") @[exception.scala 224:20]
              state_d <= UInt<5>("h01") @[exception.scala 225:21]
              skip @[Conditional.scala 39:67]
    io.csr_we_o <= csr_we @[exception.scala 229:17]
    io.csr_waddr_o <= csr_waddr @[exception.scala 230:20]
    io.csr_wdata_o <= csr_wdata @[exception.scala 231:20]
    node _T_69 = eq(state_q, UInt<5>("h08")) @[exception.scala 232:33]
    io.int_assert_o <= _T_69 @[exception.scala 232:21]
    io.int_addr_o <= assert_addr_q @[exception.scala 233:19]
    state_q <= state_d @[exception.scala 237:21]
    assert_addr_q <= assert_addr_d @[exception.scala 238:27]
    debug_mode_q <= debug_mode_d @[exception.scala 239:26]
    return_addr_q <= return_addr_d @[exception.scala 240:27]
    dcsr_cause_q <= dcsr_cause_d @[exception.scala 241:26]
    trigger_match_q <= trigger_match_d @[exception.scala 242:29]
    int_id_q <= int_id_d @[exception.scala 243:22]
    in_irq_context_q <= in_irq_context_d @[exception.scala 244:30]
    
  module top : 
    input clock : Clock
    input reset : UInt<1>
    output io : {instr_req_o : UInt<1>, flip instr_gnt_i : UInt<1>, flip instr_rvalid_i : UInt<1>, instr_addr_o : UInt<32>, flip instr_rdata_i : UInt<32>, flip instr_err_i : UInt<1>, mem_access_misaligned_o : UInt<1>, mem_stall_o : UInt<1>, mem_addr_o : UInt<32>, mem_mem_we_o : UInt<1>, mem_be_o : UInt<4>, mem_req_o : UInt<1>, flip int_req_i : UInt<1>, flip int_id_i : UInt<7>, flip mem_rdata_i : UInt<32>, flip mem_gnt_i : UInt<1>, flip mem_rvalid_i : UInt<1>}
    
    inst fetch of IFU @[Top.scala 35:25]
    fetch.clock <= clock
    fetch.reset <= reset
    inst if_id of IF_ID @[Top.scala 36:26]
    if_id.clock <= clock
    if_id.reset <= reset
    inst id of ID @[Top.scala 37:20]
    id.clock <= clock
    id.reset <= reset
    inst id_ex of ID_EX @[Top.scala 38:26]
    id_ex.clock <= clock
    id_ex.reset <= reset
    inst ex of EX @[Top.scala 39:24]
    ex.clock <= clock
    ex.reset <= reset
    inst ex_mem of EX_MEM @[Top.scala 40:26]
    ex_mem.clock <= clock
    ex_mem.reset <= reset
    inst mem of MEM @[Top.scala 41:25]
    mem.clock <= clock
    mem.reset <= reset
    inst mem_wb of MEM_WB @[Top.scala 42:26]
    mem_wb.clock <= clock
    mem_wb.reset <= reset
    inst wb of WB @[Top.scala 43:25]
    wb.clock <= clock
    wb.reset <= reset
    inst regfile of Registers @[Top.scala 44:24]
    regfile.clock <= clock
    regfile.reset <= reset
    inst Ctrl of PipeCtrl @[Top.scala 45:21]
    Ctrl.clock <= clock
    Ctrl.reset <= reset
    inst csr_reg of CSRReg @[Top.scala 46:25]
    csr_reg.clock <= clock
    csr_reg.reset <= reset
    inst exception of Exception @[Top.scala 47:26]
    exception.clock <= clock
    exception.reset <= reset
    if_id.io.if_i.inst <= fetch.io.ifu.inst @[Top.scala 49:17]
    if_id.io.if_i.inst_valid <= fetch.io.ifu.inst_valid @[Top.scala 49:17]
    if_id.io.if_i.pc <= fetch.io.ifu.pc @[Top.scala 49:17]
    id.io.if_i.inst <= if_id.io.id_o.inst @[Top.scala 50:18]
    id.io.if_i.inst_valid <= if_id.io.id_o.inst_valid @[Top.scala 50:18]
    id.io.if_i.pc <= if_id.io.id_o.pc @[Top.scala 50:18]
    id_ex.io.id_i.dec_info_bus <= id.io.idu_o.dec_info_bus @[Top.scala 51:16]
    id_ex.io.id_i.dec_imm <= id.io.idu_o.dec_imm @[Top.scala 51:16]
    id_ex.io.id_i.rs2_rdata <= id.io.idu_o.rs2_rdata @[Top.scala 51:16]
    id_ex.io.id_i.rs1_rdata <= id.io.idu_o.rs1_rdata @[Top.scala 51:16]
    id_ex.io.id_i.rd_we <= id.io.idu_o.rd_we @[Top.scala 51:16]
    id_ex.io.id_i.rd_waddr <= id.io.idu_o.rd_waddr @[Top.scala 51:16]
    id_ex.io.id_i.pc <= id.io.idu_o.pc @[Top.scala 51:16]
    id_ex.io.id_i.inst <= id.io.idu_o.inst @[Top.scala 51:16]
    id_ex.io.id_i.inst_valid <= id.io.idu_o.inst_valid @[Top.scala 51:16]
    ex.io.id_i.dec_info_bus <= id_ex.io.ex_o.dec_info_bus @[Top.scala 52:18]
    ex.io.id_i.dec_imm <= id_ex.io.ex_o.dec_imm @[Top.scala 52:18]
    ex.io.id_i.rs2_rdata <= id_ex.io.ex_o.rs2_rdata @[Top.scala 52:18]
    ex.io.id_i.rs1_rdata <= id_ex.io.ex_o.rs1_rdata @[Top.scala 52:18]
    ex.io.id_i.rd_we <= id_ex.io.ex_o.rd_we @[Top.scala 52:18]
    ex.io.id_i.rd_waddr <= id_ex.io.ex_o.rd_waddr @[Top.scala 52:18]
    ex.io.id_i.pc <= id_ex.io.ex_o.pc @[Top.scala 52:18]
    ex.io.id_i.inst <= id_ex.io.ex_o.inst @[Top.scala 52:18]
    ex.io.id_i.inst_valid <= id_ex.io.ex_o.inst_valid @[Top.scala 52:18]
    ex_mem.io.ex_i.mem_op_sw_o <= ex.io.ex_o.mem_op_sw_o @[Top.scala 53:15]
    ex_mem.io.ex_i.mem_op_sh_o <= ex.io.ex_o.mem_op_sh_o @[Top.scala 53:15]
    ex_mem.io.ex_i.mem_op_sb_o <= ex.io.ex_o.mem_op_sb_o @[Top.scala 53:15]
    ex_mem.io.ex_i.mem_op_lhu_o <= ex.io.ex_o.mem_op_lhu_o @[Top.scala 53:15]
    ex_mem.io.ex_i.mem_op_lbu_o <= ex.io.ex_o.mem_op_lbu_o @[Top.scala 53:15]
    ex_mem.io.ex_i.mem_op_lw_o <= ex.io.ex_o.mem_op_lw_o @[Top.scala 53:15]
    ex_mem.io.ex_i.mem_op_lh_o <= ex.io.ex_o.mem_op_lh_o @[Top.scala 53:15]
    ex_mem.io.ex_i.mem_op_lb_o <= ex.io.ex_o.mem_op_lb_o @[Top.scala 53:15]
    ex_mem.io.ex_i.mem_rs2_data_o <= ex.io.ex_o.mem_rs2_data_o @[Top.scala 53:15]
    ex_mem.io.ex_i.mem_op2_o <= ex.io.ex_o.mem_op2_o @[Top.scala 53:15]
    ex_mem.io.ex_i.mem_op1_o <= ex.io.ex_o.mem_op1_o @[Top.scala 53:15]
    ex_mem.io.ex_i.req_mem_o <= ex.io.ex_o.req_mem_o @[Top.scala 53:15]
    ex_mem.io.ex_i.csr_rdata_o <= ex.io.ex_o.csr_rdata_o @[Top.scala 53:15]
    ex_mem.io.ex_i.csr_reg_we <= ex.io.ex_o.csr_reg_we @[Top.scala 53:15]
    ex_mem.io.ex_i.muldiv_reg_we_o <= ex.io.ex_o.muldiv_reg_we_o @[Top.scala 53:15]
    ex_mem.io.ex_i.muldiv_reg_wdata_o <= ex.io.ex_o.muldiv_reg_wdata_o @[Top.scala 53:15]
    ex_mem.io.ex_i.bjp_res <= ex.io.ex_o.bjp_res @[Top.scala 53:15]
    ex_mem.io.ex_i.bjp_op_jump <= ex.io.ex_o.bjp_op_jump @[Top.scala 53:15]
    ex_mem.io.ex_i.alu_res <= ex.io.ex_o.alu_res @[Top.scala 53:15]
    ex_mem.io.ex_i.req_alu <= ex.io.ex_o.req_alu @[Top.scala 53:15]
    ex_mem.io.ex_i.rd_we <= ex.io.ex_o.rd_we @[Top.scala 53:15]
    ex_mem.io.ex_i.rd_waddr <= ex.io.ex_o.rd_waddr @[Top.scala 53:15]
    ex_mem.io.ex_i.pc <= ex.io.ex_o.pc @[Top.scala 53:15]
    ex_mem.io.ex_i.inst <= ex.io.ex_o.inst @[Top.scala 53:15]
    ex_mem.io.ex_i.inst_valid <= ex.io.ex_o.inst_valid @[Top.scala 53:15]
    mem.io.ex_i.mem_op_sw_o <= ex_mem.io.mem_o.mem_op_sw_o @[Top.scala 54:20]
    mem.io.ex_i.mem_op_sh_o <= ex_mem.io.mem_o.mem_op_sh_o @[Top.scala 54:20]
    mem.io.ex_i.mem_op_sb_o <= ex_mem.io.mem_o.mem_op_sb_o @[Top.scala 54:20]
    mem.io.ex_i.mem_op_lhu_o <= ex_mem.io.mem_o.mem_op_lhu_o @[Top.scala 54:20]
    mem.io.ex_i.mem_op_lbu_o <= ex_mem.io.mem_o.mem_op_lbu_o @[Top.scala 54:20]
    mem.io.ex_i.mem_op_lw_o <= ex_mem.io.mem_o.mem_op_lw_o @[Top.scala 54:20]
    mem.io.ex_i.mem_op_lh_o <= ex_mem.io.mem_o.mem_op_lh_o @[Top.scala 54:20]
    mem.io.ex_i.mem_op_lb_o <= ex_mem.io.mem_o.mem_op_lb_o @[Top.scala 54:20]
    mem.io.ex_i.mem_rs2_data_o <= ex_mem.io.mem_o.mem_rs2_data_o @[Top.scala 54:20]
    mem.io.ex_i.mem_op2_o <= ex_mem.io.mem_o.mem_op2_o @[Top.scala 54:20]
    mem.io.ex_i.mem_op1_o <= ex_mem.io.mem_o.mem_op1_o @[Top.scala 54:20]
    mem.io.ex_i.req_mem_o <= ex_mem.io.mem_o.req_mem_o @[Top.scala 54:20]
    mem.io.ex_i.csr_rdata_o <= ex_mem.io.mem_o.csr_rdata_o @[Top.scala 54:20]
    mem.io.ex_i.csr_reg_we <= ex_mem.io.mem_o.csr_reg_we @[Top.scala 54:20]
    mem.io.ex_i.muldiv_reg_we_o <= ex_mem.io.mem_o.muldiv_reg_we_o @[Top.scala 54:20]
    mem.io.ex_i.muldiv_reg_wdata_o <= ex_mem.io.mem_o.muldiv_reg_wdata_o @[Top.scala 54:20]
    mem.io.ex_i.bjp_res <= ex_mem.io.mem_o.bjp_res @[Top.scala 54:20]
    mem.io.ex_i.bjp_op_jump <= ex_mem.io.mem_o.bjp_op_jump @[Top.scala 54:20]
    mem.io.ex_i.alu_res <= ex_mem.io.mem_o.alu_res @[Top.scala 54:20]
    mem.io.ex_i.req_alu <= ex_mem.io.mem_o.req_alu @[Top.scala 54:20]
    mem.io.ex_i.rd_we <= ex_mem.io.mem_o.rd_we @[Top.scala 54:20]
    mem.io.ex_i.rd_waddr <= ex_mem.io.mem_o.rd_waddr @[Top.scala 54:20]
    mem.io.ex_i.pc <= ex_mem.io.mem_o.pc @[Top.scala 54:20]
    mem.io.ex_i.inst <= ex_mem.io.mem_o.inst @[Top.scala 54:20]
    mem.io.ex_i.inst_valid <= ex_mem.io.mem_o.inst_valid @[Top.scala 54:20]
    mem_wb.io.mem_i.csr_reg_wdata <= mem.io.mem_o.csr_reg_wdata @[Top.scala 55:17]
    mem_wb.io.mem_i.csr_reg_we <= mem.io.mem_o.csr_reg_we @[Top.scala 55:17]
    mem_wb.io.mem_i.mem_wdata <= mem.io.mem_o.mem_wdata @[Top.scala 55:17]
    mem_wb.io.mem_i.mem_reg_we <= mem.io.mem_o.mem_reg_we @[Top.scala 55:17]
    mem_wb.io.mem_i.muldiv_reg_wdata <= mem.io.mem_o.muldiv_reg_wdata @[Top.scala 55:17]
    mem_wb.io.mem_i.muldiv_reg_we <= mem.io.mem_o.muldiv_reg_we @[Top.scala 55:17]
    mem_wb.io.mem_i.bjp_res <= mem.io.mem_o.bjp_res @[Top.scala 55:17]
    mem_wb.io.mem_i.bjp_op_jump <= mem.io.mem_o.bjp_op_jump @[Top.scala 55:17]
    mem_wb.io.mem_i.alu_res <= mem.io.mem_o.alu_res @[Top.scala 55:17]
    mem_wb.io.mem_i.req_alu <= mem.io.mem_o.req_alu @[Top.scala 55:17]
    mem_wb.io.mem_i.rd_we <= mem.io.mem_o.rd_we @[Top.scala 55:17]
    mem_wb.io.mem_i.rd_waddr <= mem.io.mem_o.rd_waddr @[Top.scala 55:17]
    mem_wb.io.mem_i.pc <= mem.io.mem_o.pc @[Top.scala 55:17]
    mem_wb.io.mem_i.inst <= mem.io.mem_o.inst @[Top.scala 55:17]
    mem_wb.io.mem_i.inst_valid <= mem.io.mem_o.inst_valid @[Top.scala 55:17]
    wb.io.wb_i.csr_reg_wdata <= mem_wb.io.wb_o.csr_reg_wdata @[Top.scala 56:19]
    wb.io.wb_i.csr_reg_we <= mem_wb.io.wb_o.csr_reg_we @[Top.scala 56:19]
    wb.io.wb_i.mem_wdata <= mem_wb.io.wb_o.mem_wdata @[Top.scala 56:19]
    wb.io.wb_i.mem_reg_we <= mem_wb.io.wb_o.mem_reg_we @[Top.scala 56:19]
    wb.io.wb_i.muldiv_reg_wdata <= mem_wb.io.wb_o.muldiv_reg_wdata @[Top.scala 56:19]
    wb.io.wb_i.muldiv_reg_we <= mem_wb.io.wb_o.muldiv_reg_we @[Top.scala 56:19]
    wb.io.wb_i.bjp_res <= mem_wb.io.wb_o.bjp_res @[Top.scala 56:19]
    wb.io.wb_i.bjp_op_jump <= mem_wb.io.wb_o.bjp_op_jump @[Top.scala 56:19]
    wb.io.wb_i.alu_res <= mem_wb.io.wb_o.alu_res @[Top.scala 56:19]
    wb.io.wb_i.req_alu <= mem_wb.io.wb_o.req_alu @[Top.scala 56:19]
    wb.io.wb_i.rd_we <= mem_wb.io.wb_o.rd_we @[Top.scala 56:19]
    wb.io.wb_i.rd_waddr <= mem_wb.io.wb_o.rd_waddr @[Top.scala 56:19]
    wb.io.wb_i.pc <= mem_wb.io.wb_o.pc @[Top.scala 56:19]
    wb.io.wb_i.inst <= mem_wb.io.wb_o.inst @[Top.scala 56:19]
    wb.io.wb_i.inst_valid <= mem_wb.io.wb_o.inst_valid @[Top.scala 56:19]
    regfile.io.wen <= wb.io.reg_we_o @[Top.scala 58:19]
    regfile.io.waddr <= wb.io.reg_waddr_o @[Top.scala 59:21]
    regfile.io.wdata <= wb.io.reg_wdata_o @[Top.scala 60:21]
    id.io.inst_ex <= id_ex.io.ex_o.inst @[Top.scala 62:18]
    id.io.rd_ex <= id_ex.io.ex_o.rd_waddr @[Top.scala 63:16]
    id.io.access_rd_ex <= id_ex.io.ex_o.rd_we @[Top.scala 64:23]
    id.io.inst_mem <= ex_mem.io.mem_o.inst @[Top.scala 66:19]
    id.io.rd_mem <= ex_mem.io.mem_o.rd_waddr @[Top.scala 67:17]
    id.io.access_rd_mem <= ex_mem.io.mem_o.rd_we @[Top.scala 68:24]
    ex.io.last_rs1_rd <= id.io.last_rs1_rd @[Top.scala 70:22]
    ex.io.last_rs2_rd <= id.io.last_rs2_rd @[Top.scala 71:22]
    ex.io.last_two_rs1_rd <= id.io.last_two_rs1_rd @[Top.scala 72:26]
    ex.io.last_two_rs2_rd <= id.io.last_two_rs2_rd @[Top.scala 73:26]
    ex.io.mem_alu_res <= mem.io.mem_o.alu_res @[Top.scala 74:22]
    ex.io.mem_pc <= ex_mem.io.mem_o.bjp_res @[Top.scala 75:17]
    ex.io.wb_alu_res <= mem_wb.io.wb_o.alu_res @[Top.scala 76:21]
    ex.io.wb_pc <= mem_wb.io.wb_o.bjp_res @[Top.scala 77:16]
    regfile.io.rdaddr1_i <= id.io.rs1_raddr @[Top.scala 79:25]
    regfile.io.rdaddr2_i <= id.io.rs2_raddr @[Top.scala 80:25]
    id.io.reg1_rdata_i <= regfile.io.rdata1_o @[Top.scala 81:23]
    id.io.reg2_rdata_i <= regfile.io.rdata2_o @[Top.scala 82:23]
    fetch.io.flush_i <= Ctrl.io.flush_IF_ID @[Top.scala 84:21]
    if_id.io.flush_i <= Ctrl.io.flush_IF_ID @[Top.scala 85:21]
    id_ex.io.flush_i <= Ctrl.io.flush_IF_ID @[Top.scala 86:21]
    Ctrl.io.stall_from_if_i <= fetch.io.stall_i @[Top.scala 88:28]
    Ctrl.io.stall_from_id_i <= id.io.stall_o @[Top.scala 89:28]
    node _T = or(ex.io.hold_flag_o, exception.io.stall_flag_o) @[Top.scala 90:47]
    Ctrl.io.stall_from_ex_i <= _T @[Top.scala 90:28]
    Ctrl.io.stall_from_mem_i <= mem.io.mem_stall_o @[Top.scala 91:29]
    Ctrl.io.int_addr_i <= exception.io.int_addr_o @[Top.scala 92:23]
    Ctrl.io.int_assert_i <= exception.io.int_assert_o @[Top.scala 93:25]
    exception.io.illegal_inst_i <= id.io.illegal_inst_o @[Top.scala 95:32]
    exception.io.inst_valid_i <= id.io.idu_o.inst_valid @[Top.scala 96:30]
    exception.io.inst_ecall_i <= ex.io.inst_ecall_o @[Top.scala 98:30]
    exception.io.inst_ebreak_i <= ex.io.inst_ebreak_o @[Top.scala 99:31]
    exception.io.inst_mret_i <= ex.io.inst_mret_o @[Top.scala 100:29]
    exception.io.inst_dret_i <= ex.io.inst_dret_o @[Top.scala 101:29]
    exception.io.mtvec_i <= csr_reg.io.mtvec_o @[Top.scala 102:25]
    exception.io.mepc_i <= csr_reg.io.mepc_o @[Top.scala 103:24]
    exception.io.mstatus_i <= csr_reg.io.mstatus_o @[Top.scala 104:27]
    exception.io.mie_i <= csr_reg.io.mie_o @[Top.scala 105:23]
    exception.io.dpc_i <= csr_reg.io.dpc_o @[Top.scala 106:23]
    exception.io.dcsr_i <= csr_reg.io.dcsr_o @[Top.scala 107:24]
    exception.io.trigger_match_i <= csr_reg.io.trigger_match_o @[Top.scala 108:33]
    ex.io.int_stall_i <= exception.io.stall_flag_o @[Top.scala 109:22]
    exception.io.int_req_i <= io.int_req_i @[Top.scala 110:27]
    exception.io.int_id_i <= io.int_id_i @[Top.scala 111:26]
    csr_reg.io.excep_we_i <= exception.io.csr_we_o @[Top.scala 114:26]
    csr_reg.io.excep_waddr_i <= exception.io.csr_waddr_o @[Top.scala 115:29]
    csr_reg.io.excep_wdata_i <= exception.io.csr_wdata_o @[Top.scala 116:29]
    
